{"abstractText": "The Holy Grail of a decentralised stablecoin is achieved on rigorous mathematical frameworks, obtaining multiple advantageous proofs: stability, convergence, truthfulness, faithfulness, and malicious-security. These properties could only be attained by the novel and interdisciplinary combination of previously unrelated fields: model predictive control, deep learning, alternating direction method of multipliers (consensus-ADMM), mechanism design, secure multi-party computation, and zero-knowledge proofs. For the first time, this paper proves: the feasibility of decentralising the central bank while securely preserving its independence in a decentralised computation setting the benefits for price stability of combining mechanism design, provable security, and control theory, unlike the heuristics of previous stablecoins the implementation of complex monetary policies on a stablecoin, equivalent to ones used by central banks and beyond the current fixed rules of cryptocurrencies that hinder their price stability methods to circumvent the impossibilities of Guaranteed Output Delivery (G.O.D.) and fairness: standing on truthfulness and faithfulness, we reach G.O.D. and fairness under the assumption of rational parties As a corollary, a decentralised artificial intelligence is able to conduct the monetary policy of a stablecoin, minimising human intervention.", "authors": [{"affiliations": [], "name": "David Cerezo S\u00e1nchez"}], "id": "SP:f41c6195ba301f174709fa1a9c44fdbdbde13786", "references": [{"authors": ["Pablo Daniel Azar", "Shafi Goldwasser"], "title": "and Sunoo Park", "venue": "How to Incentivize Data-Driven Collaboration Among Competing Parties,", "year": 2015}, {"authors": ["Andreea B. Alexandru", "Konstantinos Gatsis", "Yasser Shoukry", "Sanjit A. Seshia", "Paulo Tabuada", "George J"], "title": "Pappas", "venue": "Cloud-based Quadratic Optimization with Partially Homomorphic Encryption,", "year": 2018}, {"authors": ["Andreea B. Alexandru", "Manfred Morari", "George J"], "title": "Pappas", "venue": "Cloud-based MPC with Encrypted Data,", "year": 2018}, {"authors": ["Andreea B. Alexandru", "Manfred Morari", "George J"], "title": "Pappas", "venue": "Secure Multi-party Computation for Cloud-based Control,", "year": 2019}, {"authors": ["David Andolfatto"], "title": "Assessing the Impact of Central Bank Digital Currency on Private Banks, 2018", "year": 2018}, {"authors": ["Masanao Aoki"], "title": "Decentralized Monetary Rules in a Three-Country Model and Time Series Evidence of Structural Dependence", "year": 1988}, {"authors": ["Emanuele Borgonovo", "Stefano Caselli", "Alessandra Cillo", "Donato Masciandaro"], "title": "and Giovanni Rabitti", "venue": "Privacy and Money: It Matters,", "year": 2019}, {"authors": ["Dirk Bullmann", "Jonas Klemm"], "title": "and Andrea Pinna", "venue": "search for stability in crypto-assets: are stablecoins the solution?,", "year": 2019}, {"authors": ["Michael D. Bordo", "Andrew T"], "title": "Levin", "venue": "Central Bank Digital Currency and the Future of Monetary Policy,", "year": 2017}, {"authors": ["Fabrice Boudot"], "title": "Efficient Proofs that a Committed Number Lies in an Interval", "year": 2000}, {"authors": ["Stephen Boyd", "Neal Parikh", "Eric Chu", "Borja Peleato"], "title": "and Jonathan Eckstein", "venue": "Distributed Optimization and Statistical Learning via the Alternating Direction Method of Multipliers,", "year": 2011}, {"authors": ["Nicolas Cachanosky"], "title": "Can Bitcoin Become Money? The Monetary Rule Problem, 2018", "year": 2018}, {"authors": ["Tsung-Hui Chang"], "title": "A Proximal Dual Consensus ADMM Method for Multi-Agent Constrained Optimization, 2014", "year": 2014}, {"authors": ["Ran Cohen", "Yehuda Lindell"], "title": "Fairness versus Guaranteed Output Delivery", "venue": "Secure Multiparty Computation,", "year": 2014}, {"authors": ["I. Damgard", "V. Pastro", "N.P. Smart"], "title": "and S", "venue": "Zakarias. Multiparty Computation from Somewhat Homomorphic Encryption,", "year": 2011}, {"authors": ["Moritz Schulze Darup", "Adrian Redder", "Iman Shames", "Farhad Farokhi"], "title": "and Daniel Quevedo", "venue": "Towards encrypted MPC for linear constrained systems,", "year": 2018}, {"authors": ["Pierre-Alain Fouque", "Guillaume Poupard"], "title": "and Jacques Stern", "venue": "Sharing Decryption in the Context of Voting or Lotteries,", "year": 2000}, {"authors": ["Jens Groth"], "title": "Homomorphic Trapdoor Commitments to Group Elements", "year": 2009}, {"authors": ["Xuan Han", "Yamin Liu"], "title": "and Haixia Xu", "venue": "A User-Friendly Centrally Banked Cryptocurrency,", "year": 2017}, {"authors": ["Adolf Hurwitz"], "title": "Ueber die Bedingungen", "venue": "unter welchen eine Gleichung nur Wurzeln mit negativen reellen Theilen besitzt,", "year": 1895}, {"authors": ["Mitsuru Iwamura", "Yukinobu Kitamura", "Tsutomu Matsumoto"], "title": "and Kenji Saito", "venue": "Can We Stabilize the Price of a Cryptocurrency?: Understanding the Design of Bitcoin and Its Potential to Compete with Central Bank Money,", "year": 2014}, {"authors": ["Sergei Izmalkov", "Silvio Micali"], "title": "and Matt Lepinski", "venue": "Rational Secure Computation and Ideal Mechanism Design,", "year": 2005}, {"authors": ["Finn E. Kydland", "Edward C"], "title": "Prescott", "venue": "Rules rather than discretion: the inconsistency of optimal plans,", "year": 1977}, {"authors": ["Jack Meaning", "Ben Dyson", "James Barker"], "title": "and Emily Clayton", "venue": "Broadening Narrow Money: Monetary Policy with a Central Bank Digital Currency,", "year": 2018}, {"authors": ["Makiko Mita", "Kensuke Ito", "Shohei Ohsawa"], "title": "and Hideyuki Tanaka", "venue": "What is Stablecoin?: A Survey on Price Stabilization Mechanisms for Decentralized Payment Systems,", "year": 2019}, {"authors": ["Reinhard Neck"], "title": "Decentralized controllability of an economic policy", "year": 1983}, {"authors": ["Reinhard Neck"], "title": "Decentralized Stabilization of a Dynamic Economic System by Local Feedback", "year": 1987}, {"authors": ["Reinhard Neck"], "title": "The Contribution of Control Theory to the Analysis of Economic Policy", "year": 2008}, {"authors": ["Shunya Noda", "Kyohei Okumura"], "title": "and Yoshinori Hashimoto", "venue": "A Lucas Critique to the Difficulty Adjustment Algorithm of the Bitcoin System,", "year": 2019}, {"authors": ["Mogens Graf Plessen", "Alberto Bemporad"], "title": "Stock Trading via Feedback Control: Stochastic Model Predictive or Genetic?, 2017", "year": 2017}, {"authors": ["Ingolf G.A. Pernice", "Sebastian Henningsen", "Roman Proskalovich", "Martin Florian", "Hermann Elendner"], "title": "and Bj\u00f6rn Scheuermann", "venue": "Monetary Stabilization in Cryptocurrencies - Design Approaches and Open Questions,", "year": 2019}, {"authors": ["Sumeet Singh", "Yin-Lam Chow", "Anirudha Majumdar", "Marco Pavone"], "title": "A Framework for Time-Consistent", "venue": "Risk-Sensitive Model Predictive Control: Theory and Algorithms,", "year": 2018}, {"authors": ["Matthew D. Sheppard"], "title": "Implementing the Central Bank Functionality of RSCoin", "venue": "a Centrally Banked Cryptocurrency,", "year": 2016}, {"authors": ["Kenji Saito", "Mitsuru Iwamura"], "title": "How to Make a Digital Currency on a Blockchain Stable, 2019", "year": 2019}, {"authors": ["Jeffrey Shneidman", "David C. Parkes"], "title": "and Margo Seltzer", "venue": "Overcoming Rational Manipulation in Distributed Mechanism Implementations,", "year": 2003}, {"authors": ["B John"], "title": "Taylor", "venue": "Discretion versus policy rules in practice,", "year": 1993}, {"authors": ["Xin Wang", "Hideaki Ishii", "Linkang Du", "Peng Cheng"], "title": "and Jiming Chen", "venue": "Privacypreserving Distributed Machine Learning via Local Randomization and ADMM Perturbation,", "year": 2019}, {"authors": ["Karl W\u00c3\u0152st", "Kari Kostiainen", "Vedran Capkun", "Srdjan Capkun"], "title": "PRCash: Fast", "venue": "Private and Regulated Transactions for Digital Currencies,", "year": 2018}, {"authors": ["Junxiang Wang", "Fuxun Yu", "Xiang Chen"], "title": "and Liang Zhao", "venue": "ADMM for Efficient Deep Learning with Global Convergence,", "year": 2019}, {"authors": ["Xingyu Xie", "Jianlong Wu", "Zhisheng Zhong", "Guangcan Liu"], "title": "and Zhouchen Lin", "venue": "Differentiable Linearized ADMM,", "year": 2019}, {"authors": ["Chunlei Zhang", "Muaz Ahmad"], "title": "and Yongqiang Wang", "venue": "ADMM Based Privacy-preserving Decentralized Optimization,", "year": 2018}, {"authors": ["Fan Zhang", "Ethan Cecchetti", "Kyle Croman", "Ari Juels"], "title": "and Elaine Shi", "venue": "Town Crier: An Authenticated Data Feed for Smart Contracts,", "year": 2016}, {"authors": ["Wenting Zheng", "Raluca Ada Popa", "Joseph E. Gonzalez"], "title": "and Ion Stoica", "venue": "Helen: Maliciously Secure Coopetitive Learning for Linear Models,", "year": 2019}], "sections": [{"text": "ar X\niv :1\n90 9.\n07 44\n5v 1\n[ cs\n.C R\n- the feasibility of decentralising the central bank while securely preserving its independence in a decentralised computation setting\n- the benefits for price stability of combining mechanism design, provable security, and control theory, unlike the heuristics of previous stablecoins\n- the implementation of complex monetary policies on a stablecoin, equivalent to ones used by central banks and beyond the current fixed rules of cryptocurrencies that hinder their price stability\n- methods to circumvent the impossibilities of Guaranteed Output Delivery (G.O.D.) and fairness: standing on truthfulness and faithfulness, we reach G.O.D. and fairness under the assumption of rational parties\nAs a corollary, a decentralised artificial intelligence is able to conduct the monetary policy of a stablecoin, minimising human intervention."}, {"heading": "1 Introduction", "text": "The Holy Grail of a stablecoin[Her18], an asset with all the benefits of decentralisation but none of the volatility, remains the most elusive single-horned creature of the cryptocurrency market. In fact, price stability is the most wanted feature of a cryptocurrency: in a recent survey[BCC+19], hedging against depreciation risk (i.e., price stability) was the most important attribute and it has a much\nhigher feature than anonymity (40% vs. 1%) or illiquidity risk; however, subjects of the survey assigned to the anonymous medium-of-payment a value on average only 1.44% higher than to the non-anonymous medium-of-payment.\nIn monetary economics, monetary policy rules refer to a set of rule of thumb that the central bank is committed to, so it can maintain the price stability of a currency (Taylor rule, McCallum rule, inflation targeting, fixed exchange rate targeting, nominal income targeting, etc). However, the fixed rules for the emission of most cryptocurrencies[Mou19] cannot maintain price stability: the inflexibility of their emission rules and their inelasticity of supply provoke part of the high volatility of the cryptocurrency market; their lack of good monetary rules preclude their wide used as money[Cac18] as they lack clear a clear focus on monetary equilibrium; instead, they feature technical rules for stabilising the difficulty of mining[NOH19], but not monetary rules. Stablecoins[MIOT19, BKP19, PHP+19] were born to explicitly solve the volatility problem of cryptocurrencies: however, their current formulation relies on heuristics[Mak19, KKMP19, Lee14, SI19, IKMS14] without a general mathematical framework within which advantageous properties can be mathematically proven such as stability and convergence. Stablecoins lacking stability regimes and/or convergence guarantees suffer from the instabilities of unstable domains and deleveraging spirals that cause illiquidity during crises[KMM19]: these shortcomings cause price volatility, making cryptocurrencies unusable as short-term stores of value and means of payment, increasing barriers to adoption.\nThis paper introduces the novel combination of multiple mathematical frameworks in order to design a decentralised stablecoin by inheriting multiple useful properties of said frameworks: stability, convergence, truthfulness, faithfulness, and malicious-security.\nContributions The main and novel contributions are:\n\u2022 first formal treatment of decentralised stablecoin within which multiple mathematical properties can be proven: stability, convergence, truthfulness, faithfulness, and malicious-security.\n\u2022 dynamical models of economic systems: currency prediction with deep learning, and stabilisation and emission of stablecoins.\n\u2022 decomposition of Model Predictive Controllers with consensus-ADMM for their implementation in decentralised networks (i.e., blockchains).\n\u2022 protection against malicious adversaries in said decentralised networks.\n\u2022 from mechanism design, proofs to guarantee truthfulness for all the parties involved and faithfulness of the execution for the decentralised implementation."}, {"heading": "2 Related", "text": "Previous cryptocurrencies with a controlled money suppy similar to a central bank currency were centralised[DM15, She16, HLX17, WKCC18]: for first time, this paper solves the decentralisation of the monetary policy, achieving a fully decentralised cryptocurrency when combined with a public permissionless blockchain.\nMost stablecoins are centralised: the few ones that are decentralised (e.g., [Mak19]), rely on heuristics without a general mathematical framework within which advantageous properties can be mathematically proven such as stability and convergence."}, {"heading": "3 Background", "text": "This section provides a brief introduction to the main technologies of the decentralised stablecoin: blockchains, model predictive control, alternating direction method of multipliers (ADMM), mechanism design, secure multi-party computation, and zero-knowledge proofs. A high-level and conceptual rendering of the interrelationship between these techniques can be found in Figure 1.\nBlockchains A blockchain is a distributed ledger that stores a growing list of unmodifiable records called blocks that are linked to previous blocks. Blockchains can be used to make online secure transactions, authenticated by the collaboration of the P2P nodes allowing participants to verify and audit transactions. Blockchains can be classified according to their openness. Open, permissionless networks don\u2019t have access controls and reach decentralised consensus through costly Proof-of-Work calculations over the most recently appended data by miners. Permissioned blockchains have identity systems to limit participation and do not rely on Proofs-of-Work. Blockchain-based smart contracts are computer programs executed by the nodes and implementing self-enforced contracts. They are usually executed by all or many nodes (on-chain smart contracts), thus their code must be designed to minimise execution costs. Lately, off-chain smart contracts frameworks are being developed that allow the execution of more complex computational processes.\nModel Predictive Control Advanced method of process control including constraint satisfaction: a dynamical model of a system is used to predict the future evolution of state trajectories while bounding the input to an admissible set of values determined by a set of constraints, in order to optimise the control signal and account for possible violation of the state trajectories; at every time step, the optimal sequence over N steps in determined but only the first element is implemented. Model Predictive Control is widely used in industrial settings, and its large literature contains proofs of feasibility, stability, convergence, robustness and many other useful properties that could be reused in many other settings.\nIn this paper, multiple dynamic systems for Model Predictive Control will be introduced: Economic Model for an Algorithmic Stablecoin and Economic Model for a Collaterised Stablecoin; Economic Model for a Central-Banked Currency; Decentralised Prediction of Currency Prices through Deep Learning; Decentralised Stabilisation of Stablecoins; and Auction Mechanism for Issuing Stablecoins.\nAlternating Direction Method of Multipliers (ADMM) Class of algorithms to solve distributed convex optimisation problems by breaking them into smaller pieces, and distributing between multiple parties[BPC+11]. Itself a variant of the augmented Lagrangian methods that use partial updates for the dual variable, it requires exchanges of information between neighbors for every iteration until converging to the result.\nIn this paper, multiple optimisation problems expressed in Model Predictive Control will be decomposed with ADMM techniques in order to decentralise their computation between multiple parties: Decentralised Prediction of Currency Prices through Deep Learning; Decentralised Stabilisation of Stablecoins; and Decentralised Implementation of Auction Mechanism.\nMechanism Design Also called \u201creverse game theory\u201d, is a field of game theory and economics in which a \u201cgame designer\u201d chooses the game structure where players act rationally and engineers incentives or economic mechanisms, toward desired objectives pursuing a predetermined game\u2019s outcome.\nIn this paper, parties truthfully report private information 5 (strategy-proofness) and faithfully execute a protocol (definition 10, theorem 12, theorem 2).\nSecure Multi-Party Computation Protocols for secure multi-party computation (MPC) enable multiple parties to jointly compute a function over inputs without disclosing said inputs (i.e., secure distributed computation). MPC protocols usually aim to at least satisfy the conditions of inputs privacy (i.e., the only information that can be inferred about private inputs is whatever can be inferred from the output of the function alone) and correctness (adversarial parties should not be able to force honest parties to output an incorrect result). Multiple security models are available: semi-honest, where corrupted parties are passive adversaries that do not deviate from the protocol; covert, where adversaries may deviate arbitrarily from the protocol specification in an attempt to cheat, but do not wish to be \u201ccaught\u201d doing so ; and malicious security, where corrupted parties may arbitrarily deviate from the protocol.\nWe utilise the framework SPDZ[DPSZ11], a multi-party protocol with malicious security.\nZero-Knowledge Proofs Zero-knowledge proofs are proofs that prove that a certain statement is true and nothing else, without revealing the prover\u2019s secret for this statement. Additionally, zero-knowledge proofs of knowledge also prove that the prover indeed knows the secret.\nIn this paper, zero-knowledge proofs are used to prove that a local computation was executed correctly."}, {"heading": "4 Economic Models", "text": "We formalise a basic model of a cryptocurrency1 issuing variable block rewards and periodically auctioning a variable amount of unissued coins from its uncapped and dynamically adjusted supply: all these three variables are constantly adjusted by a dynamical system using Stochastic Model Predictive Control in order to maintain price stability (i.e., controlled variables).\nLet t \u2208 T = {1, . . . , T } denote the time slots used by the blockchain. Let Smax(t) denote the maximum supply of a cryptocurrency, Soutstanding(t) the supply that is visible on-chain, Sinitial the initially issued supply by an initial offering event (i.e., an initial auction) and Sunissued(t) is the amount of cryptocurrency yet to be issued. Then, we have:\n0 \u2264 Sinitial \u2264 Soutstanding(t) \u2264 Smax(t), \u2200t \u2208 T, (4.1)\nSinitial = Soutstanding(1), (4.2)\nSmax(t) = Sunissued(t) + Soutstanding(t). (4.3)\nPeriodically, miners are being rewarded for successfully processing blocks with\n1DISCLAIMER: the simplified models in the present paper are only for illustrative purposes. Complex and parameterised models are needed for real-world settings.\na variable amount of block rewards, BR(t):\nSoutstanding(t+ 1) = Soutstanding(t) +BR(t), \u2200t \u2208 T, (4.4)\nSunissued(t+ 1) = Sunissued(t)\u2212BR(t), (4.5)\n0 \u2264 BR(t) \u2264 BRmax. (4.6)\nAuctions are carried out to issue coins from the pool of Sunissued(t) , each auction releasing a variable amount of auctioned coins, AUCcoins(t), with xi(t) denoting the amount of coins demanded by participant i, \u2200t \u2208 T :\nSoutstanding(t+ 1) = Soutstanding(t) +AUCcoins(t), (4.7)\nSunissued(t+ 1) = Sunissued(t)\u2212AUCcoins(t), (4.8)\n0 \u2264 AUCcoins(t) \u2264 AUCmax, (4.9)\nxmini (t) \u2264 xi (t) \u2264 x max i (t) , (4.10)\n\u2211\ni\nxi(t) \u2212AUCcoins(t) = 0. (4.11)\nLet P (t) denote the market price of a coin at time t in a currency (i.e., the number of cryptocurrency coins that one unit of currency -EUR, JPY, USDwill buy at time t) and we adopt a geometric Brownian motion model:\n\u2206P (t) = P (t+ 1)\u2212 P (t), (4.12)\ndP (t) = \u00b5P (t)dt+ \u03c3P (t)dWt, (4.13)\nwhere Wt is a Weiner process. Let {Smax(t), BR(t), AUCcoins(t)} be the controlled variables. Thus, in order to maintain price stability, these controlled variables will expand when the price is increasing and contract when the price is lowering:\nSmax(t) \u223c Smax(t\u2212 1) \u00b7 P (t)\nP (t\u2212 1) , (4.14)\nBR(t) \u223c BR(t\u2212 1) \u00b7 P (t)\nP (t\u2212 1) , (4.15)\nAUCcoins(t) \u223c AUCcoins(t\u2212 1) \u00b7 P (t)\nP (t\u2212 1) . (4.16)"}, {"heading": "4.1 Economic Model for an Algorithmic Stablecoin", "text": "Consider the stochastic linear state space system in the form\nxk+1 = Axk +Buk + wk (4.17)\nyk = Cyxk + vk (4.18)\nzk = Czxk (4.19)\nwhere A,B,Cy , Cz are state space matrices, xk \u2208 R nx is the state vector, uk \u2208 R nu is the input vector, yk \u2208 R ny is the output vector, zk \u2208 R nz is the vector of\ncontrolled variables, wk \u2208 R nx is the noise vector of the process, and vk \u2208 R ny is the vector of measurement noise. Let N be the length of the prediction and receding horizon control and define the vectors\nNi = {0 + i, 1 + i, . . . , N \u2212 1 + i}\nu = [ uT0 u T 1 . . . u T N\u22121 ]T , x = [ xT1 x T 2 . . . x T N ]T ,\nz = [ zT1 z T 2 . . . z T N ]T , w = [ wT1 w T 2 . . . w T N ]T\nDefine the following exchange rate function measuring the cumulative exchange rate between the price of a currency (e.g., EUR, JPY, USD) and a stablecoin in the stochastic state space system 4.17 in the following N time steps,\n\u03c8xch (u; x\u03040, w) = {\u03c6 (u, x, z) |x0 = x\u03040, xk+1 = Axk +Buk + wk, zk+1 = Cxk+1, k \u2208 N0} ,\n(4.20)\nLet P (t) be the spot price of the stablecoin cryptocurrency denominated in a currency (e.g., EUR, JPY, USD). Then, the cumulative exchange rate at time t is\n\u03c6 (u, x, z) =\nN \u2211\nt=1\n(P (t+ 1)) (4.21)\nFollowing a criterion of social welfare maximisation, users and holders of the stablecoin prefer to minimise the volatility of the exchange rate, with the following equation describing the minimisation problem\nminimise \u2200t \u03bbE [\u03c8xch] + (1\u2212 \u03bb)Var [\u03c8xch] (4.22)\nwith \u03bb \u2208 [0, 1] determines the trade-off between the expected exchange rate and the exchange rate variance."}, {"heading": "4.2 Economic Model for a Collaterised Stablecoin", "text": "We extend the basic model of a cryptocurrency (4), with a reserve R (t) backing every issued coin with \u03bb units of the reserve asset: for example, \u03bb = 1 for a 1 to 1 peg against a currency (e.g., EUR, JPY, USD), and \u03bb > 1 for an overcollaterised stablecoin backed with other cryptocurrencies. Then, we have:\nR (t) = \u03bb \u00b7 Soutstanding (t) , (4.23)\n0 \u2264 R (t) \u2264 \u03bb \u00b7 Smax (t) , (4.24)\nIn order to maintain price stability, \u03bb (t) could also be a controlled variable that will increase when the price is lowering and contract when the price is increasing:\n\u03bb (t) \u223c \u03bb(t\u2212 1) \u00b7 P (t\u2212 1)\nP (t) , (4.25)\n1 \u2264 \u03bb (t) \u2264 \u03bbmax. (4.26)"}, {"heading": "4.3 Economic Model for a Central-Banked Currency", "text": "The framework and results of this paper could also be applied to the monetary policy conducted by central banks, just by representing their models in the framework of Model Predictive Control in a way similar to the previous Economic Model for an Algorithmic Stablecoin.\nThe Taylor rule[Tay93] is an approximation of the responsiveness of the nominal short-term interest rate it as applied by the central bank to changes in inflation \u03c0 and output y, according to the following formula\nit = \u03d5y (yt \u2212 y \u2217) + \u03d5\u03c0 (\u03c0t \u2212 \u03c0 \u2217) + \u03c0\u2217 + r\u2217 (4.27)\nwhere a standard model describes the evolution of the economy\n\u03c0t+1 = \u03c0t + \u03b1yt + e \u03c0 t+1, (4.28) yt+1 = \u03c1yt \u2212 \u03b6 (it \u2212 \u03c0t) + e y t+1, (4.29)\ndescribing the dynamic relationship between the manipulated input it and the two controlled outputs yt and \u03c0t. At equilibrium, we obtain it = i \u2217, \u03c0t = \u03c0 \u2217, yt = 0 and r \u2217 = i\u2217 \u2212 \u03c0\u2217. Equations 4.28 and 4.29 can be rewritten in the terms of deviation variables from the equilibrium point, as\nxt+1 = Axt +But + \u01ebt+1, (4.30)\nwhere\nx =\n[\ny \u2212y\u2217 \u03c0 \u2212\u03c0\u2217\n]\n, u = \u2206i = i\u2212 i\u2217, \u01eb =\n[\ney e\u03c0\n]\n, (4.31)\nA =\n[\n\u03c1 \u03b6 \u03b1 1\n]\n, (4.32)\nB =\n[\n\u2212\u03b6 0\n]\n(4.33)\nThe cost function of the central bank is of the standard optimal control form\n\u03b1 \u2211\nk=0\n\u03b2kL ( x\u0302t+k|t , ut+k|t )\n(4.34)\nwhere \u03b2 \u2208 (0, 1) is the discount factor, x\u0302t+k|t is the expected value of x at time t+x using all information available at time t and model 4.30; ut+k|t is the input value at time t+ k decided on at time t; and the M function is usually defined as\nM ( x\u0302t+k|t , ut+k|t ) = x\u0302Tt+k|tQx\u0302t+k|t +R 2u2t+k|t (4.35)\nwith R2 \u2265 0 and Q 0. The previous equations 4.34 and 4.35 can be reformulated as an objective for Model Predictive Control as\nmin u\n{\n\u2211N\u22121 k=0 \u03b2\nk (\nx\u0302T t+k|tQx\u0302t+k|t +R 2u2 t+k|t + S 2\u03b4u2 t+k|t\n)\n+x\u0302T t+N |t \u03b2 N Q\u0304x\u0302t+N |t + \u03b2 NS2\u03b4u2 t+N |t\n} (4.36)\nwhere\nQ =\n[\n1\u2212 \u03bb 0 0 \u03bb\n]\n\u227b 0, 0 < \u03bb < 1, (4.37)\nu = [ \u2206it|t . . .\u2206it+N\u22121|t ]T , (4.38)\n\u03b4ut+k|t = ut+k|t \u2212 ut+k\u22121|t , k = 0, . . . , N (4.39)\nut+k|t \u2265 \u2212i \u2217, k = 0, . . . , N \u2212 1, (4.40)\nut+k|t = ut+m\u22121|t , k = m, . . . , N \u2212 1, (4.41)\nx\u0302Tt+k|t =\nk\u22121 \u2211\nl=0\nAlBut+k\u2212l\u22121|t +A kxt, k = 1, . . . , N (4.42)\nwith x\u0302t|t = xt and the values of 1 \u2212 \u03bb and \u03bb determine the trade-off between the output gap and inflation.\nThe decentralised implementation of the previous Model Predictive Control 4.36 using the ADMM decomposition technique is left as an exercise to the central banker."}, {"heading": "4.3.1 Closed-Loop Stability", "text": "The following closed-loop structure is obtained from 4.27 and 4.30:\nxt+1 = A \u2032 xt + \u01ebt+1, (4.43)\nwhere\nA \u2032 = A+BcT =\n[\n\u03c1\u2212 \u03b6\u03d5y \u03b6 \u2212 \u03b6\u03d5\u03c0 \u03b1 1\n]\n(4.44)\nTheorem 1. The Model Predictive Controller for the Taylor rule 4.36-4.42 has closed-loop stability, if and only if,\n0.1\u03d5\u03c0 \u2212 2.1 < \u03d5y (4.45)\n\u03d5y < 0.06\u03d5\u03c0 + 8.5, (4.46)\n\u03d5\u03c0 > 1. (4.47)\nProof. The characteristic equation for the matrix A \u2032 is:\nf (\u00b5) = \u00b52 \u2212 \u00b5 (\u03b1\u03b6 \u2212 \u03b6\u03d5y \u2212 \u03b1\u03b6\u03d5\u03c0 + 1 + \u03c1) + (\u03c1\u2212 \u03b6\u03d5y) (4.48)\nwhere \u00b5 is an eigenvalue of matrix A \u2032\n. The closed-loop system is stable when both eigenvalues of A \u2032\nare inside the unit disk (Jury[Jur74] and Routh[Rou77]Hurtwiz[Hur95] stability criteria), if and only if,\n2 + 2\u03c1\u2212 2\u03b6\u03d5y + \u03b1\u03b6 (\u03d5\u03c0 \u2212 1) > 0, (4.49)\n1\u2212 \u03c1+ \u03b6\u03d5y \u2212 \u03b1\u03b6 (\u03d5\u03c0 \u2212 1) > 0, (4.50)\n\u03b1\u03b6 (\u03d5\u03c0 \u2212 1) > 0. (4.51)\nSimilar stability results can be derived for the Model Predictive Controllers of the Economic Model for an Algorithmic Stablecoin and the Economic Model for a Collaterised Stablecoin."}, {"heading": "4.3.2 On Negative Interests", "text": "The Model Predictive Controller for the Taylor rule (4.36)-(4.42) includes a constraint for the zero lower bound on the interest rate, equation (4.40):\nut+k|t \u2265 \u2212i \u2217, k = 0, . . . , N \u2212 1.\nIn case the central bank wants to implement negative interest rates, said equation (4.40) must be removed. A possible implementation of negative interests for a cryptocurrency starts by considering coinage epochs and then defining a depreciation rate for every coinage epoch as time elapses. In the basic model of a cryptocurrency (4), we could add the following equation:\nSoutstanding (t) =\nT \u2211\nt=0\n(Sminted (t)\u2212DT (t)) , (4.52)\nSinitial = Sminted(1) = Soutstanding(1), (4.53)\n0 \u2264 Sinitial \u2264 Soutstanding(t) \u2264 Sminted (t) \u2264 Smax(t),(4.54)\nwhere Sminted (t) is the amount of minted coins at time t and DT (t) is the depreciation of coins minted at time t evaluated at time T , for example,\nDT (t) = min ((T \u2212 t) \u00b7Drate \u00b7 Sminted (t) , Sminted (t)) , (4.55)\nDrate = 0.01, (4.56)\nfor a 1% depreciation rate for every coinage epoch since the first epoch."}, {"heading": "5 Decentralised Prediction of Currency Prices through", "text": "Deep Learning\nAs noted in previous publications about predicting markets using Stochastic Model Predictive Control techniques[PB17], this approach is only justifiable only for consistent prediction of the direction of price changes (i.e., sign changes): thus, it\u2019s a requisite to use artificial intelligence techniques to predict price movements in order to maintain price stability. Of course, price data can be shifted by one sampling interval to the past, thereby making the economic models independent of any predictive power: however, the correct formulation is to use any potential good estimate of step-ahead prices as this is the core of Stochastic Model Predictive Control. Therefore, the exchange rate function 4.21 of the models is formulated with one step-ahead prices (P (t+ 1)).\nA neural network has L layers, each defined by a linear operator Wl and a neural non-linear activation function hl. A layer computes and outputs the non-linear function:\nal = hl (Wlal\u22121) (5.1)\non input activations al\u22121. By nesting the layers, composite functions are obtained, for example,\nf (a0,W ) =W4 (h3 (W3 (h2 (W2h1 (W1a0))))) (5.2)\nwhere the collection of weight matrices is W = {Wl}. Training a neural network for deep learning is the task of finding theW that matches the output activations aL to targets y, given inputs a0: it\u2019s equivalent to the following minimisation problem, given loss function l,\nminimise W l (f (a0;W ) , y) (5.3)\nAnd this is equivalent to solving the following problem:\nminimise {Wl},{al},{zl} l (zL, y) (5.4)\nsubject to zl = Wlal\u22121, for l = 1, 2, . . . , L, (5.5)\nal = hl (zl) , for l = 1, 2, . . . , L\u2212 1, (5.6)\nwhere a new variable stores the output of layer l, zl = Wlal\u22121, and the output of the link function is represented as a vector of activations al = hl (zl). By following the penalty method, a ridge penalty function is added to obtain the following unconstrained problem\nminimise {Wl},{al},{zl}\n\u3008zL, \u03bb\u3009+ l (zL, y) + \u03b2L \u2016zL \u2212WLaL\u22121\u2016 2\n+ \u2211L\u22121 l=1\n[\n\u03b2l \u2016zl \u2212Wlal\u22121\u2016 2 + \u03b3l \u2016al \u2212 hl (zl)\u2016\n2 ] (5.7)\nwhere {\u03b3l} and {\u03b2l} are constants controlling the weight of each constraint, and \u3008zL, \u03bb\u3009 is a Lagrange multiplier term. The advantage of the previous formulation resides in that each sub-step has a simple closed-form solution with only one variable, thus these sub-problems can be solved globally.\nThe update steps of each variable in the minimisation problem 5.7 are considered as follows:\n\u2022 To obtain Wl, each layer minimises \u2016zl \u2212Wlal\u22121\u2016 2 : the solution of this\nleast square problem is Wl \u2190 zla + l+1 (5.8)\nwhere a+l+1 is the pseudo-inverse of al+1.\n\u2022 To obtain al, another least-squares problem must be solved. The solution is\nal \u2190 ( \u03b2l+1W T l+1Wl+1 + \u03b3lI )\u22121 ( \u03b2l+1W T l+1zl+1 + \u03b3lhl (zl) )\n(5.9)\n\u2022 The update for zl requires minimising\narg minz\u03b3l \u2016al \u2212 hl (z)\u2016 2 + \u03b2l \u2016zl \u2212Wlal\u22121\u2016 2\n\u2022 Finally, the update of the Lagrange multiplier is given by\n\u03bb\u2190 \u03bb+ \u03b2L (zL \u2212WLaL\u22121) (5.10)\nAll the previous steps are listed in the next Algorithm 1:\ndo for l = 1, 2, . . . , L\u2212 1 do Wl \u2190 zla + l+1\nal \u2190 ( \u03b2l+1W T l+1Wl+1 + \u03b3lI )\u22121 ( \u03b2l+1W T l+1zl+1 + \u03b3lhl (zl) )\nzl \u2190 arg minz\n(\n\u03b3l \u2016al \u2212 hl (z)\u2016 2 + \u03b2l \u2016zl \u2212Wlal\u22121\u2016\n2 )\nend for WL \u2190 zLa + L\u22121\nzl \u2190 arg minz\n( l (z, y) + \u3008zL, \u03bb\u3009+ \u03b2L \u2016z \u2212WLal\u22121\u2016 2 )\n\u03bb\u2190 \u03bb+ \u03b2L (zL \u2212WLaL\u22121) until converged;\nAlgorithm 1: ADMM algorithm for Deep Learning\nFinally, note that more advanced methods for training neural networks for deep learning have appeared in the literature[XWZ+19, WYCZ19], also considering their convergence."}, {"heading": "6 Decentralised Stabilisation of Stablecoins", "text": "Following the Economic Model for an Algorithmic Stablecoin and its minimisation problem (4.22), the expectation of the exchange rate and the variance of the exchange rate are traded off in a mean-variance Optimal Control Problem with the following objective function\n\u03c8 = \u03bbEw [\u03c8xch] + (1\u2212 \u03bb)Varw [\u03c8xch] (6.1)\nwith \u03bb \u2208 [0, 1] determining the trade-off between the expected exchange rate and the exchange rate variance. Estimates of prices for the expected exchange rate, Ew [\u03c8xch], and the variance, Varw [\u03c8xch], are introduced as follows\nEw [\u03c8xch] \u2248 \u00b5 = 1\nS\n\u2211\ni\u2208S\n\u03c8xch ( u; x\u03020, w i )\n(6.2)\nVarw [\u03c8xch] \u2248 s 2 =\n1\nS \u2212 1\n\u2211\ni\u2208S\n( \u03c8xch ( u; x\u03020, w i ) \u2212 \u00b5 )2\n(6.3)\nwhere wi is sampled from the distribution w and S is the set of scenarios: when the number of scenarios is large, then\n\u03c8 \u2248 \u03c8\u0303 = \u03bb\u00b5+ (1\u2212 \u03bb) s2 (6.4)\nThe open-loop input trajectory is defined as the trajectory, u\u2217 \u2208 U , that minimises (6.4), with U being some input constraint set. For the stochastic\nlinear system (4.17), u\u2217 can be expressed as the solution to the following Optimal Control Problem,\nminimise {uj\u2208U,xj ,zj ,\u03c8j}S j=1,\u00b5 \u03bb\u00b5+ \u03bb\u0303\n\u2211\nj\u2208S\n( \u03c8j \u2212 \u00b5 )2\n(6.5)\nsubject to ( xi, ui, zi ) \u2208 H ( x\u03020, w i ) , i \u2208 S, (6.6)\n\u03c8i \u2265 \u03c6 ( ui, xi, zi ) , i \u2208 S, (6.7)\n\u00b5 = 1 S\n\u2211\nj\u2208S \u03c8 j , (6.8)\nuik = u j k, i, j \u2208 S, j \u2208M (6.9)\nwhere \u03bb\u0303 = 1\u2212 \u03bb\nS \u2212 1 ,\nM = {0, 1, . . . ,M} ,\nM \u2264 N,\nH (x\u03020, w) = {(x, z, u) |x0 = x\u03020,\nxk+1 = Axk +Buk + wk,\nzk+1 = Czxk+1, k \u2208 N0}\nThe previous Optimal Control Problem (6.5) is a convex optimisation problem when U is a convex set and \u03c6 is a convex function: an ADMM-based decomposition algorithm for (6.5) is presented below."}, {"heading": "6.1 ADMM Decomposition", "text": "The Optimal Control Problem (6.5) is re-written as\nminimise u\u2208U\u0303 ,x,z,\u03c8,\u00b5\n\u03bb\u00b5+ \u03bb\u0303\u03c8T\u03c8 + S\u03bb\u0303\u00b52 \u2212 2\u03bb\u0303\u00b51T\u03c8, (6.10)\nsubject to A\u0303x+ B\u0303u+ w\u0303 = 0, (6.11)\nz = C\u0303x, (6.12)\n\u03c8 \u2265 \u03c6\u0303 (u, x, z) , (6.13)\n\u00b5 = 1T\u03c8/S, (6.14)\nL\u0303u = 0, (6.15)\nwhere\nu =\n\n   \nu1 u2\n... uS\n\n    , x =\n\n   \nx1 x2\n... xS\n\n    , z =\n\n   \nz1 z2\n... zS\n\n    , \u03c8 =\n\n   \n\u03c81 \u03c82\n... \u03c8S\n\n    ,\n1 = [ 1 1 . . . 1 ] ,\nA\u0303 = blkdiag ( A\u0304, A\u0304, . . . , A\u0304 ) , B\u0303 = blkdiag ( B\u0304, B\u0304, . . . , B\u0304 ) , C\u0303 = blkdiag ( C\u0304, C\u0304, . . . , C\u0304 ) ,\nB\u0304 = blkdiag (B,B, . . . , B) , C\u0304 = blkdiag (C,C, . . . , C) ,\nA\u0304 =\n\n   \n\u2212I A \u2212I\n. . . . . .\nA \u2212I\n\n    , w\u0304i =\n\n    wi0 wi1 ...\nwiN\u22121\n\n    +\n\n    Ax0 0 ... 0\n\n    , i \u2208 S,\nw\u0303 = [ ( w\u03041 )T ( w\u03042 )T . . . ( w\u0304S )T ]T ,\n\u03c6\u0303 (u, x, z) = [ \u03c6 ( u1, x1, z2 ) . . . \u03c6 ( uS , xS , zS )]T ,\nL\u0303 =\n\n   \nL \u2212L L \u2212L\n. . . . . .\nL \u2212L\n\n    ,\nL = [ I 0 ] ,\nLui = [ ( ui1 )T ( ui2 )T . . . ( uiM )T ]T\nThe previous Optimal Control Problem (6.10) is then transformed into ADMM form,\nminimise y1,y2 f1 (y1) + f2 (y2) , (6.16)\nsubject to M1y1 +M2y2 = 0, (6.17)\nwith the optimisation variables defined as\ny1 = [ u\u030cT xT zT \u03c8\u030cT \u00b5\u030c ]T , (6.18)\ny2 = [ uT \u03c8T \u00b5T ]T\n(6.19)\nwhere\ng = [ 0 0 0 0 \u03bb ]T , H =\n\n\n0 0 0 0 \u03bb\u0303I \u2212\u03bb\u03031T\n0 \u2212\u03bb\u03031 S\u03bb\u0303\n\n , (6.20)\nM1 =\n\n   0 0 0 0 1 0 0 0 0 1 I 0 0 0 0 0 0 0 I 0\n\n   , M2 =\n\n  \n0 \u22121 T\nS 0\n0 0 \u22121 \u2212I 0 0 0 \u2212I 0\n\n   , (6.21)\nf1 (y1) = g T y1 + IY1 (y1) , (6.22) f2 (y2) = y T 2 Hy2 + IY2 (y2) , (6.23)\nY1 = { y1 | A\u0303x+ B\u0303u\u030c+ w\u0303 = 0, z = C\u0303x, \u03c8\u030c \u2265 \u03c6\u0303 (u\u030c, x, z) } , (6.24)\nY2 = { y2 | L\u0303u = 0 }\n(6.25)"}, {"heading": "6.2 Decentralised Iterated Computation", "text": "The Lagrangian of (6.16) and (6.17) is\nL (y1, y2, \u03b6) = f1 (y1) + f2 (y2) + \u03b6 T (M1y1 +M2y2) (6.26)\nwhere \u03b6 is a vector of Lagrangian multipliers for (6.17). In ADMM, points satisfying the optimality conditions for (6.16) and (6.17) are obtained via the recursions with iteration number j\ny1 (j + 1) = arg min y1 L\u03c1 (y1, y2 (j) , \u03b6 (j))\n= arg min y1\nf1 (y1) + \u03c1 2 \u2016M1y1 +M2y2 (j) + \u03b7 (j)\u2016 2 2\n(6.27)\ny2 (j + 1) = arg min y2 L\u03c1 (y1 (j + 1) , y2, \u03b6 (j))\n= arg min y2\nf2 (y2) + \u03c1 2 \u2016M1y1 (j + 1) +M2y2 + \u03b7 (j)\u2016 2 2 ,\n(6.28)\n\u03b7 (j + 1) = \u03b7 (j) + (M1y1 (j + 1) +M2y2 (j + 1)) (6.29)\nwhere the augmented Lagrangian with penalty parameter \u03c1 > 0 is defined as\nL\u03c1 (y1, y2, \u03b6) = L (y1, y2, \u03b6) + \u03c1\n2 \u2016M1y1 +M2y2\u2016\n2 2\nand \u03b7 = \u03b6/\u03c1 is a scaled dual variable. Stopping criteria for the previous recursions (6.27), (6.28) and (6.29) is given by\n\u2016M1y1 (j) +M2y2 (j)\u20162 \u2264 \u03b5P , (6.30)\n\u03c1 \u2225 \u2225MT1 M2 (y2 (j + 1)\u2212 y2 (j)) \u2225 \u2225 2 \u2264 \u03b5D, (6.31)\nindicating that the algorithm should be stopped when the optimality conditions for (6.16) and (6.17) are satisfied with accuracy as defined by the small tolerance levels \u03b5P and \u03b5D.\nThe following Algorithm 2 describes the steps of the implementation of the ADMM recursions (6.27)-(6.29): further optimisations are possible to parallelise the algorithm in S.\nwhile not converged do // ADMM update of y1 = ( u\u030cT , xT , zT , \u03c8\u030cT , \u00b5\u030c )\n( u\u030cT , xT , zT , \u03c8\u030cT , \u00b5\u030c ) \u2190compute via 6.27 // ADMM update of y2 = ( uT , \u03c8T , \u00b5T ) (\nuT \u03c8T \u00b5T )\n\u2190compute via 6.28 // ADMM update of \u03b7 \u03b7 \u2190compute via 6.29\nend while Algorithm 2: ADMM algorithm for the Optimal Control Problem 6.5-6.9\nTheorem 2. The proposed decentralised mechanism in Algorithm 2 is a faithful decentralised implementation.\nProof. The steps that every rational user i will faithfully complete are the variable update steps of (6.27)-(6.29) in Algorithm 2.\nUnder the assumption of rational players in an ex-post Nash equilibrium (11), users can maximise their own utility only by maximising the social welfare (theorem 5). Therefore, every user will faithfully execute the variable update steps of (6.27)-(6.29) since it\u2019s the only way to maximise social welfare when all the other rational users are following the intended strategy."}, {"heading": "7 Auction Mechanism for Issuing Stablecoins", "text": "At the beginning of an auction, each user reports its demand to the auction manager. We define the demand of user i as\n\u03b8i = { xmini (t) , xi (t) , x max i (t) }\n(7.1)\nUsers can misreport their demands: let \u03b8\u0302i = { x\u0302mini (t) , x\u0302i (t) , x\u0302 max i (t) }\ndenote the reported demand of user i. The auction manager determines the outcome of the auction including stablecoin allocation and payments according to the stablecoin allocation rule, al ().\nDenote the following variable definitions\nxi = [xi,1, . . . , xi,T ] , y = [y1, . . . , yT ] ,\nvi (xi) = \u2211 t\u2208T vi,t (xi,t) , c (y) = \u2211\nt\u2208T\nct (yt) .\nwhere vi,t (xi,t) is a concave function for the valuation of user i at time t and ct (yt) is an always-positive convex function for the cost of the auction manager at time t (i.e., this cost is the market value of the auctioned coins, plus other expenditures for carrying out the auction). The utility of user i is defined as the valuation minus the payment\nui\n( al ( \u03b8\u0302 )\n, \u03b8i\n)\n= \u2211\nt\u2208T\nvi,t (xi, t)\u2212 \u2211\nt\u2208T\npi,t\n( \u03b8\u0302 ) , (7.2)\nand the utility of the auction manager is the total payment minus the total cost, \u2211\ni\u2208N\n\u2211\ni\u2208T\npi,t\n( \u03b8\u0302 ) \u2212 \u2211\nt\u2208T\nct (yt) (7.3)\nThe stablecoin allocation rule of the auction mechanism is defined by the following social welfare maximisation problem\nS : maximise x,y\n\u2211\ni\u2208N vi (xi)\u2212 c (y) , (7.4)\nsuch that xi \u2208 Xi, \u2200i \u2208 N, (7.5)\ny \u2208 Y, (7.6) \u2211\ni\u2208N Aixi +By = 0, (7.7)\nwhere Xi is the constraint set of user i for satisfying (4.10) \u2200t \u2208 T ; Y is the constraint set of the blockchain satisfying (4.1)-(4.9) and (4.12)-(4.16) \u2200t \u2208 T ; Ai and Bi are the constraint set for satisfying (4.11) \u2200t \u2208 T equivalent to constraint (7.7).\nThe optimal solution to the social welfare maximisation problem S is denoted by {x\u2217, y\u2217}, in which x\u2217 is the outcome of stablecoin allocation to users whenever all users truthfully report their demands to the auction mechanism.\nThe payment by user i at time slot t is defined as the following equation according to the VCG payment rule[NR07, PS04],\npi,t (\u03b8) = \u2211\nj 6=i\nvj,t ( x\u2212ij,t ) \u2212 \u2211\nj 6=i\nvj,t ( x\u2217j,t ) + ct (y \u2217 t ) , (7.8)\nwhere x\u2212i = { x\u2212ij,t |j \u2208 N \\ {i} , t \u2208 T }\n: at the same time, the payment by user i at time slot t is the optimal solution to the following maximisation problem that excludes user i,\nS\u2212i : maximise x\n\u2211\nj 6=i vj (xj) , (7.9)\nsuch that xj \u2208 Xj , \u2200j \u2208 N \\ {i} (7.10)"}, {"heading": "7.1 Properties of the Auction Mechanism", "text": "In the proposed auction mechanism, each user achieves maximum utility only when said user truthfully reports its demand \u03b8i: a mechanism is incentivecompatible if truth-revelation by users is obtained in an equilibrium[NR07, PS04].\nLet si (\u03b8i) denote the strategy of user i given \u03b8i and let\n\u03b8\u2212i = {\u03b81, . . . , \u03b8i\u22121, \u03b8i+1, . . . , \u03b8N}\nDefinition 3. (Dominant-Strategy Equilibrium[SPS03]). A strategy profile s\u2217 is a dominant-strategy equilibrium of a game if, for all i,\nui (f (s \u2217 i (\u03b8i) , s\u2212i (\u03b8\u2212i)) , \u03b8i) \u2265 ui (f (si (\u03b8i) , s\u2212i (\u03b8\u2212i)) , \u03b8i) (7.11)\nholds si (\u03b8i) \u2208 \u0398i, \u2200\u03b8i, \u2200\u03b8\u2212i and \u2200si 6= s \u2217 i .\nDefinition 4. (Strategy-Proof Mechanism[SPS03]). A mechanism is strategyproof if truthfully reporting demand \u03b8i is the best strategy of user i, no matter what the other users report: that is, the incentive-compatibility of a mechanism in a dominant-strategy equilibrium is only achieved when the following condition holds\nui\n( f (\n\u03b8i, \u03b8\u0302\u2212i\n)\n, \u03b8i\n)\n\u2265 ui\n( f (\n\u03b8\u0302i, \u03b8\u0302\u2212i\n)\n, \u03b8i\n)\n(7.12)\nThe proposed auction mechanism is incentive-compatible and strategy-proof in a dominant-strategy equilibrium.\nTheorem 5. The proposed auction mechanism (7.4)-(7.7) and (7.8) is strategyproof.\nProof. We prove that each user will truthfully report their demand in order to show that the auction mechanism is strategy-proof.\nFor their demanded amount xi(t), the payment rule (7.8) was designed according to the VCG payment rule[NR07, PS04] so that user\u2019s utility is maximised only when it truthfully reports its demand.\nFor the lower bound xmini (t), user i will not understate x min i (t) to ensure that the minimum demanded is satisfied. A user will not overstate xmini (t) to avoid limiting the growth of the social welfare: to understand the underlying reason, we write the utility of the user with the payment rule expanded\nui\n( al ( \u03b8\u0302 )\n, \u03b8i\n)\n= vi (x \u2217 i )\u2212\n\u2211\nj 6=i\nvj ( x\u2212ij ) + \u2211\nj 6=i\nvj ( x\u2217j ) \u2212 c (y\u2217) ,\nand note that a user cannot influence the second term by misreporting their demand \u03b8\u0302. A user maximising utility can only maximise the other terms (i.e., social welfare). Therefore, user i will not overstate xmini (t).\nFor the upper bound xmaxi (t), for similar reasons to the previous x min i (t), understating xmaxi (t) would only limit the growth of the social welfare, thus user i is not incentivised to understate xmaxi (t). On the other side, overstating xmaxi (t) would lead to a larger stablecoin allocation than the real user\u2019s demand: the auction manager would detect such a situation when later the user is unable to pay the overstated allocation, and penalises the user with much higher prices for a much lower amount of coins. Thus, user i will not overstate xmaxi (t) in order to prevent penalties.\nTheorem 6. The proposed auction is budget-balanced, that is, the received payment is no less than the total cost.\nProof. The total payment that the auction manager receives is\n\u2211\ni\u2208N\n\u2211\ni\u2208T\npi,t (\u03b8) = \u2211\ni\u2208N\n\u2211\nj 6=i\nvj ( x\u2212ij ) \u2212 \u2211\ni\u2208N\n\u2211\nj 6=i\nvj ( x\u2217j ) +N \u00b7 c (y\u2217)\nNote that \u2211\nj 6=i\nvj ( x\u2212ij ) \u2265 \u2211\nj 6=i\nvj ( x\u2217j )\nbecause x\u2212i is the optimal solution to (7.9) and that, by definition, c (y\u2217) \u2265 0. Therefore, we conclude\n\u2211\ni\u2208N\n\u2211\ni\u2208T\npi,t (\u03b8) \u2265 N \u00b7 c (y \u2217) \u2265 c (y\u2217) ."}, {"heading": "8 Decentralised Implementation of Auction Mech-", "text": "anism\nA decentralised implementation of the centralised auction mechanism (7.4) is achieved in this section: proximal dual consensus ADMM[BPC+11, Cha14] is used to solve problem S ."}, {"heading": "8.1 Dual Consensus ADMM", "text": "We start adding a polyhedra constraint to the stablecoin allocation rule (7.4)- (7.7):\nS : maximise x,y\n\u2211\ni\u2208N vi (xi)\u2212 c (y) , (8.1)\nsuch that xi \u2208 Xi, \u2200i \u2208 N, (8.2)\ny \u2208 Y, (8.3) \u2211\ni\u2208N Aixi +By = 0, (8.4)\nCixi di, i = 1, . . . , N, (8.5)\nwhere each xi in (8.5) is a local constraint set of user i consisting of simple polyhedra constraint Cixi di, such that there would be closed-form solutions to efficiently solve all the subproblems at every iteration.\nLet \u03bb be the dual variable of constraint (8.4), and zi be the dual variable of (8.5): the Lagrange dual problem of S , equivalent to solving problem S since it\u2019s a concave maximisation problem, is defined by\nminimise \u03bb,zi\n\u2211\ni\u2208N\n\u03c6i (\u03bb, zi) + z T i di + \u03c8 (\u03bb) , (8.6)\nwhere\n\u03c6i (\u03bb, zi) = maximise xi\u2208Xi\n{\nvi (xi)\u2212 \u03bb TAixi \u2212 z T i (Cixi + ri)\n}\n, \u2200i \u2208 N, (8.7)\n\u03c8 (\u03bb) = maximise y\u2208Y\n{ \u2212c (y)\u2212 \u03bbTBy }\n(8.8)\nwhere ri are slack variables. Let\u2019s obtain a copy of \u03bb for every user i, denoted by \u03bbi, by rewriting the previous problem into the following equivalent problem,\nminimise \u03bb,zi,{\u03bbi},{\u03bb\u2032i}\n\u2211\ni\u2208N \u03c6i (\u03bbi, zi) + z T i di + \u03c8 (\u03bb) (8.9)\nsuch that \u03bbi = \u03bb \u2032 i, \u2200i \u2208 N, (8.10)\n\u03bb = \u03bb \u2032\ni, (8.11)\nIn blockchain settings, there could be some users offline and/or some communication links could be interrupted: at each iteration, each user i has probability\n\u03b1i \u2208 (0, 1] of being online, and each link (i, j) has probability pe \u2208 (0, 1] of being interrupted; the probability that user i and user j are both active and able to exchange messages is given by \u03b2ij = \u03b1i\u03b1j (1\u2212 pe). For each iteration k, let \u2126 k be the set of active users and \u03a8k \u2286 { (i, j) |i, j \u2208 \u2126k }\nbe the set of active edges. The variable update steps of the auction manager at iteration k are given\nby the following equations:\n\u00b5[k] = \u00b5[k\u22121] + q \u2211\ni\u2208N\n(\n\u03bb[k\u22121] \u2212 \u03bb [k\u22121] i\n)\n, (8.12)\ny[k] = arg min y\u2208Y\n{\nc (y) + q4N\n\u2225 \u2225 \u2225\n1 q By \u2212 1 q \u00b5[k]\n+ \u2211\ni\u2208N\n(\n\u03bb[k\u22121] + \u03bb [k\u22121] i\n)\n\u201622\n} , (8.13)\n\u03bb[k] = 1\n2N\n(\n1 q By[k] \u2212 1 q \u00b5[k] + \u2211\ni\u2208N\n(\n\u03bb[k\u22121] + \u03bb [k\u22121] i\n)\n)\n(8.14)\nwith \u00b5 represents the dual variables \u03bbi = \u03bb \u2032\ni and q is a positive constant. The variable update steps of user i at iteration k are given by the following equations:\n\u2200i \u2208 \u2126k :\n\u00b5 [k] i = \u00b5 [k\u22121] i + 2q\n(\n\u03bb [k\u22121] i \u2212 t [k\u22121] ij\n)\n, (8.15) (\nx [k] i , r [k] i\n)\n= arg min xi\u2208Xi,ri\u227b0\n{\n\u2212vi (xi) + q 4\n\u2225 \u2225 \u2225\n1 q Aixi \u2212 1 q \u00b5 [k] i\n+2t [k\u22121] ij \u2016 2 2\n+ 12\u03c3i\n\u2225 \u2225Cixi + ri \u2212 di + \u03c3iz k\u22121 i \u2225 \u2225\n2 2\n}\n,\n(8.16)\nz [k] i = z [k\u22121] i +\n1\n\u03c3i\n(\nCix [k] i + r [k] i \u2212 di\n)\n, (8.17)\nt [k] ij =\n{\n\u03bb [k] i +\u03bb [k] j\n2 , if (i, j) \u2208 \u03a8 k,\nt [k\u22121] ij , otherwise,\n(8.18)\n\u03bb [k] i =\n1\n2q Aix\n[k] i \u2212\n1\n2q \u00b5 [k] i + t [k\u22121] ij , (8.19)\n\u2200i /\u2208 \u2126k :\nx [k] i 6= x [k\u22121] i , r [k] i 6= r [k\u22121] i , \u03bb [k] i 6= \u03bb [k\u22121] i , z [k] i 6= z [k\u22121] i ,\n\u00b5 [k] i 6= \u00b5 [k\u22121] i , t [k] ij 6= t [k\u22121] ij \u2200j \u2208 Ni,\n(8.20)\nwhere \u03c3i are penalty parameters. The following stopping criteria for the success of the convergence are applied by the auction manager\n\u2225 \u2225 \u2225 \u03bb[k] \u2212 \u03bb\u0304[k] \u2225 \u2225 \u2225 2\n2 + \u2211\ni\u2208N\n\u2225 \u2225 \u2225 \u03bb [k] i \u2212 \u03bb\u0304 [k] \u2225 \u2225 \u2225 2\n2 \u2264 \u03b51, (8.21)\n\u2225 \u2225 \u2225 \u03bb\u0304[k] \u2212 \u03bb\u0304[k\u22121] \u2225 \u2225 \u2225 2\n2 \u2264 \u03b52, (8.22)\nwhere \u03b51 and \u03b52 are small positive constants and\n\u03bb\u0304[k] =\n(\n\u03bb[k] + \u2211\ni\u2208N\n\u03bb [k] i\n)\n/ (N + 1)\nThe following Algorithm 3 shows the dual consensus ADMM for problem S :\nk = 0 Auction manager only: \u00b5[0] = 0, y[0] \u2208 R15T , \u03bb[0] \u2208 R3T User i only: \u00b5 [0] i = 0, x [0] i \u2208 R 15T , r [0] i \u2208 R 15T , z [0] i \u2208 R 15T , \u03bb [0] i \u2208 R 3T and\nt [0] ij =\n\u03bb0i + \u03bb 0 j\n2\nrepeat k \u2190 k + 1 Auction manager only: send \u03bb[k\u22121] to every user i Auction manager only: update \u00b5[k], y[k] and \u03bb[k] according to (8.12)-(8.14) for parallel i \u2208 N do\nUser i only: send \u03bb [k\u22121] i to auction manager User i only: update \u00b5 [k] i , x [k] i , r [k] i , z [k] i , t [k] ij and \u03bb [k] i according to\n(8.15)-(8.20) end for\nuntil convergence is achieved by stopping criteria (8.21) and (8.22); Algorithm 3: Dual Consensus ADMM for Problem S\nTheorem 7. Algorithm 3 converges to the optimal solution of problem S in the mean, with a O (1/k) worst-case convergence rate.\nProof. Follows from Theorem 2 from [Cha14].\nNote that although this ADMM algorithm 3 is only resistant against random failures \u03b1i of users and interruptions pe of the links, and not against poisoning attacks that would corrupt inputs, it\u2019s also possible to design ADMM algorithms resistant against Byzantine attackers: however, it would also increase the number of iterations k, specially whenever under attack, thus the chosen trade-off to ignore the Byzantine setting given the truthfulness of theorem 5 and faithfulness of theorem 12 properties of the Decentralised Implementation of Auction Mechanism."}, {"heading": "8.2 Decentralised Mechanism", "text": "The decentralised mechanism features the following steps:\nProtocol 1: Decentralised Mechanism of Auction\n1. User i reports his demand \u03b8\u0302i to the auction manager.\n2. User i solves the following maximisation problem Si\nx \u2032\ni = maximise xi\u2208Xi vi (xi) (8.23)\nand sends the result x \u2032\ni to the auction manager: since problem Si only requires local information, it can be solved without collaborating with other users. The auction manager solves problems S\u2212i, \u2200i \u2208 N , by calculating\nx\u2212i = { x \u2032 j |j \u2208 N \\ {i} }\n(8.24)\nfrom the collected x \u2032\ni, thus obtaining {S\u22121,S\u22122, . . . ,S\u2212N}.\n3. To obtain the solution to problem S , Algorithm 3 is executed: the auction manager obtains results y\u2217 and \u03bb\u2217, and every user i obtains x\u2217i and \u03bb \u2217 i ;\nevery user i sends x\u2217i to the auction manager.\n4. The auction manager calculates payments according to (7.8) using the received x\u2217and x\u2212i, and obtains the stablecoin allocation x\u2217."}, {"heading": "8.3 Properties of the Decentralised Mechanism", "text": "In the following, we prove that users will faithfully execute all the actions of the Decentralised Mechanism without manipulating the outcome of the auction by strategically modifying results.\nDefinition 8. (Decentralised Mechanism [PS04]). A decentralised mechanism dM = (g,\u03a3, s\nm) defines an outcome rule g, a feasible strategy space \u03a3 = (\u03a31 \u00d7 . . .\u00d7 \u03a3N ), and an intended strategy s m = (sm1 , . . . , s m N ).\nDefinition 9. (Intended Strategy [PS04]). A strategy sm is the intended strategy of a decentralised strategy-proof direct-revelation mechanism Md that implements outcome f (\u03b8), when\nf (\u03b8) = g (sm (\u03b8))\nfor all \u03b8 \u2208 \u0398.\nThus, an intended strategy sm is a strategy that every user is expected to follow: in the Decentralised Mechanism, the intended strategies are all the steps that users must faithfully execute to produce the same outcome as the centralised auction mechanism.\nDefinition 10. (Faithful Implementation). A decentralised mechanism dM = (g,\u03a3, sm) is an (ex-post) faithful implementation of social-choice rule g (sm (\u03b8)) when intended strategy sm is an ex-post Nash equilibrium.\nThat is, users will follow the intended strategy in a faithful implementation of a decentralised mechanism if no unilateral deviation can increase their utility.\nDefinition 11. (Ex-Post Nash Equilibrium [PS04, SPS03]). A strategy profile s\u2217 = (s\u22171, . . . , s \u2217 N ) is an ex-post Nash equilibrium when\nui ( g ( s\u2217i (\u03b8i) , s \u2217 \u2212i (\u03b8\u2212i) ) ; \u03b8i ) \u2265 ui\n( g ( s \u2032\ni (\u03b8i) , s \u2217 \u2212i (\u03b8\u2212i)\n)\n; \u03b8i\n)\nfor all agents, for all s \u2032 i 6= s \u2217 i , for every demand \u03b8i and for all demands \u03b8\u2212i of other agents.\nIn an ex-post Nash equilibrium, all the other users are assumed rational: thus, user i will not deviate from s\u2217i when other users are following strategy s \u2217 \u2212i.\nTheorem 12. The proposed Decentralised Mechanism is a faithful decentralised implementation.\nProof. In the Decentralised Mechanism, the steps that every rational user i will faithfully complete are the following:\n1. Reporting \u03b8\u0302i to the auction manager\n2. Solving Si\n3. Sending result x \u2032\ni of the previous step\n4. Updating variable update steps \u00b5 [k] i , x [k] i , r [k] i , z [k] i , t [k] ij and \u03bb [k] i of (8.15)-\n(8.20)\n5. Sending \u03bb[k] of (8.19) to the auction manager\n6. Sending resulting x\u2217i obtained from the last step of (8.16)\nUsers will truthfully execute step 1 due to the truthful-revelation property in a dominant-strategy equilibrium of Theorem 5 that also implies truthfulrevelation in an ex-post Nash equilibrium. Further, the calculation of Si is done locally without any input from other users (i.e., the input from Byzantine attackers is never considered) and the auction manager will only take a result x \u2032\ni from each identified user using a secure channel. Moreover, the computation of Si does not solve problems S\u2212i and it cannot modify the term \u2211\nj 6=i vj ( x\u2212ij )\nin the payment rule (7.8) (i.e., the user cannot lower its payment). Thus, a rational user will faithfully execute steps 2 and 3. Finally, users can maximise their own utility only by maximising the social welfare, according to Theorem 5. Therefore, every user will faithfully execute actions 4-6, since it\u2019s the only way to maximise social welfare when all the other rational users are following the intended strategy."}, {"heading": "9 Encrypting ADMM", "text": "Previous works on encrypting ADMM or Model Predictive Control are very scarce: there are some works about encrypting models from control theory or model predictive control but only for cloud settings[DRS+18, AMP18, Aa17, AGS+18, AMP19], thus non-decentralised; another paper encrypts ADMM models, but using differential privacy[WID+19]; yet another paper encrypts ADMM models, but in the semi-honest setting[ZAW18]; only Helen[ZPGS19] encrypts ADMM in the malicious setting, thus it will be our chosen framework .\nHelen[ZPGS19] solves a coopetive machine learning between multiple parties in a malicious setting. Like other works where multiple parties collaborate with their own data using secure multiparty computation[AGP15], they can\u2019t handle settings where the parties lie about their inputs (i.e., poisoning attacks). One could argue that privacy only makes lying worse: that is, privacy without truthfulness and faithfulness is troublesome (Proverbs 12:22, [Sol30]). Fortunately, the present paper solves all these issues by leaning on our previous theorems about truthfulness of theorem 5 and faithfulness of theorem 12 for the Decentralised Implementation of Auction Mechanism."}, {"heading": "9.1 Cryptographic Gadgets", "text": "We utilise the SPDZ framework[DPSZ11]: an input a \u2208 Fpk is represented as\n\u3008a\u3009 = (\u03b4, (a1, . . . , an) , (\u03b3 (a)1 , . . . , \u03b3 (a)n))\nwhere \u03b4 is public, ai is a share of a and \u03b3 (a)i is the MAX share authenticating a under a SPDZ global key \u03b1 that is not revealed until the end of the protocol. For an SPDZ execution to be considered as correct, the following properties must hold\na = \u2211 i ai, \u03b1 (a+ \u03b4) = \u2211 i \u03b3 (a)i\nFrom Helen[ZPGS19], we re-use the following gadgets:\nA zero-knowledge proof for the statement: \u201cGiven public parameters: public key PK, encryptions EX , EY and Ez ; private parameters X,\n\u2022 DecSK (EZ) = DecSK (EX) \u00b7DecSK (EY ), and\n\u2022 I know X such that DecSK (EX) = X\u201d\nGadget 1. Plaintext-ciphertext matrix multiplication proof\nA zero-knowledge proof for the statement: \u201cGiven public parameters: public key PK, encryptions EX , EY and Ez ; private parameters X and Y,\n\u2022 DecSK (EZ) = DecSK (EX) \u00b7DecSK (EY ), and\n\u2022 I know X,Y and Z such that DecSK (EX) = X, DecSK (EY ) = Y and DecSK (EZ) = Z\u201d\nGadget 2. Plaintext-plaintext matrix multiplication proof\nFor m parties, each party having the public key PK and a share of the secret key SK, given public ciphertext EncPK (a), convert a into m shares ai \u2208 Zp such that\na \u2261 \u2211\nai mod p\nEach party Pi receives secret share ai and does not learn the original secret value a.\nGadget 3. Converting ciphertexts into arithmethic MPC shares\nGiven public parameters: encrypted value EncPK (a), encrypted SPDZ input shares EncPK (bi), encrypted SPDZ MACs EncPK (ci), and interval proofs of plaintext knowledge, verify that:\n1. a \u2261 \u2211\ni bi mod p, and\n2. bi are valid SPDZ shares and ci\u2019s are valid MACs on bi.\nGadget 4. MPC conversion verification"}, {"heading": "9.2 Initialisation Phase", "text": "During initialisation, the m parties compute using SPDZ the parameters for threshold encryption[FPS00], generating a public key PK known to everyone. Each party m receives a share of the corresponding secret key SKi: all the parties must agree to decrypt a value encrypted with the shared PK."}, {"heading": "9.3 Input Preparation Phase", "text": "In this phase, each party commits to their inputs by broadcasting their encrypted inputs to all the other parties: additionally, all the parties prove that they know the encrypted values using zero-knowledge proofs of knowledge. Note that encryptions also serve as a commitment scheme[Gro09].\nTo ensure that each party consistently uses the same inputs during the entire protocol and to avoid deviations based on what other parties have contributed,\neach party encrypts and broadcasts: EncPK\n(\n\u03b8\u0302i\n)\n= { x\u0302mini (t) , x\u0302i (t) , x\u0302 max i (t) } ,\nEncPK\n(\nx \u2032\ni\n)\n, EncPK (xi) and EncPK (y). These encryptions are accompanied\nwith proofs that the committed inputs are within a certain range[Bou00]."}, {"heading": "9.4 Compute Phase", "text": "In this phase, the variable update steps of the ADMM are executed, in which parties successively compute locally on encrypted data, followed by coordination steps with other parties using MPC computation. No party learns any intermediate step beyond the final results, proving in zero-knowledge that the local computations were performed correctly using the data committed during the input preparation phase."}, {"heading": "9.4.1 Initialisation and Pre-Computations", "text": "Initial variables are initialised to zero: \u00b5[0], \u03bb[0], \u00b5 [0] i , \u03bb [0] i , r [0] i , z [0] i , t [0] ij .\nAdditionally, the auction manager solves problems S\u2212i, obtaining x \u2212i from\nthe collected x \u2032\ni in the preparation phase."}, {"heading": "9.4.2 Local Optimisation", "text": "Since Algorithm 3 is fully parallel and decentralised, note that the variable update steps of auction manager (8.12)-(8.14), or the steps (8.15)-(8.20) of user i, only require local information and iterative exchange of \u03bb[k] and \u03bb [k] i with its neighbors. Each party can independently calculate all the variable update steps by doing plaintext scaling and plaintext-ciphertext matrix multiplication: each party also needs to generate proofs proving that they have calculated the variable update steps correctly, using Gadget 1 (9.1) and Gadget 2 (9.1)."}, {"heading": "9.4.3 Coordination", "text": "After the local optimisation step, each party exchanges \u03bb[k] and \u03bb [k] i with its neighbors, and each party also publishes interval proofs of knowledge. We may not need to use MPC: it\u2019s only required if steps (8.13) or (8.16) are implemented using non-linear functions, which itself depends on the concrete functions c (y) and \u2212vi (xi). In the best case, simple closed-form solutions with only linear functions could be chosen.\nBut when MPC is needed, the encrypted variables need to be converted to arithmetic SPDZ shares using Gadget 3 (9.1) and calculate the function using SPDZ. After the MPC computation, each party receives shares of the variables and its MAC shares: these shares are converted back into encrypted form by encrypting the shares, publishing them, and summing up the encrypted shares.\nAfter all the ADMM calculation, every user i sends x\u2217i to the auction manager, which must calculate payments according to equation (7.8) to obtain the stablecoin allocation x\u2217: these calculations may also require MPC conversion and computation."}, {"heading": "9.5 Release Phase", "text": "The encrypted model obtained at the end of the previous phase is decrypted: all parties must agree to decrypt the results and release the final data. Before said release, parties must prove that they correctly executed the conversions between ciphertext and MPC shares using Gadget 4 (9.1), in order to prevent that different inputs from the committed ones were used.\nAfter all the SPDZ value have been verified by Gadget 4 (9.1), the parties aggregate the encrypted shares of the stablecoin allocation x\u2217 in to a single ciphertext, and then run the joint decryption protocol[Bou00]."}, {"heading": "9.6 Analysis of Properties", "text": "Following the line of work merging secure computation and mechanism design[IML05], that assumes that players are rational and not only honest or malicious, we reach Guaranteed Output Delivery (G.O.D.) and fairness[CL14], circumventing their classical impossibility results.\nDefinition 13. fCRS : ideal functionality to generate common reference strings and secret inputs to the parties.\nDefinition 14. fSPDZ : ideal functionality computing ADMM using SPDZ.\nTheorem 15. fDISTR\u2212AUCTION\u2212MECHANISM is in the (fCRS , fSPDZ)-hybrid model under standard cryptographic assumptions, against a malicious adversary who can statically corrupt up to m\u22121 out of m parties in an ex-post Nash equilibrium, reaching G.O.D. and fairness, thus circumventing the impossibility results of fSPDZ .\nProof. Malicious security follows from Theorem 6 [ZPGS19]. The properties of truthfulness of theorem 5 and faithfulness of theorem 12 of the Decentralised Implementation of Auction Mechanism, imply that every rational party i will faithfully complete all the steps of fDISTR\u2212AUCTION\u2212MECHANISM : in other words, it won\u2019t be rational to cheat or abort the protocol for malicious parties restricted to the rational behaviors of an ex-post Nash equilibrium. Therefore, we reach G.O.D. and fairness, thus their impossibility results are circumvented."}, {"heading": "10 Discussion", "text": "The history of control theory for stabilisation in economics goes back to the 1950s: for a recent survey, see [Nec08]. However, the \u201cPrescott critique\u201d[KP77, Pre77] of the time-inconsistency of optimal control results precluded its realworld applicability: fortunately, the problem of time inconsistency can be adequately treated within the framework of Model Predictive Control[SCMP18].\nAnd even though it might seem that decentralising economic systems is a modern trend born from cryptocurrencies and blockchains, there are already publications about these topics starting from the 1970s: [Aok76, Myo76, Pin77, Nec83, Nec87, Aok88, Nec13]. This paper subsumes all these previous works because: 1) Model Predictive Control provides a more expressive language to define economic policies; 2) the decentralisation provided by the ADMM decomposition allows for more than the 2-3 parties previously considered) the mechanism design techniques used in this paper guarantee more robust results.\nEconomists have recently created multiple models showing the benefits of Centrally-Banked Digital Currencies (CBDC): said results also apply to a CBDC implemented in the technical framework of a fully decentralised cryptocurrency, as in the present paper. For example:\n\u2022 Monetary transmission would strengthen[MDBC18].\n\u2022 A practical costless medium of exchange, and facilitate the systematic and transparent conduct of monetary policy[BL17].\n\u2022 Permanently raise GDP by as much as 3%, due to reductions in real interest rates, distortionary taxes, and monetary transaction costs; and improve the ability to stabilise the business cycle[BK16].\n\u2022 Increases financial inclusion, diminishes the demand for cash, and expands the depositor base of private banks[And18].\n\u2022 Address competition problems in the banking sector[KRW18].\nCommon objections to the genuineness of decentralisation in stablecoins are traversed here:\n1. Need for centralised holding of funds: not by using other cryptocurrencies as collateral.\n2. Auditors are required for verification: not by using zero-knowledge proofs and other mathematical guarantees.\n3. Centralised price feeds: multiple verified agents could post the real-time prices on the blockchain, or use an authenticated data feed for smart contracts[ZCC+16]. The issue of adversarial attacks to neural networks is not relevant here because all price feeds are supposed trustworthy.\nFinally, consensus-ADMM as described in this paper offers many advantages over smart contracts running on replicated state machines (e.g., Ethereum):\n1. Data intensive tasks such as deep-learning (5) are nearly impossible to execute due to gas limits and storage costs.\n2. Not all mining nodes would need to participate on the currency stabilisation process: this special role could be reserved to a trustworthy subset of nodes.\n3. The lack of privacy in public permissionless blockchains renders algorithms such as the decentralised auction (8) unfeasible to run."}, {"heading": "11 Conclusion", "text": "The present paper has tackled and successfully solved the problem of designing a decentralised stablecoin with price stability guarantees inherited from control theory (i.e., Closed-Loop Stability) and model predictive control (i.e., convergence of theorem 7). Further guarantees required in a decentralised setting come from mechanism design: truthfulness (definition 4, theorem 5) and faithfulness (definition 10, theorem 12, theorem 2). Additional security against malicious parties of theorem 15 is obtained from the combination of secure multi-party computation and zero-knowledge proofs.\nThe flexibility of this framework including model predictive control, which can accommodate a great variety of economic policies, combined with the powerful predictive capabilities of artificial intelligence techniques (e.g., neural networks and deep learning) foretell a whole range of possibilities that will lead to better cryptocurrencies and blockchains."}], "title": "Truthful and Faithful Monetary Policy for a Stablecoin Conducted by a Decentralised, Encrypted Artificial Intelligence", "year": 2019}