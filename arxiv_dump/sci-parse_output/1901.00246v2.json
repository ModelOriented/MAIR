{
  "abstractText": "Machine learning models have become more and more complex in order to better approximate complex functions. Although fruitful in many domains, the added complexity has come at the cost of model interpretability. The once popular k-nearest neighbors (kNN) approach, which finds and uses the most similar data for reasoning, has received much less attention in recent decades due to numerous problems when compared to other techniques. We show that many of these historical problems with kNN can be overcome, and our contribution has applications not only in machine learning but also in online learning, data synthesis, anomaly detection, model compression, and reinforcement learning, without sacrificing interpretability. We introduce a synthesis between kNN and information theory that we hope will provide a clear path towards models that are innately interpretable and auditable. Through this work we hope to gather interest in combining kNN with information theory as a promising path to fully auditable machine learning and artificial intelligence.",
  "authors": [
    {
      "affiliations": [],
      "name": "Christopher J. Hazard"
    }
  ],
  "id": "SP:5cb5c510be16f8a6315d35f701de4e034155ef55",
  "references": [
    {
      "authors": [
        "B.D. Abramson"
      ],
      "title": "The Expected-outcome Model of Two-player Games",
      "venue": "PhD thesis,",
      "year": 1987
    },
    {
      "authors": [
        "P.K. Agarwal",
        "B. Aronov",
        "S. Har-Peled",
        "J.M. Phillips",
        "K. Yi",
        "W. Zhang"
      ],
      "title": "Nearest-neighbor searching under uncertainty ii",
      "venue": "ACM Transactions on Algorithms (TALG),",
      "year": 2016
    },
    {
      "authors": [
        "C.C. Aggarwal",
        "A. Hinneburg",
        "D.A. Keim"
      ],
      "title": "On the surprising behavior of distance metrics in high dimensional space",
      "venue": "In International conference on database theory,",
      "year": 2001
    },
    {
      "authors": [
        "H. Akaike"
      ],
      "title": "Information theory and an extension of the maximum likelihood principle",
      "venue": "Proceedings of the 2nd International Symposium on Information Theory,",
      "year": 1973
    },
    {
      "authors": [
        "E. Alpaydin"
      ],
      "title": "Voting over multiple condensed nearest neighbor",
      "venue": "Artificial Intelligence Review,",
      "year": 1997
    },
    {
      "authors": [
        "E. Alpaydin"
      ],
      "title": "Machine learning: The new AI",
      "year": 2016
    },
    {
      "authors": [
        "N. Altman"
      ],
      "title": "An introduction to kernel and nearestneighbor nonparametric regression",
      "venue": "The American Statistician,",
      "year": 1992
    },
    {
      "authors": [
        "K.J. Archer",
        "R.V. Kimes"
      ],
      "title": "Empirical characterization of random forest variable importance measures",
      "venue": "Computational Statistics & Data Analysis,",
      "year": 2008
    },
    {
      "authors": [
        "K. Beyer",
        "J. Goldstein",
        "R. Ramakrishnan",
        "U. Shaft"
      ],
      "title": "When is \u201cnearest neighbor",
      "venue": "In International conference on database theory,",
      "year": 1999
    },
    {
      "authors": [
        "L. Breiman",
        "J. Friedman",
        "C. Stone",
        "R. Olshen"
      ],
      "title": "Classification and regression trees",
      "year": 1984
    },
    {
      "authors": [
        "J.R. Cano",
        "F. Herrera",
        "M. Lozano"
      ],
      "title": "Evolutionary stratified training set selection for extracting classification rules with tradeoff precisioninterpretability",
      "venue": "Data and Knowledge Engineering,",
      "year": 2006
    },
    {
      "authors": [
        "D. Coomans",
        "D. Massart"
      ],
      "title": "Alternative k-nearest neighbour rules in supervised pattern recognition : Part 1. k-nearest neighbour classification by using alternative voting rules",
      "venue": "Analytica Chimica Acta,",
      "year": 1982
    },
    {
      "authors": [
        "A.A. Efros",
        "T.K. Leung"
      ],
      "title": "Texture synthesis by non-parametric sampling",
      "venue": "In iccv, page 1033",
      "year": 1999
    },
    {
      "authors": [
        "J.F. Gemmeke",
        "B. Cranen"
      ],
      "title": "Using sparse representations for missing data imputation in noise robust speech recognition",
      "venue": "In Signal Processing Conference,",
      "year": 2008
    },
    {
      "authors": [
        "L.-A. Gottlieb",
        "A. Kontorovich",
        "P. Nisnevitch"
      ],
      "title": "Near-optimal sample compression for nearest neighbors",
      "venue": "In Advances in Neural Information Processing Systems,",
      "year": 2014
    },
    {
      "authors": [
        "E.C. Harrington"
      ],
      "title": "The desirability function",
      "venue": "Industrial quality control,",
      "year": 1965
    },
    {
      "authors": [
        "T. Hastie",
        "R. Tibshirani",
        "J. Friedman"
      ],
      "title": "The elements of statistical learning",
      "year": 2001
    },
    {
      "authors": [
        "A. Hinneburg",
        "C.C. Aggarwal",
        "D.A. Keim"
      ],
      "title": "What is the nearest neighbor in high dimensional spaces",
      "venue": "In 26th Internat. Conference on Very Large Databases,",
      "year": 2000
    },
    {
      "authors": [
        "I. Hmeidi",
        "B. B Hawashin",
        "E. El-Qawasmeh"
      ],
      "title": "Performance of knn and svm classifiers on full word arabic articles",
      "venue": "Advanced Engineering Informatics,",
      "year": 2008
    },
    {
      "authors": [
        "M.E. Houle",
        "H.-P. Kriegel",
        "P. Kr\u00f6ger",
        "E. Schubert",
        "A. Zimek"
      ],
      "title": "Can shared-neighbor distances defeat the curse of dimensionality",
      "venue": "In International Conference on Scientific and Statistical Database Management,",
      "year": 2010
    },
    {
      "authors": [
        "P. Indyk",
        "R. Motwani"
      ],
      "title": "Approximate nearest neighbors: towards removing the curse of dimensionality",
      "venue": "In Proc. of the 30th ACM Sym.on Theory of Computing,",
      "year": 1998
    },
    {
      "authors": [
        "J. Kittler"
      ],
      "title": "Feature selection and extraction",
      "year": 1986
    },
    {
      "authors": [
        "R. Kohavi",
        "G. John"
      ],
      "title": "Wrappers for feature subset selection",
      "venue": "Artificial Intelligence,",
      "year": 1997
    },
    {
      "authors": [
        "A. Kontorovich",
        "S. Sabato",
        "R. Weiss"
      ],
      "title": "Nearestneighbor sample compression: Efficiency, consistency, infinite dimensions",
      "venue": "In Advances in Neural Information Processing Systems,",
      "year": 2017
    },
    {
      "authors": [
        "T. Leinster",
        "M.W. Meckes"
      ],
      "title": "Maximizing diversity in biology",
      "venue": "and beyond. Entropy,",
      "year": 2016
    },
    {
      "authors": [
        "H.W. Lin",
        "M. Tegmark",
        "D. Rolnick"
      ],
      "title": "Why does deep and cheap learning work so well",
      "venue": "Journal of Statistical Physics,",
      "year": 2017
    },
    {
      "authors": [
        "S. Lukaszyk"
      ],
      "title": "Probability metric, examples of approximation applications in experimental mechanics",
      "venue": "PhD thesis, Cracow University of Technology,",
      "year": 2003
    },
    {
      "authors": [
        "S. Lukaszyk"
      ],
      "title": "A new concept of probability metric and its applications in approximation of scattered data sets",
      "venue": "Computational Mechanics,",
      "year": 2004
    },
    {
      "authors": [
        "H.B. Mann",
        "D.R. Whitney"
      ],
      "title": "On a test of whether one of two random variables is stochastically larger than the other",
      "venue": "The annals of mathematical statistics,",
      "year": 1947
    },
    {
      "authors": [
        "L. Martino",
        "H. Yang",
        "D. Luengo",
        "J. Kanniainen",
        "J. Corander"
      ],
      "title": "A fast universal self-tuned sampler within gibbs sampling",
      "venue": "Digital Signal Processing,",
      "year": 2015
    },
    {
      "authors": [
        "M. Mohri",
        "R. Afshin",
        "T. Ameet"
      ],
      "title": "Foundations of machine learning",
      "year": 2012
    },
    {
      "authors": [
        "R.S. Olson",
        "W. La Cava",
        "P. Orzechowski",
        "R.J. Urbanowicz",
        "J.H. Moore"
      ],
      "title": "Pmlb: a large benchmark suite for machine learning evaluation and comparison",
      "venue": "BioData mining,",
      "year": 2017
    },
    {
      "authors": [
        "J. Raikwal",
        "K. Saxena"
      ],
      "title": "Performance evaluation of svm and k-nearest neighbor algorithm over medical data",
      "venue": "set. International Journal of Computer Applications,",
      "year": 2012
    },
    {
      "authors": [
        "M. Rao",
        "Y. Chen",
        "B.C. Vemuri",
        "F. Wang"
      ],
      "title": "Cumulative residual entropy: a new measure of information",
      "venue": "IEEE transactions on Information Theory,",
      "year": 2004
    },
    {
      "authors": [
        "W.T.M. Schuh",
        "R. Angryk"
      ],
      "title": "Mitigating the curse of dimensionality for exact knn retrieval",
      "venue": "Proceedings of the Twenty-Seventh International Florida Artificial Intelligence Research Society Conference,",
      "year": 2014
    },
    {
      "authors": [
        "M.A. Schuh",
        "T. Wylie",
        "R.A. Angryk"
      ],
      "title": "Improving the performance of high-dimensional knn retrieval through localized dataspace segmentation and hybrid indexing",
      "venue": "In Proc. of the 17th ADBIS Conf., page 344357,",
      "year": 2013
    },
    {
      "authors": [
        "G. Schwarz"
      ],
      "title": "Estimating the dimension of a model",
      "venue": "The annals of statistics,",
      "year": 1978
    },
    {
      "authors": [
        "D. Silver",
        "J. Schrittwieser",
        "K. Simonyan",
        "I. Antonoglou",
        "A. Huang",
        "A. Guez",
        "T. Hubert",
        "L. Baker",
        "M. Lai",
        "A. Bolton"
      ],
      "title": "Mastering the game of go without human knowledge",
      "year": 2017
    },
    {
      "authors": [
        "D.M. Skapura"
      ],
      "title": "Building neural networks. page",
      "year": 1996
    },
    {
      "authors": [
        "H. Stoppiglia",
        "G. Dreyfus"
      ],
      "title": "Ranking a random feature for variable and feature selection",
      "venue": "Journal of Machine Learning Research, Special Issue on Variable/Feature Selection,",
      "year": 2003
    },
    {
      "authors": [
        "Q. Tan",
        "G. Yu",
        "C. Domeniconi",
        "J. Wang",
        "Z. Zhang"
      ],
      "title": "Incomplete multi-view weak-label learning",
      "venue": "In IJCAI,",
      "year": 2018
    },
    {
      "authors": [
        "Y. Tao",
        "K. Yi",
        "C. Sheng",
        "P. Kalnis"
      ],
      "title": "Quality and efficiency in high dimensional nearest neighbor search",
      "venue": "In Proc. of the ACM SIGMOD Inter. Conf. on Mgmt. of Data,",
      "year": 2009
    },
    {
      "authors": [
        "N. Tishby",
        "N. Zaslavsky"
      ],
      "title": "Deep learning and the information bottleneck principle",
      "venue": "In Information Theory Workshop (ITW),",
      "year": 2015
    },
    {
      "authors": [
        "D.N. Toma\u0161ev"
      ],
      "title": "Mladeni\u0107. Hubness-aware shared neighbor distances for high-dimensional k-nearest neighbor classification",
      "venue": "Knowledge and information systems,",
      "year": 2014
    },
    {
      "authors": [
        "I. Triguero",
        "S. Gar\u0107\u0131a",
        "F. Herrera"
      ],
      "title": "Self-labeled techniques for semi-supervised learning: taxonomy, software and empirical study",
      "venue": "Knowledge and Information systems,",
      "year": 2015
    },
    {
      "authors": [
        "H. Tuomisto"
      ],
      "title": "A consistent terminology for quantifying species diversity",
      "venue": "yes, it does exist. Oecologia,",
      "year": 2010
    },
    {
      "authors": [
        "V.V.B. Surya",
        "H. Prasath",
        "A. Arafat",
        "O. Lasassmeh",
        "A. Hassanat"
      ],
      "title": "Distance and similarity measures effect on the performance of k-nearest neighbor classifier",
      "year": 2017
    },
    {
      "authors": [
        "M. Verleysen",
        "D. Fran\u00e7ois"
      ],
      "title": "The curse of dimensionality in data mining and time series prediction",
      "venue": "In International Work-Conference on Artificial Neural Networks,",
      "year": 2005
    },
    {
      "authors": [
        "S. Wachter",
        "B. Mittelstadt",
        "C. Russell"
      ],
      "title": "Counterfactual explanations without opening the black box: Automated decisions and the gdpr",
      "venue": "Harvard Journal of Law and Technolog,",
      "year": 2018
    },
    {
      "authors": [
        "F. Wang",
        "C. Rudin"
      ],
      "title": "Falling rule lists",
      "venue": "In Artificial Intelligence and Statistics,",
      "year": 2015
    },
    {
      "authors": [
        "F. Zhao",
        "Y. Guo"
      ],
      "title": "Semi-supervised multi-label learning with incomplete labels",
      "venue": "In IJCAI,",
      "year": 2015
    }
  ],
  "sections": [
    {
      "text": "ar X\niv :1\n90 1.\n00 24\n6v 2\n[ cs\n.L G\n] 1\n8 Ja\nn 20\n19\nNatively Interpretable Machine Learning and Artificial Intelligence:\nPreliminary Results and Future Directions\nChristopher J. Hazard\u2217, Christopher Fusting\u2217, Michael Resnick\u2217, Michael Auerbach\u2217,\nMichael Meehan\u2217, Valeri Korobov\u2217\nJanuary 21, 2019"
    },
    {
      "heading": "1 Abstract",
      "text": "Machine learning models have become more and more complex in order to better approximate complex functions. Although fruitful in many domains, the added complexity has come at the cost of model interpretability. The once popular k-nearest neighbors (kNN) approach, which finds and uses the most similar data for reasoning, has received much less attention in recent decades due to numerous problems when compared to other techniques. We show that many of these historical problems with kNN can be overcome, and our contribution has applications not only in machine learning but also in online learning, data synthesis, anomaly detection, model compression, and reinforcement learning, without sacrificing interpretability. We introduce a synthesis between kNN and information theory that we hope will provide a clear path towards models that are innately interpretable and auditable. Through this work we hope to gather interest in combining kNN with information theory as a promising path to fully auditable machine learning and artificial intelligence."
    },
    {
      "heading": "2 Introduction and Motiva-",
      "text": "tions\nAs machine learning has matured the need to understand, interpret and explain models has become increasingly important [Alpaydin, 2016, Mohri et al., 2012, Goodfellow et al., 2016]. Machine learning models are interpreted in a variety of ways including exploring the internals of a model [Skapura, 1996, Poerner et al., 2018], creating ex post rationalizations [Ribeiro et al., 2016, Google LLC, 2018] or using models that are interpretable from the begin-\n\u2217Diveplane Corporation. If you are interested in using our technology, please contact info@diveplane.com. The authors would like to thank the investors, employees, and supporters of Diveplane Corporation for making this work possible.\nning and maximize their accuracy [Wang and Rudin, 2015]. There is a perception and some supporting evidence that there exists a trade off between accuracy and interpretability [Cano et al., 2006].\nThe motivating philosophy behind our work is that models should be innately interpretable. Specifically, our motivations are:\n\u2022 decisions should be directly traceable to the training data that caused the decision to be made; \u2022 the regions of the model should be easily characterized directly from the training data; and \u2022 assumptions are minimal.\nTo achieve the aforementioned goals we combine kNearest Neighbors (kNN) with the principle of maximum entropy to create models that are easy to understand, make minimal assumptions, and are nonparametric.\nk-Nearest Neighbors is one of the oldest, simplest, and most accurate algorithms for pattern classification and regression models [Hastie et al., 2001]. It is a simple technique that is easily implementable [Alpaydin, 1997]. The accuracy of kNN-based classification, prediction, and recommendation depends solely on a data model. Outputs from the model are usually traceable back to the exact data that influenced each decision. This traceability enables detailed analysis of the decision inputs and characterization of the data local to the decision.\nk-Nearest Neighbors was previously a dominant machine learning technology [Coomans and Massart, 1982, Breiman et al., 1984, Altman, 1992, Alpaydin, 1997] but was largely abandoned with the growing size of data and the computational complexity of finding the nearest k points [Raikwal and Saxena, 2012, Schuh et al., 2014, Hmeidi et al., 2008]. Many optimizations have been proposed over the years, they generally seek to reduce the number of distances actually computed [Pedregosa et al., 2011]. The optimizations include linear scan, Kd-trees, ball-\nCopyright 2018-2019 Diveplane Corporation. 1\ntrees, etc. [Pedregosa et al., 2011]. The curse of dimensionality has also been known to adversely affect kNN [Hastie et al., 2001, Indyk and Motwani, 1998, Schuh et al., 2013, Tao et al., 2009] and the selection of a distance function can be challenging [V. B. Surya et al., 2017]. Additionally features may have to be scaled or standardized to prevent distance measures from being dominated by one of the features. The accuracy of kNN can be severely degraded by the presence of noisy or irrelevant features, or if the features scales are not consistent with their relevance. Finally, kNN requires a value of parameter k. If k is too small, the model may have low bias but be sensitive to noisy points and have too high of variance. If k is too large, the neighborhood may include points from other classes and may have too little variance.\nOur contributions in this paper are several. First, we bring numerous well-studied techniques together to improve the efficacy of kNN. Second, we connect kNN with information theory and describe numerous ways this can be applied to machine learning. Third, we illustrate how the first two contributions open the door to interpretable reinforcement learning. Throughout this paper we discuss targetless models (models in which we are interested in predicting all the features using all the others), their utility in understanding the data, and introduce an imputation method that naturally arises from such models.\nThe purpose of this paper is to offer a glimpse as to what the combination of kNN and information theory can offer in advancing the state of the art of machine learning and artificial intelligence."
    },
    {
      "heading": "3 Targetless kNN and Entropy",
      "text": "We introduce term targetless learning to describe our approach to kNN. Instead of the traditional approach of building a model that learns the mapping from a set of input features variables to a set of target variables, or building multiple models to learn multiple mappings, our models consist of the relevant training data stored in a data structure that can be quickly queried. We may wish to predict and characterize any set of variables given any other set of variables. This flexibility is generally not emphasized in the related literature outside of a subset of work on semi-supervised learning and imputation [Tan et al., 2018, Zhao and Guo, 2015], and so we define two more terms to help us describe inputs and outputs in targetless learning. Context features are the feature variables being used as inputs for a particular query. Action features are the feature variables that\nare being labeled, actioned upon, or predicted; in traditional targeted machine learning, these are usually referred to as target variables, labels, or responses with regard to a targeted machine learning model. These terms further reflect the origin and potential for online learning applications of this approach."
    },
    {
      "heading": "3.1 Similarity of Points",
      "text": "When determining the value of an unknown action feature, the action features of the k most similar points are averaged or their values voted upon to determine the most likely value. In general similarity is determined by a distance metric. Unfortunately as the number of dimensions increases it becomes difficult to distinguish points [Hinneburg et al., 2000, Beyer et al., 1999]. One proposed solution to this problem is to use the number of shared nearest neighbors as a similarity measure [Houle et al., 2010]. There is also evidence that fractional norms heading towards zero enable points to be distinguished more easily in high dimensional space [Aggarwal et al., 2001]. Fractional norms are represented as ||x||p as\n||x||p = ( \u2211\ni\u2208\u039e\nwix p i\n)1/p\n, (1)\nwhere p is the parameter for the Lebesgue space, \u039e is the feature set, and wi is the weight for each feature, often where wi = 1 n .\nMotivated by this result we derived the Minkowski distance as p \u2192 0 expressed over feature set \u039e\nlim p\u21920 dp (x, y) =\n(\n\u220f\ni\u2208\u039e\n|xi \u2212 yi| )\n1 |\u039e|\n. (2)\nWhen feature weights wi satisfy \u2211 i\u2208\u039e wi = 1 we have\nlim p\u21920\ndp (x, y) = \u220f\ni\u2208\u039e\n|xi \u2212 yi|wi . (3)\nNote equations 2 and 3 are geometric means and have the useful property of being scale invariant. Scale invariance means that scaling a feature by any factor will not affect the ordering of proximity, as the result is the same as multiplying all of the distances by a constant. Thus using p = 0 enables the data to be stored in its original form, not scaled, standardized, or normalized, which improves the transparency of the model and removes the need for that aspect of feature engineering. As lim p \u2192 0, the scale of features matters less, meaning that the Minkowski distance is approximately scale invariant with regard to p values that are relatively close to 0.\nCopyright 2018-2019 Diveplane Corporation. 2"
    },
    {
      "heading": "3.1.1 A Probabilistic Approach",
      "text": "We are unaware of any prior work that has investigated using p = 0 as a distance function.1 This is unsurprising, as p = 0 causes significant problems for any data set that has categorical data or other data that may be exactly equal. Consider a data set that has two features. If two points have equal values for the first feature, then the distance between the points will be zero regardless of the distance between the other values of the other feature, due to the multiplication by zero.\nInstead, consider distance probabilistically, in the sense that each feature \u201cdistance\u201d is the probability that the two values are different given the observations or measurements of the feature values (instead of being the absolute value of their difference) as a way of handling uncertainty [Agarwal et al., 2016]. If we assume that each observation is independent, then simply multiplying the probabilities that each feature value is the same yields the same distance measure as Equation 2 when determining the conjunction of the probabilities. Solving the problems that come from exact matches using p = 0 means we can work directly with probabilities or deal with features on wildly different scales without having to standardize or otherwise scale them. Using the geometric mean to combine measurements of achieving different goals has been shown to be an effective objective function for multicriteria optimization [Harrington, 1965], and so using it to provide contrast between different similarities is a natural use.2\nSuppose we have made two observations of a value, x and y respectively, and we would like to know the \u201cdistance\u201d between them. The obvious distance of |x \u2212 y| yields the maximum likelihood value of the distance, but does not yield the expected value of the distance. Consider that there is considerable deviation among observations of the same value, meaning that there is likely to be a relatively large expected difference between observations of the same value. We use the term deviation to encompass both the error, which pertains the difference between actual and measurement, and the residual, which pertains\n1Using p = 0 is in not a metric, and arguably not a distance function, as it fails the triangle inequality. Further, it is not technically p = 0 but rather limp\u21920, but we use this abuse of notation for simplicity.\n2We note that this realization was inspired by early blog post drafts of work done by Leinster and Meckes [2016] in that the generalized diversity index, which can be parameterized to measure the Shannon entropy, is nothing more than the reciprocal of the generalized mean when substituting p \u2212 1 for p when dealing with probabilities [Tuomisto, 2010], and the Minkowski distance is just the generalized mean of the differences.\nto the difference between actual and estimated. This generic use of deviation applies regardless of whether the observation is measured, predicted, or inferred, and regardless of whether the deviation is due to randomness or lack of additional information that would reduce the deviation.\nConsider two observations, x and y, with considerable deviation. If x = 100 \u00b1 10 and y = 100 \u00b1 10, intuitively the expected distance between x and y is likely to be greater than 0 even though the expected values is the same, yet a simple subtraction yields 0. Further, consider that x and y are feature vectors of length two of x = {1.1, 100} and y = {1.2, 10}. If we have a third observation that is z = {1.1, 10.01}, using p = 0 for measuring the similarity between z and both x and y will yield x as infinitely closer than y because the difference between the first terms is zero and the multiplication makes the distance zero. Though this may sometimes be desirable, larger deviations for the first feature and smaller deviations for the second feature should yield y as more similar to z than x.\nTo solve the problem of zero expected distance for identical measurements despite deviation, and to address the high sensitivity of Lp with close or exact matches with a low p value, we employ the LukaszykKarmowski metric [ Lukaszyk, 2003, 2004]. Given a probability density function of x, f , and a probability density function of y, g, the expected difference between them becomes\nd(x, y) =\n\u222b \u221e\n\u2212\u221e\n\u222b \u221e\n\u2212\u221e\n|x\u2212 y|f(x)g(y) dx dy. (4)\nWe assume that if both points are near enough to be worth determining the distance between them, then the distributions and parameters for the probability density functions should represent the local data. The two simple maximum entropy distributions on (\u2212\u221e,\u221e) given a point and a distance around the point are the Laplace distribution (double exponential) and Gaussian distribution, depending on whether the distance is represented as mean absolute error or standard deviation respectively. The Gaussian or normal distribution has a clean closed form solution. Letting \u00b5xy \u2261 |x \u2212 y|, the expected distance for two normal identical distributions becomes\ndNN (x, y) = \u00b5xy+ 2\u03c3\u221a \u03c0 exp\n(\n\u2212\u00b5 2 xy\n4\u03c32\n)\n\u2212\u00b5xy erfc (\u00b5xy\n2\u03c3\n)\n.\n(5) For the previous example of x = 100 \u00b1 10 and y = 100\u00b110, the expected distance is approximately 11.3, which is more reasonable for two values that have a standard deviation of 10.\nCopyright 2018-2019 Diveplane Corporation. 3\nIn order to employ this measure, however, we need a value for the deviations. Measurement error may not always be readily available, and it does not take into account the additional error among the relationships within the model. For continuous values we can find the smallest nonzero distance between any two points in the data with regard to the feature. Because that is the smallest observed distance, we do not know whether the model\u2019s relationships can yield a finer resolution, so this acts as an empirical lower bound for the deviations and a good starting value.\nAlternatively residuals can be calculated for each prediction. The mean absolute error or standard deviation can be calculated for each observation using a hold-one-out approach, where instances are removed from the model and each of the held out instance\u2019s features are predicted using the rest of the data. These errors can be locally aggregated or can be aggregated across the entire model to obtain the expected residual, r, for predicting each feature, i, as ri. We have found that using the residuals in the kNN system with the Lukaszyk-Karmowski metric, calculating new residuals, and then feeding these back in, generally yields convergence of the residual values with notable convergence after only 3 or 4 iterations.\nMeasuring a distance value for each feature further enables parameterization regarding the type of data a feature holds. For example, nominal data can result in a distance of 1 if the values are not equal and 0 if they are equal. Thus, one-hot encoding, the expansion of nominal values into multiple features, is not needed. Ordinal data can use a distance of 1 between each ordinal type. Cyclical data can perform appropriate subtractions while keeping the data on a single dimension, which keeps the feature in one dimension and directly understandable rather than having to split the feature into two using trigonometry."
    },
    {
      "heading": "3.2 Information in the Data",
      "text": "We now quantify the amount of information in a kNN model. Because our formulation of kNN uses a similarity measure based on distance, we first quantify each point x by the amount of distance it contributes to the k nearest points. In general, we define conviction as a normalized measure of how much surprisal one would expect for a given situation relative to the surprisal observed. If we have some form of prior distribution of data given all of the information observed up to that point, the surprisal is the amount of information gained when we observe a new sample, event, case, or state change and update the prior distribution to form a new posterior distribution after the event. The surprisal of an event of observing a\nrandom variable x \u223c X is defined as I(x) = \u2212 ln p(x). Thus, the conviction, \u03c0, can be expressed as\n\u03c0(x) = E[I(X)]\nI(x) . (6)\nThis ratio results in conviction values \u03c0 \u2208 [0,\u221e), where\n\u2022 \u03c0 = 0 means this point has an infinite amount of surprisal, that is, the point was previously thought to be impossible to exist within the dataset; \u2022 \u03c0 = 1 means this point has an average amount of surprisal, that is, it adds an average amount of information to the model; and \u2022 \u03c0 = \u221e means this point is not at all surprising, that is, it is so redundant that the point could be discarded without affecting the model at all.\nThis ratio is indicative of how much information is required to encode one aspect of the model relative to another, whether dealing with cases or features. In some cases conviction can act as a proxy for several matters, such as how confident we are about our data, whether the data is correct or anomalous, whether the data belongs together, or whether the data is useful in making predictions. In other cases, conviction can inform how the model will be harmed if data is removed, and additionally can be used to control the surprisal when performing data synthesis.\nConviction can be computed in a targeted or targetless manner. In a targeted manner, each feature or case is compared against another set of target cases or features one on one. In an untargeted manner, each case or feature is held out one by one and compared against the rest of the data in the model. When holding one out, the change in probability impact on other elements of the model indicates a measure of hubness or centrality of the data which, when isolated, has been found to be of significant importance for determining the influence of data on the model [Tomas\u030cev and Mladenic\u0301, 2014].\nIf the probability space over which conviction is normalized is broadened (or if surprisal is used without normalization), then even the model impact of combinations of features can be compared to that of combinations of observations.\nIn the following sub-sections, we discuss different forms of conviction that can be derived. More forms of surprisal and conviction can be conditioned and computed, opening up a rich area for different kinds of informativeness about various aspects of the model.\nWe note that conviction is related to, but not exactly the same as, feature importance or case influ-\nCopyright 2018-2019 Diveplane Corporation. 4\nence and so care must be taken when comparing the two.3"
    },
    {
      "heading": "3.2.1 Prediction Conviction",
      "text": "We define prediction conviction is the amount of surprisal required to predict a value given a model given the model\u2019s uncertainty. To characterize the model\u2019s uncertainty, we use residuals.\nDefinition 1 Let \u03be be the number of features in a model and n the number of observations. We define the residual function, r : X \u2192 R\u03be, on the training data X as\nr(x) = J\u21261 (x), J \u2126 2 (x), . . . , J \u2126 \u03be (x), (7)\nwhere J\u2126i is the residual of the model on feature i at point x, parameterized by a set of hyperparameters \u2126. We will refer to the residual function evaluated on all of the model data as rM .\nTypically, the feature residuals will be calculated as mean absolute error or standard deviation. Further, subsets of features may be used to compute the residual, particularly when performing targeted operations.\nDefinition 2 Given a point x \u2208 X and the set K of its k nearest neighbors, a distance function d : R\nz\u00d7Z \u2192 R, and a distance exponent \u03b1, the distance contribution of x is the harmonic mean\n\u03c6(x) =\n(\n1\n|K| \u2211\nk\u2208K\n1\nd(x, k)\u03b1\n)\u22121\n. (8)\nThe distance contribution reflects how much \u201cdistance\u201d a point contributes to a graph connecting the nearest neighbors, which is the inverse of the density of points over a unit of distance in the Lebesgue space. The harmonic mean of the distance contribution reflects the inverse of the inverse distance weighting often employed with kNN, though other techniques may be substituted if inverse distance weighting is not employed.\nWe can quantify the information needed to express a distance contribution \u03c6(x) by transforming it into a probability. We begin by selecting the exponential distribution to describe the distribution of residuals as it is the maximum entropy distribution constrained\n3It is possible to compare the results of estimating values for a feature, and then compute a conviction ratio comparing the mutual information among a set of estimated values as an information theoretic representation of mean decrease in accuracy or Shapley value. This would be an information theoretic result that is much closer to feature importance.\nby the first moment.4 We represent this in typical nomenclature for the exponential distribution using the norm from Equation 1 as\n1 \u03bb = ||r(x)||p. (9)\nWe can directly compare the distance contribution and p-normed magnitude of the residual. This is because the distance contribution and the norm of the residual are both on the same scale, with the distance contribution being the expected distance of new information that the point adds to the model, and the norm of the residual is the expected distance of deviation. Given the entropy maximizing assumption of the exponential distribution of the distances, we can then determine the probability that a distance contribution is greater than or equal to the magnitude of the residual ||r(x)||p in the form of cumulative residual entropy [Rao et al., 2004] as\nP (\u03c6(x) \u2265 ||r(x)||p) = e\u2212 1 ||r(x)||p \u00b7\u03c6(x) . (10)\nWe then convert the probability to self-information as I(x) = \u2212 lnP (\u03c6(x) \u2265 ||r(x)||p), (11) which simplifies to\nI(x) = \u03c6(x)\n||r(x)||p . (12)\nAs the distance contribution decreases, or as the residual vector magnitude increases, less information is needed to represent this point. We can then compare this to the expected value in regular conviction form, yielding a prediction conviction of\n\u03c0p = EI\nI(x) , (13)\nwhere I is the self-information calculated for each point in the model."
    },
    {
      "heading": "3.2.2 Prediction Contribution",
      "text": "Feature prediction contribution is motivated by mean decrease in accuracy (MDA) [Archer and Kimes, 2008]. In MDA, scores are established for models with\n4Other distributions may be selected by adjusting the assumptions slightly, such as the log-normal distribution. The log-normal distribution is the maximum entropy distribution assuming that we know the standard deviation rather than the mean, but this distribution assumes that something closer is less likely, and may be better suited for familiarity conviction. Further, the exact distribution of the distance contribution may be solved if the distributions of the features are known.\nCopyright 2018-2019 Diveplane Corporation. 5\nall the features, M , and models with each feature held out, M\u2212fi , i = 1 . . . \u03be. The difference |M\u2212Mfi | is the importance of each feature, where the result\u2019s sign is altered depending on whether the goal is to maximize or minimize score. Feature prediction contribution differs from MDA in that feature prediction contribution measures the conditional entropy of adding a feature. This means using prediction conviction on features with significant information may yield higher contribution values even if the feature is independent.\nPrediction contribution information, \u03c0c, is correlated with accuracy and thus can be used as a surrogate. The expected self-information required to express a feature is given by\nEI(M) = 1\n\u03be\n\u03be \u2211\ni=0\nI(xi),\nand the expected self-information to express a feature without feature i is\nEI(M\u2212i) = 1\n\u03be\n\u03be \u2211\nj=0\nI\u2212i(xj).\nFrom these equations, we can more formally define prediction contribution of a feature and prediction conviction of a feature.\nDefinition 3 The prediction contribution of a feature, \u03c0c, of feature i is\n\u03c0c(i) = EI(M) \u2212 EI(M\u2212fi)\nEI(M) .\nDefinition 4 The prediction conviction of a feature, \u03c0p, of feature i is\n\u03c0p(i) =\n1 \u03be \u2211\u03be i=0 EI(M\u2212fi)\nEI(M\u2212fi) ."
    },
    {
      "heading": "3.2.3 Familiarity Conviction",
      "text": "Familiarity conviction is a metric for describing surprisal of points in a model relative to the training data. This differs fundamentally from prediction conviction. Consider a data set that has data points at regular intervals, such as a data point for each corner in a grid. Given this grid data, prediction conviction will indicate that a data point very close to an existing data point will not be surprising and that it should be easy to predict given the low level of uncertainty. However, familiarity conviction would indicate a higher surprisal for such a point even though it is easy to label because the point is unusual with regard to the even distribution of the rest of the data\npoints. This new point does not form another corner of the grid. The pair of prediction conviction and familiarity prediction can be used together to find and remove data points that are easy to predict but unusual with regard to uniqueness of data. These properties make familiarity conviction valuable for sanitizing data and reducing data as well as extracting patterns and anomalies, as is discussed in other sections.\nFamiliarity conviction is based on the similarity metrics as described in Section 3.1. As long as a low or zero value of p is used in Lp space metrics for similarity, familiarity conviction is independent of the scale of the data and provided and does not overreact to feature dominance based on feature scale and range.\nDefinition 5 Given a set of points X \u2282 Rz for every x \u2208 X and an integer 1 \u2264 k < |X | we define the distance contribution probability distribution, C of X to be the set\nC =\n{\n\u03c6(x1) \u2211n\ni=1 \u03c6(xi) ,\n\u03c6(x2) \u2211n\ni=1 \u03c6(xi) , . . . ,\n\u03c6(xn) \u2211n\ni=1 \u03c6(xi)\n}\n(14) for a function \u03c6 : X \u2192 R that returns the distance contribution.\nNote that because \u03c6(0) = \u221e may be true under some circumstances, multiple identical points may need special consideration, such as splitting the distance contribution among those points.\nRemark 1 Clearly C is a valid probability distribution. We will use this fact to compute the amount of information in C.\nDefinition 6 The point probability of a point xi, i = 1, 2, . . . , n is\nl(i) = \u03c6(xi) \u2211\ni\n\u03c6(xi) , (15)\nwhere we see the index i is assigned the probability of the indexed point\u2019s distance contribution.\nDefinition 7 We the set of random variables that characterize the discrete distribution of point probabilities, L, is the set of L = {l(1), l(2), . . . , l(n)}.\nRemark 2 Because we have no additional knowledge of the distribution of points other than they follow the distribution of the data, we assume L is uniform as the distance probabilities have no trend or correlation.\nRemark 3 A distance contribution is a discrete distribution of point probabilities.\nCopyright 2018-2019 Diveplane Corporation. 6\nDefinition 8 The familiarity conviction of a point xi \u2208 X is\n\u03c0f (xi) =\n1 |X|\n\u2211\ni\nKL (L||L\u2212 {i} \u222a El(i))\nKL (L||L\u2212 {xi} \u222a El(i)) , (16)\nwhere KL is the Kullback-Leibler divergence. Since we assume L is uniform, we have that the expected probability El(i) = 1n .\nEquation 16 can thus be used to compute familiarity conviction."
    },
    {
      "heading": "3.3 Consequences of kNN Endowed with Conviction",
      "text": "Having defined two methods (convictions) to measure surprisal in the space of points X , we introduce techniques that naturally fall out of the informationbased representation. The ability to add and remove points to a model easily without retraining, coupled with familiarity and prediction conviction, enable numerous applications in model compression, online learning, anomaly detection, model to model comparison, reinforcement learning, synthetic data generation, and likely more techniques we have not considered. We detail some of these in the subsections following."
    },
    {
      "heading": "3.3.1 Entropy-Based Model Reduction",
      "text": "Accuracy is best from models with more data, but using kNN with additional data comes at a computational cost. Even for models where that relationship does not hold, the memory needed to store the data can be expensive. This important problem has received some attention with some promising results despite the difficulty of being an NP-hard problem [Gottlieb et al., 2014, Kontorovich et al., 2017]. Our probability and entropy based approach offers some new ways of looking at this problem in an interpretable manner, relaxing some constraints with regard to strict metric spaces.\nThe entropy measures we discuss can be employed for pruning the model of cases as well as for targetless feature pruning, thereby reducing data size while retaining information in the model. Overall, performing feature or case pruning can benefit any system by reducing the memory and possibly computational resources needed to use the model. Further, these techniques can be used to help direct training, that is, which parts of the model may benefit from having more data. We note that model reduction may be\ntargetless, and in such cases is not a substitute for feature engineering for a targeted application. Rather, it is useful for removing redundant data to focus on the most or least surprising relationships.\nOur entropy-based techniques are generally applicable to either feature or case pruning based on the amount of information that each feature or case provides to the model. A first step in data reduction can be to detect and remove anomalies from the model. Anomalous cases, arguably, reduce the average usefulness of decisions the model makes. Therefore, removing anomalies can actually improve the usefulness of the model while slightly reducing the model size. A next step to reduce model size would be to use our techniques to remove those cases or features that do not provide significant-enough amounts of information to the model.\nThere are a few approaches we use to determine which cases or features to prune. We can look at the surprisal of the case relative to the rest of the model. If the surprisal is low, the case may be removed from the model for being redundant, which may be done dynamically for online learning. In some circumstances, we keep the instances with the highest surprisal (i.e., the most informative) in order to cap the model size, or remove the case with the lowest surprisal in order to reduce the model size by a set amount. We can also keep the cases with a surprisal above a certain threshold, and perhaps vary that threshold, balancing model size and information. This also applies to features in the model. Those features with high surprisal can be kept (or alternatively, those features with low surprisal can be removed), thereby reducing the model size in the feature space. Further, both case pruning and feature pruning could be performed, reducing the model in both dimensions.\nThough we have outlined a few surprisal and conviction measures in this paper for model reduction, they can be combined other ways to perform model reduction, or used with other feature engineering techniques. For example, feature prediction conviction could be used to determine whether to include features in a targetless model, based on high or low surprisal for predictions. Feature familiarity conviction could be used to determine which features have training data that most conforms to typical training data reflected in the rest of the model."
    },
    {
      "heading": "3.3.2 Model-to-Model Surprisal",
      "text": "In that kNN models are data, we can compare them using prediction and familiarity conviction directly. The use of such a comparison is of particular inter-\nCopyright 2018-2019 Diveplane Corporation. 7\nest in online learning where one could detect a nonstationary process by comparing models built during different times. In reinforcement learning one could compare models to establish propensity for exploration verses exploitation.\nFurther, by measuring the amount of surprisal that one model contributes to another, some sparse machine learning problems can be transformed into dense problems. Consider numerous individuals that occasionally take some action of a certain type. A model may be trained for each individual, and then compared with surprisal against other individuals or against larger aggregated models to find which larger model would be least surprising for the individual to be included in. We have found promising initial results in commercial settings with these techniques. Combining these untargeted techniques with targeted model selection techniques, such as Bayesian information criterion [Schwarz et al., 1978] or Akaike information criterion [Akaike, 1973] is another potential future direction."
    },
    {
      "heading": "3.3.3 Data Imputation and Overcoming Data Sparsity",
      "text": "Sparse data is an issue for many machine learning systems, which fail to perform or perform poorly when trained with sparse data, especially if the data is sparse across multiple features.5 The sparse data can come from sporadic unobservability (i.e., failure to capture the feature at particular times) and unavailability (e.g., no collection of certain feature at certain times, a common issue with historical datasets). Regardless of the cause, the combination of targetless kNN with entropy can be used to overcome sparsity by imputing missing features in sparse data, and doing so in a way that reflects the dataset.\nIn past approaches, generically solving for missing values in a data set has presented many challenging problems, such as Boolean satisfiability and other NP-complete and NP-hard problems. When the rules that determine the missing values are also unknown, the problem becomes even more difficult. Semi-supervised learning has been a rich area of study to attempt to tackle this problem [Triguero et al., 2015]. Our targetless approach, when combined with conviction, offers a novel technique for imputation that can fill in missing data across all of the features\n5We are referring to the limited semisupervised learning techniques that are typically available to by data scientists. There are a number of statistics techniques available if sufficient information about a distribution is known, and domain specific imputation techniques, particularly for language processing, such as that of Gemmeke and Cranen [2008].\nand scaffold knowledge from cases with missing data as it fills the missing data in.\nThe algorithm finds the cases with missing data that are least surprising, labels them, inserts the label into the model for the case, and repeats the process until no more missing data exists. Grouping the cases into batches (i.e. imputing multiple missing data points in a batch) can improve performance so that conviction only needs to be computed occasionally.\nMore specifically, the algorithm orders the cases with missing data by their surprisal for each feature, conditioned only on the data known for the case, from lowest to highest. For particularly sparse data, we have had success with first ordering the cases by those with the fewest nulls prior to ordering by entropy.6 Starting with the case with the lowest entropy, we determine a value for the missing data using kNN based on the known features.7 We can determine values for multiple features at once (in batch), or determine just one missing value, and then redetermine the entropy for the cases, and return to impute more data. This process continues until all of the data is complete. When we want to merely reduce the sparsity of the data (vs. filling in all of the values), we can continue until we hit a termination condition or sparsity threshold. Additional work is needed, but we believe a viable termination condition is ceasing data imputation when the entropy for the lowest-entropy case exceeds a threshold. We believe that, after that point, the additional informational value of the imputed data may be low, and, as such, we cease imputing missing data."
    },
    {
      "heading": "3.3.4 Auditability, Explanations, and Automated Decision Making",
      "text": "The choice of a kNN model allows us number of interesting opportunities related to providing explanations of the data. With kNN, the model is the data. The model is only complemented by kernel parameters to define nearest neighbors, and with any weights, adjustments or removal of data. In both the assessment of the model for decision or action suggestion, the data points that are within the kernel, or that are above a certain threshold for how much they impact\n6Currently, we use entropy for the cases to determine what data to impute first, but we are also exploring the use of entropy for features. We first order by feature entropy, and then by entropy of the cases missing the lowest entropy feature. We would impute that data first, then recalculate entropies for the model, similar to the manner described above.\n7We can also use the techniques described in this paper for synthetic data generation to determine the value for the missing feature as described in Section 3.3.6.\nCopyright 2018-2019 Diveplane Corporation. 8\nthe kernel values, are the data points that caused the decision. This is compelling from a machine decision auditability perspective because it means that the data relevant to each decision is directly identified, and that auditing, editing or removing the training data identified as being associated with a decision would have had a direct effect on the decision.\nBelow, we discuss numerous types of explanation data that can be derived from a kNN model. For each, we give a short description of how it is generated, and what a system or operator can do with it. As an overview, for each type of explanation data (or based on combinations of explanation data), that data can be passed to a system or human operator for review. The system or human operator can use the explanation data to decide whether to perform the action in question, perform a different action, or perform no action at all. Additionally, this data can be used after-the-fact to audit decisions that were made. Auditability begins, as alluded to above, with the fact that we can determine what data was used to suggested an action. The explanation data can also be generated either at the time of suggesting the action or at the time of the audit.\nOne of the measures we use as part of our explanation data is conviction, which can be seen, broadly, as the ratio of the amount of surprisal of a particular case to the actual surprisal. Numerous types of conviction are discussed in this paper, such as familiarity conviction and prediction conviction. We also discuss formulating each in a targeted or untargeted manner. Any of these formulations for conviction may be used and provided as an explanation data along with answers or suggested actions. As an example, targeted or untargeted familiarity conviction may be calculated and provided to along with a suggested decision. An overly low (or high) conviction score can be a cause for concern, and that suggested decision may be flagged for further reviewed or ignored completely. In contrast, a suggested decision or action with a conviction score that is not concerning (e.g., a moderate conviction score, or, in some circumstances, a high conviction score), may be performed or acted upon without further review. A low conviction score may be associated with the data being outside the usual pattern of the data, and therefore be of concern for systems that are trying to perform \u201cusual\u201d actions. High conviction may be of concern when there is a desire to not perform actions that are too \u201cusual.\u201d A high and low pass filter can be used when there is a desire to perform actions that are neither overly usual or unusual, but instead are somewhere in the middle in terms of how expected they are.\nWe can also use feature prediction contribution or\nfeature prediction contribution to find bias in decision making. Many models and data sets contain many features, and are used for many decisions. As described elsewhere herein, our techniques can help prune a model of cases and features. Nevertheless, there may always be features in models that, in an ideal world, would contribute little to nothing to certain decisions. For example, in the context of financing decisions to individuals, there are certain features that, if decisions were made based on them, would constitute undesirable bias. These may include gender or race. The feature prediction contribution can be provided to the system or human operator to help determine whether making the decision based on that feature would constitute unpermitted bias. This could lead to pruning that feature from the model or taking other steps to reduce or eliminate its impact on the decision, such as the use of feature weights.\nThe local region of the model (which we will refer to as the local model) comes with no added cost with kNN and therefore we can perform analysis on the local model and make other queries on relevant data. As a few examples, we can easily find counterfactual cases [Wachter et al., 2018] and the boundary conditions they yield by performing a query on the data that maximizes the ratio of the action features to the total set of features. We can also find out if any of the features in a case associated with the actions suggested by the model are outside the range of the corresponding features of the cases in the local model. Features being outside the range may be cause for concern and may cause the suggested action to not be performed.\nAs a counter-point to the counterfactual cases, we can also determine archetype cases, cases that have the same action as the suggested action, and are furthest from other cases with different actions. The distance from the case with the suggested action to the archetype case can be used as explanation data, audit data, and to determine whether to perform a suggested action without further review.\nWe can find ratios of different types of conviction in the local model to those of the total model, which can indicate which cases and features add significant information to a particular region, and which add less information. If the information is not correlated with accuracy (e.g., has low conviction in the local model and high conviction in the model as a whole), then it may be a measure of noise. If the cases that contribute to the suggestion of an action are above a noisiness threshold, then it may be inadvisable to perform a suggested action. On the other hand, if the noisiness of the cases used to suggest an action is low, the system or operator may be confident in\nCopyright 2018-2019 Diveplane Corporation. 9\nperforming the action. There are many other ratios of conviction that may be used as explanation and audit data, and different of them will be useful in different scenarios.\nA \u201cless similar\u201d model can also be determined, where the closest k cases (by distance, by count, by density threshold) are excluded, and the distance to the next closest cases is determined. That distance can be used as explanation data, audit data, and to determine whether to perform a suggested action without further review. For example, a higher distance to the \u201cless similar\u201d cases can be an indicator that the suggested action is in a sparsely populated part of the model, and therefore should be reviewed before being acted upon.\nWe can also define feature residuals based on the local model (or a regional model that is the N nearest neighbors, where N can be the same, higher, or lower than the k used to define the local model). Here, we can use the mean absolute error, variance, or other moments or measures to predict how well the model predicts each feature when it is removed. We can also determine action probabilities, which, in the case of categorical actions, can be measured as the percentage of cases in the local model that have that categorical action. For continuous or ordinal actions, the action probability can be a probability measure based on the confidence interval of the suggested actions for a given tolerance (e.g., an action value for 250 may be 67% (the action probability) likely to be within +/-5 (the tolerance) of 250). Feature residuals and conviction can be used in conjunction; a prediction with high prediction conviction but also wide residuals may not be reliable, but a prediction with low prediction conviction but wide residuals may potentially be improved if further training data is added similar to the prediction. We can also determine local or regional model complexity (i.e., whether the variance is high, whether the accuracy is low, whether correlations among variables are low, etc.) and fractal dimensionality (i.e., placing a shape over the model and shrinking the scale of the shape and counting the number of smaller shapes needed to cover the extents of the model)."
    },
    {
      "heading": "3.3.5 Synthetic Data Generation and Reinforcement Learning",
      "text": "Given that prediction conviction is a method to express how surprising an observation is, we can reverse the math and use conviction to generate a new sample of data for a given amount of surprisal. The general approach is to randomly select or predict a feature of a case from the training data and then re-\nsample it based on the new condition. This approach is related to Gibbs sampling [Martino et al., 2015, Efros and Leung, 1999] in that it incrementally obtains new values for each feature conditioned on the previous values, though the conditioning and sampling is based on our approach to kNN.\nUsing the conditioned local residuals for a part of the model, as described in section 3.2.1, we can parameterize the random number distribution to generate a new value for a given feature. Our resampling method is related to the approach used by the MannWhitney test [Mann and Whitney, 1947], a powerful and widely used nonparametric test to determine whether two sets of samples were drawn from the same distribution. In the Mann-Whitney test, samples are randomly checked against one another to see which is greater, and if both sets of samples were drawn from the same distribution then the expectation is that both sets of samples should have an equal chance of having a higher value when randomly chosen samples are compared against each other. Our approach for resampling a point is to randomly chose whether the new sample is greater or less than the other point and then draw a sample from the distribution using the feature\u2019s residual as the expected value. Just as the exponential distribution is entropy maximizing given the sole constraint of a positive mean, the double-sided exponential distribution (also known as the Laplace distribution) is the entropy maximizing distribution given a positive mean distance about a point. The log-normal and other distributions may be used as well, depending on the types of residuals computed and assumptions made about the local distributions.\nIf a feature is not continuous but rather nominal, then the local residuals can populate a confusion matrix, and an appropriate sample can be drawn based on the probabilities for drawing a new sample given the previous value.\nSuppose we would like to generate synthetic data with features i \u2208 \u039e. If there are no conditions placed on the new synthetic data, then we start with a random feature i. Because the observations within the model are representative of the observations made so far, a random instance is chosen from the observations using the uniform distribution over all observations. Then the value for feature i of this observation is resampled via the methods mentioned above. The value for feature i then become a condition on subsequently-generated features.\nNext, suppose that we would like to generate feature j, given that features i \u2208 \u039e have corresponding values xi. The model labels feature j conditioned by all xi to find some value t. This new value t be-\nCopyright 2018-2019 Diveplane Corporation. 10\ncomes the expected value for the resampling process described above, and the local residual (or confusion matrix) becomes the appropriate parameter or parameters for the expected deviation to find the value for xj .\nThe process for filling in the features for an instance may begin with no feature values subject to conditions, or some feature values may have been specified as conditions for the data to generate. Either way, the remaining features may be ordered (i.e., selected for determination of a new value) randomly or may be ordered via a feature conviction value. When a new value is generated, then the process restarts with the new value as an additional condition."
    },
    {
      "heading": "3.3.6 Parameterizing Synthetic Data Via Prediction Conviction",
      "text": "Continuing with the double-sided exponential distribution as a maximum entropy distribution of distance in Lp space, we can derive a closed form solution for how to scale the exponential distributions based on a prediction conviction value.\nStarting with Equation 13, we specify a value, \u03bd, for the prediction conviction as\n\u03bd = \u03c0p(x) = EI\nI(x) (17)\nwhich can be rearranged as\nI(x) = EI\n\u03bd . (18)\nSubstituting in the self-information from Equation 12, we have\n\u03c6(x)\n||r(x)||p =\nEI\n\u03bd . (19)\nNote that the units on both sides of Equation 19 match. This is because of the natural logarithm and exponential in the derivation of Equation 19 cancel out, but leave the resultant in nats. We can rearrange in terms of distance contribution as\n\u03c6(x) = ||r(x)||p \u00b7 EI\n\u03bd . (20)\nTo proceed further we need to make an assumption about the distribution of distance contributions \u03c6. Seeking to minimize the complexity of our assumptions we simply observe that distances are supported by the positive reals. Constraining the first or first and second moments and maximizing the entropy gives us the exponential and log normal distributions respectively. For simplicity sake we proceed\nwith e(\u03b6) but note that in practice lnN (\u00b5, \u03c3) is often observed. One may distinguish among the distributions using likelihood curvature tools such as Fisher Information.\nIf we let p = 0, which is desirable for conviction and other aspects of the similarity measure, we can rewrite the distance contribution in terms of a norm of the values observed for the number of features, \u03be, each with an expected mean of 1\u03b6i . Taking the expected value of both sides we find\n(\n\u03a0i 1\n\u03b6i\n) 1 \u03be\n= (\u03a0iri)\n1 \u03be EI\n\u03bd . (21)\nDue to the number of ways of assigning surprisal across the features, many solutions may exist. However, unless otherwise specified or conditioned, we would want to distribute surprisal across the features holding expected proportionality constant. This allows us to write the distance contribution, which becomes the mean absolute error for the exponential distribution, as\n1/\u03b6i = ri\n(\nEI\n\u03bd\n)\u03be\n. (22)\nand solving for the \u03b6i to parameterize the exponential distributions, we find\n\u03b6i = 1\nri\n( \u03bd\nEI\n)\u03be\n. (23)\nEquation 23, taken with the value of the feature, becomes the distribution by which to generate a new random number under the maximum entropy assumption of exponentially distributed distance from the value."
    },
    {
      "heading": "3.3.7 Reinforcement Learning",
      "text": "The ability to randomly generate data with a controlled amount of surprisal is a novel way to characterize the classic exploration versus exploitation trade off in searching for an optimal solution to a goal. Currently, pairing a means to search, such as Monte Carlo tree search [Abramson, 1987], with a universal function approximator, such as neural networks, is the most successful approach to solving difficult reinforcement learning problems without domain knowledge [Silver et al., 2017]. Because our data synthesis technique comes from the universal function approximator model (kNN) itself, we can create a reinforcement learning architecture that is similar and tightly coupled.\nBecause the synthetic data generation can be conditioned, we can condition the search on both the current state of the system, as it is currently observed,\nCopyright 2018-2019 Diveplane Corporation. 11\nand a set of goal values for features. As the system is being trained, it can be continuously updated with the new training data. Once states are evaluated for their ultimate outcome, a new set of features or feature values can be updated or added to all of the observations indicating the final scores or measures of outcomes. Keeping track of which observations belong to which training sessions (or games) is a convenient way to track and update this data. Given that the final score or multiple goal metrics are already in the kNN database, the synthetic data generation can query for new data conditioned upon having a high score or winning conditions, with a specified amount of conviction.\nThis results in a reinforcement learning algorithm that can be queried for the relevant training data for every decision, as described in Section 3.3.4. The commonality among the similar cases, boundary cases, archetypes, etc. can be combined to find when certain decisions are likely to yield a positive outcome, negative outcome, or a larger amount of surprisal thus improving the quality of the model. By seeking high surprisal moves, the system will improve the breadth of its observations and learning, though it may not perform well. Setting the conviction of the data synthesis to 1 yields a balanced trade off between exploration versus exploitation. As more information is learned, this conviction value may be reduced to focus on achieving goals.\nThe interpretability of reinforcement learning may help overcome many of the data-availability issues. For example, when data is needed for dangerous, expensive, or otherwise difficult-to-produce training data, we can generate synthetic data conditioned in value and conviction to match those difficult circumstances. As such, our method can provide the sampling strategy necessary for reinforcement learning with more control than with current techniques."
    },
    {
      "heading": "4 Initial Results and Future Di-",
      "text": "rection\nAlthough providing a rigorous review of our results and methods is out of the scope of this paper, we summarize a few here to motivate and encourage additional exploration. We tested classic kNN as implemented in scikit-learn [Pedregosa et al., 2011], standardizing the scale of the features as is common practice in machine learning, against kNN with fractional p-values and limp\u21920 using uncertainty in distance as mentioned in Section 3.1.1 without standardization. We compared the results across a robust suite of 97 regression datasets and 78 classification datasets se-\nlected from among the benchmark data published by Olson et al. [2017].\nOn the classification datasets, scikit-learn\u2019s random forest implementation averaged an accuracy of 0.79. kNN already performs well on classification problems, averaging an accuracy of 0.76. However, using fractional p values, we saw the accuracy increase to 0.77, and allowing the p value of 0 based on uncertainty we saw the average accuracy improve to 0.78. Though the accuracy improvements of our techniques are slight, the use of low or zero p values means that we can maintain the data directly without scaling and that we have made a step toward accurate probability-based reasoning on data using conjunctions as described in Section 3.1.1.\nOn the regression datasets, scikit-learn\u2019s random forest implementation averaged an r-squared score of 0.77. In many situations, such as those involving extrapolation, kNN regression does not perform as well as other methods, and we saw this with the scikitlearn implementation resulting in an r-squared score of 0.53. However, our improvements yielded considerable gain in kNN\u2019s regression scores. Using fractional p values yielded an r-squared score of 0.57, which is a significant (p \u226a .001) improvement based on the Wilcoxon signed rank test. Further allowing the use of a zero p value with uncertainty in distance as mentioned in Section 3.1.1, the r-squared score improved to 0.66 which is also a significant result (p \u226a .001).\nWe believe that kNN\u2019s regression scores can also be improved to be competitive with other cutting edge algorithms. In Section 3.3.3, we showed how a targetless approach to data can fill in missing data, and from an auditability perspective it is easy to track the history of data imputation. Conversely, we are investigating exputation approaches can be employed to synthesize likely data points outside the bounds of the training data. Knowledge of the features, such as their bounds, can help when reflecting or amplifying or synthesizing exputed data points, which can then be used for interpolation.\nThe reason for our belief that this is a core problem lies with the topology of data as the dimensionality grows. As the number of dimensions increases for a given set of data, many intuitive analytical techniques such as Euclidian norms and Gaussian kernels become inappropriate as the unit radius hypervolume goes toward zero and the probability that data points falling in sharp corners of a hypervolume goes toward one [Verleysen and Franc\u0327ois, 2005]. This implies that nearly all data points will be at or beyond the periphery, requiring extrapolation. Dealing with any kind of cost or value function to perform optimization will mean that nearly all points are Pareto\nCopyright 2018-2019 Diveplane Corporation. 12\noptimal, meaning that it becomes increasingly more difficult to define \u201cgood\u201d because nearly every point has some unique quality. In many cases, the larger number of dimensions can be helpful, but primarily when the structure is extracted and the dimensionality is reduced [Kittler, 1986, Kohavi and John, 1997, Stoppiglia and Dreyfus, 2003]. As nearly all new observations will be on the periphery, we believe extrapolation techniques, such as exputation, are likely to improve results while maintaining interpretability.\nA dimensionality bottleneck is little different than the information bottlenecks used for generalization and variance reduction across other areas of machine learning [Tishby and Zaslavsky, 2015]. By employing clustering techniques in conjunction with model reduction techniques as mentioned in Section 3.3.1, selecting prototypes or archetypes to represent a cluster in a hierarchical fashion, we may be able to characterize the entropy flux between parts of the model, and hierarchical models and hierarchical explanations are natural consequences. We note the striking commonality of zero p value Lebesgue space as depicted in Appendix A, the conjunction of probabilities of independent distributions, and the core of the no-flattening theorem by Lin et al. [2017] that relates hierarchical architectures for neural networks and performance. Our future work will include further efforts to use probability throughout all parts of kNN such that any form of entropy or probability can be calculated, and assumptions can be clearly interpreted.\nAdditional future work will be to characterize our work in the performance and scalability of targetless kNN queries with fractional and zero p values, which is outside the scope of this paper.\nMaximizing the interpretability of artificial intelligence leads to either understanding the generalized relationships of the data, such as symbolic or treebased models, or to understand the data itself. With the improved performance of computing and the advances in kNN, we conclude that using kNN provides a promising foundation for the future of interpretable artificial intelligence and machine learning."
    },
    {
      "heading": "A Geometric Mean Derivation",
      "text": "The geometric mean can be derived from the generalized mean as\nlim p\u21920\n(\nn \u2211\ni=1\nwix p i\n)1/p\n= lim p\u21920 exp\n\nln\n\n\n(\nn \u2211\ni=1\nwix p i\n)1/p \n\n\n\n= lim p\u21920 exp\n( ln ( \u2211n i=1 wix p i )\np\n)\n.\nThen using L\u2019Ho\u0302pital\u2019s rule and the chain rule on the inner part of this equation, we can simplify as\nlim p\u21920\nln ( \u2211n i=1 wix p i )\np = lim p\u21920\n\u2211\nn i=1 wix p i lnxi \u2211\nn i=1 wix\np i\n1\n= lim p\u21920\n\u2211n i=1 wix p i lnxi\n\u2211n i=1 wix p i\n= \u2211n i=1 wi lnxi \u2211n\ni=1 wi\n= ln ( \u220fn i=1 x wi i )\n\u2211n i=1 wi\n.\nTherefore substituting back in the previous result\nCopyright 2018-2019 Diveplane Corporation. 15\nyields\nlim p\u21920\n(\nn \u2211\ni=1\nwix p i\n)1/p\n= lim p\u21920 exp\n( ln ( \u220fn i=1 x wi i )\n\u2211n i=1 wi\n)\n= ( e(ln ( \u220fn i=1 x wi i )) )\n(\n1 \u2211n\ni=1 wi\n)\n=\n(\nn \u220f\ni=1\nxwii\n)\n(\n1 \u2211n\ni=1 wi\n)\n.\nSetting all wi = 1 n yields\nlim p\u21920\n(\nn \u2211\ni=1\n1 n xpi\n)1/p\n=\n(\nn \u220f\ni=1\nxi\n) 1 n\n.\nCopyright 2018-2019 Diveplane Corporation. 16"
    }
  ],
  "title": "Natively Interpretable Machine Learning and Artificial Intelligence: Preliminary Results and Future Directions",
  "year": 2019
}
