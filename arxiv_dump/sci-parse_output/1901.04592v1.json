{
  "abstractText": "M learning (ML) has recently received considerable attention for its ability to accurately predict a wide variety of complex phenomena. However, there is a growing realization that, in addition to predictions, ML models are capable of producing knowledge about domain relationships contained in data, often referred to as interpretations. These interpretations have found uses both in their own right, e.g. medicine (1), policy-making (2), and science (3, 4), as well as in auditing the predictions themselves in response to issues such as regulatory pressure (5) and fairness (6). In the absence of a well-formed definition of interpretability, a broad range of methods with a correspondingly broad range of outputs (e.g. visualizations, natural language, mathematical equations) have been labeled as interpretation. This has led to considerable confusion about the notion of interpretability. In particular, it is unclear what it means to interpret something, what common threads exist among disparate methods, and how to select an interpretation method for a particular problem/audience. In this paper, we attempt to address these concerns. To do so, we first define interpretability in the context of machine learning and place it within a generic data science life cycle. This allows us to distinguish between two main classes of interpretation methods: model-based\u2217 and post hoc. We then introduce the Predictive, Descriptive, Relevant (PDR) framework, consisting of three desiderata for evaluating and constructing interpretations: predictive accuracy, descriptive",
  "authors": [
    {
      "affiliations": [],
      "name": "W. James Murdocha"
    },
    {
      "affiliations": [],
      "name": "Chandan Singhb"
    },
    {
      "affiliations": [],
      "name": "Karl Kumbiera"
    },
    {
      "affiliations": [],
      "name": "Reza Abbasi-Aslb"
    }
  ],
  "id": "SP:f360d7aacfa5ed28d7db5dd240559e4abe598891",
  "references": [
    {
      "authors": [
        "G Litjens"
      ],
      "title": "A survey on deep learning in medical image analysis. Medical image analysis 42:60\u201388",
      "year": 2017
    },
    {
      "authors": [
        "T Brennan",
        "WL Oliver"
      ],
      "title": "The emergence of machine learning techniques in criminology",
      "venue": "Criminology & Public Policy",
      "year": 2013
    },
    {
      "authors": [
        "C Angermueller",
        "T P\u00e4rnamaa",
        "L Parts",
        "O Stegle"
      ],
      "title": "Deep learning for computational biology. Molecular systems biology",
      "year": 2016
    },
    {
      "authors": [
        "MAT Vu"
      ],
      "title": "A shared vision for machine learning in neuroscience",
      "venue": "Journal of Neuroscience",
      "year": 2018
    },
    {
      "authors": [
        "B Goodman",
        "S Flaxman"
      ],
      "title": "European union regulations on algorithmic decision-making and a\" right to explanation\". arXiv preprint arXiv:1606.08813",
      "year": 2016
    },
    {
      "authors": [
        "C Dwork",
        "M Hardt",
        "T Pitassi",
        "O Reingold",
        "R Zemel"
      ],
      "title": "Fairness through awareness in Proceedings of the 3rd innovations in theoretical computer science conference",
      "year": 2012
    },
    {
      "authors": [
        "S Chakraborty"
      ],
      "title": "Interpretability of deep learning models: a survey of results in Interpretability of deep learning models: a survey of results",
      "year": 2017
    },
    {
      "authors": [
        "R Guidotti",
        "A Monreale",
        "F Turini",
        "D Pedreschi",
        "F Giannotti"
      ],
      "title": "A survey of methods for explaining black box models. arXiv preprint arXiv:1802.01933",
      "year": 2018
    },
    {
      "authors": [
        "SM Lundberg",
        "SI Lee"
      ],
      "title": "A unified approach to interpreting model predictions in Advances in Neural Information Processing Systems",
      "year": 2017
    },
    {
      "authors": [
        "M Ancona",
        "E Ceolini",
        "C Oztireli",
        "M Gross"
      ],
      "title": "Towards better understanding of gradientbased attribution methods for deep neural networks in 6th International Conference on Learning Representations (ICLR 2018)",
      "year": 2018
    },
    {
      "authors": [
        "F Doshi-Velez",
        "B Kim"
      ],
      "title": "A roadmap for a rigorous science of interpretability. arXiv preprint arXiv:1702.08608",
      "year": 2017
    },
    {
      "authors": [
        "LH Gilpin"
      ],
      "title": "Explaining explanations: An approach to evaluating interpretability of machine learning",
      "venue": "arXiv preprint arXiv:1806.00069",
      "year": 2018
    },
    {
      "authors": [
        "ZC Lipton"
      ],
      "title": "The mythos of model interpretability. arXiv preprint arXiv:1606.03490",
      "year": 2016
    },
    {
      "authors": [
        "M Hardt",
        "E Price",
        "N Srebro"
      ],
      "title": "Equality of opportunity in supervised learning in Advances in neural information processing systems",
      "year": 2016
    },
    {
      "authors": [
        "D Boyd",
        "K Crawford"
      ],
      "title": "Critical questions for big data: Provocations for a cultural, technological, and scholarly phenomenon. Information, communication & society 15(5):662\u2013679",
      "year": 2012
    },
    {
      "authors": [
        "A Datta",
        "S Sen",
        "Y Zick"
      ],
      "title": "Algorithmic transparency via quantitative input influence: Theory and experiments with learning systems in Security and Privacy (SP), 2016",
      "venue": "IEEE Symposium on. (IEEE),",
      "year": 2016
    },
    {
      "authors": [
        "FC Keil"
      ],
      "title": "Explanation and understanding",
      "venue": "Annu. Rev. Psychol",
      "year": 2006
    },
    {
      "authors": [
        "T Lombrozo"
      ],
      "title": "The structure and function of explanations. Trends in cognitive sciences 10(10):464\u2013470",
      "year": 2006
    },
    {
      "authors": [
        "GW Imbens",
        "DB Rubin"
      ],
      "title": "Causal inference in statistics, social, and biomedical sciences",
      "year": 2015
    },
    {
      "authors": [
        "S Basu",
        "K Kumbier",
        "JB Brown",
        "B Yu"
      ],
      "title": "2018) iterative random forests to discover predictive and stable high-order interactions",
      "venue": "Proceedings of the National Academy of Sciences",
      "year": 2017
    },
    {
      "authors": [
        "FR Hampel",
        "EM Ronchetti",
        "PJ Rousseeuw",
        "WA Stahel"
      ],
      "title": "Robust statistics: the approach based on influence functions",
      "year": 2011
    },
    {
      "authors": [
        "H Pimentel",
        "Z Hu",
        "H Huang"
      ],
      "title": "Biclustering by sparse canonical correlation analysis",
      "venue": "Quantitative Biology",
      "year": 2018
    },
    {
      "authors": [
        "R Abbasi-Asl"
      ],
      "title": "The deeptune framework for modeling and characterizing neurons in visual cortex area v4",
      "venue": "bioRxiv p",
      "year": 2018
    },
    {
      "authors": [
        "AW Roe"
      ],
      "title": "Toward a unified theory of visual area v4",
      "venue": "Neuron",
      "year": 2012
    },
    {
      "authors": [
        "CL Huang",
        "MC Chen",
        "CJ Wang"
      ],
      "title": "Credit scoring with a data mining approach based on support vector machines. Expert systems with applications 33(4):847\u2013856",
      "year": 2007
    },
    {
      "authors": [
        "GE Box"
      ],
      "title": "Science and statistics",
      "venue": "Journal of the American Statistical Association",
      "year": 1976
    },
    {
      "authors": [
        "L Breiman"
      ],
      "title": "Statistical modeling: The two cultures (with comments and a rejoinder by the author)",
      "year": 2001
    },
    {
      "authors": [
        "DA Freedman"
      ],
      "title": "Statistical models and shoe leather",
      "venue": "Sociological methodology pp",
      "year": 1991
    },
    {
      "authors": [
        "C Lim",
        "B Yu"
      ],
      "title": "Estimation stability with cross-validation (escv)",
      "venue": "Journal of Computational and Graphical Statistics",
      "year": 2016
    },
    {
      "authors": [
        "R Tibshirani"
      ],
      "title": "Regression shrinkage and selection via the lasso",
      "venue": "Journal of the Royal Statistical Society. Series B (Methodological)",
      "year": 1996
    },
    {
      "authors": [
        "BA Olshausen",
        "DJ Field"
      ],
      "title": "Sparse coding with an overcomplete basis set: A strategy employed by v1? Vision research 37(23):3311\u20133325",
      "year": 1997
    },
    {
      "authors": [
        "KP Burnham",
        "DR Anderson"
      ],
      "title": "Multimodel inference: understanding aic and bic in model selection. Sociological methods & research 33(2):261\u2013304",
      "year": 2004
    },
    {
      "authors": [
        "YC Pati",
        "R Rezaiifar",
        "PS Krishnaprasad"
      ],
      "title": "Orthogonal matching pursuit: Recursive function approximation with applications to wavelet decomposition in Signals, Systems and Computers",
      "venue": "Conference Record of The Twenty-Seventh Asilomar Conference on. (IEEE),",
      "year": 1993
    },
    {
      "authors": [
        "D Amaratunga",
        "J Cabrera",
        "YS Lee"
      ],
      "title": "Enriched random forests",
      "venue": "Bioinformatics",
      "year": 2008
    },
    {
      "authors": [
        "L Breiman",
        "J Friedman",
        "R Olshen",
        "CJ Stone"
      ],
      "title": "Classification and regression trees",
      "year": 1984
    },
    {
      "authors": [
        "JH Friedman",
        "BE Popescu"
      ],
      "title": "Predictive learning via rule ensembles",
      "venue": "The Annals of Applied Statistics",
      "year": 2008
    },
    {
      "authors": [
        "B Letham",
        "C Rudin",
        "TH McCormick",
        "D Madigan"
      ],
      "title": "Interpretable classifiers using rules and bayesian analysis: Building a better stroke prediction model",
      "venue": "The Annals of Applied Statistics",
      "year": 2015
    },
    {
      "authors": [
        "T Hastie",
        "R Tibshirani"
      ],
      "title": "Generalized additive models. Statistical Science 1(3):297\u2013318",
      "year": 1986
    },
    {
      "authors": [
        "J Kim",
        "JF Canny"
      ],
      "title": "Interpretable learning for self-driving cars by visualizing causal attention",
      "year": 2017
    },
    {
      "authors": [
        "J Andreas",
        "M Rohrbach",
        "T Darrell",
        "D Klein"
      ],
      "title": "Neural module networks",
      "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition",
      "year": 2016
    },
    {
      "authors": [
        "D Koller",
        "N Friedman",
        "F Bach"
      ],
      "title": "Probabilistic graphical models: principles and techniques",
      "year": 2009
    },
    {
      "authors": [
        "R Caruana"
      ],
      "title": "Intelligible models for healthcare: Predicting pneumonia risk and hospital 30-day readmission",
      "venue": "Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. (ACM),",
      "year": 2015
    },
    {
      "authors": [
        "J Ramos"
      ],
      "title": "Using tf-idf to determine word relevance in document queries",
      "venue": "Proceedings of the first instructional conference on machine learning",
      "year": 2003
    },
    {
      "authors": [
        "N Dalal",
        "B Triggs"
      ],
      "title": "Histograms of oriented gradients for human detection",
      "venue": "Computer Vision and Pattern Recognition,",
      "year": 2005
    },
    {
      "authors": [
        "T Shi",
        "B Yu",
        "EE Clothiaux",
        "AJ Braverman"
      ],
      "title": "Daytime arctic cloud detection based on multi-angle satellite data with case studies",
      "venue": "Journal of the American Statistical Association",
      "year": 2008
    },
    {
      "authors": [
        "I Jolliffe"
      ],
      "title": "Principal component analysis",
      "year": 1986
    },
    {
      "authors": [
        "AJ Bell",
        "TJ Sejnowski"
      ],
      "title": "An information-maximization approach to blind separation and blind deconvolution. Neural computation 7(6):1129\u20131159",
      "year": 1995
    },
    {
      "authors": [
        "H Hotelling"
      ],
      "title": "Relations between two sets of variates",
      "year": 1936
    },
    {
      "authors": [
        "S Wu"
      ],
      "title": "Stability-driven nonnegative matrix factorization to interpret spatial gene expression and build local gene networks",
      "venue": "Proceedings of the National Academy of Sciences",
      "year": 2016
    },
    {
      "authors": [
        "JD Olden",
        "MK Joy",
        "RG Death"
      ],
      "title": "An accurate comparison of methods for quantifying variable importance in artificial neural networks using simulated data. Ecological Modelling 178(3-4):389\u2013397",
      "year": 2004
    },
    {
      "authors": [
        "L Breiman"
      ],
      "title": "Random forests. Machine learning 45(1):5\u201332",
      "year": 2001
    },
    {
      "authors": [
        "C Strobl",
        "AL Boulesteix",
        "T Kneib",
        "T Augustin",
        "A Zeileis"
      ],
      "title": "Conditional variable importance for random forests. BMC bioinformatics",
      "year": 2008
    },
    {
      "authors": [
        "A Altmann",
        "L Tolo\u015fi",
        "O Sander",
        "T Lengauer"
      ],
      "title": "Permutation importance: a corrected feature importance measure. Bioinformatics 26(10):1340\u20131347",
      "year": 2010
    },
    {
      "authors": [
        "K Kumbier",
        "S Basu",
        "JB Brown",
        "S Celniker",
        "B Yu"
      ],
      "title": "Refining interaction search through signed iterative random forests. arXiv preprint arXiv:1810.07287",
      "year": 2018
    },
    {
      "authors": [
        "M Tsang",
        "D Cheng",
        "Y Liu"
      ],
      "title": "Detecting statistical interactions from neural network weights. arXiv preprint arXiv:1705.04977",
      "year": 2017
    },
    {
      "authors": [
        "R Abbasi-Asl",
        "B Yu"
      ],
      "title": "Structural compression of convolutional neural networks based on greedy filter pruning",
      "venue": "arXiv preprint arXiv:1705.07356",
      "year": 2017
    },
    {
      "authors": [
        "MD Zeiler",
        "R Fergus"
      ],
      "title": "Visualizing and understanding convolutional networks",
      "venue": "European conference on computer vision. (Springer),",
      "year": 2014
    },
    {
      "authors": [
        "A Mordvintsev",
        "C Olah",
        "M Tyka"
      ],
      "title": "Deepdream-a code example for visualizing neural networks",
      "venue": "Google Research",
      "year": 2015
    },
    {
      "authors": [
        "D Wei",
        "B Zhou",
        "A Torrabla",
        "W Freeman"
      ],
      "title": "Understanding intra-class knowledge inside cnn",
      "venue": "arXiv preprint arXiv:1507.02379",
      "year": 2015
    },
    {
      "authors": [
        "Q Zhang",
        "R Cao",
        "F Shi",
        "YN Wu",
        "SC Zhu"
      ],
      "title": "Interpreting cnn knowledge via an explanatory graph. arXiv preprint arXiv:1708.01785",
      "year": 2017
    },
    {
      "authors": [
        "A Karpathy",
        "J Johnson",
        "L Fei-Fei"
      ],
      "title": "Visualizing and understanding recurrent networks. arXiv preprint arXiv:1506.02078",
      "year": 2015
    },
    {
      "authors": [
        "H Strobelt"
      ],
      "title": "Visual analysis of hidden state dynamics in recurrent neural networks. CoRR, abs/1606.07461",
      "year": 2016
    },
    {
      "authors": [
        "PW Koh",
        "P Liang"
      ],
      "title": "Understanding black-box predictions via influence functions. arXiv preprint arXiv:1703.04730",
      "year": 2017
    },
    {
      "authors": [
        "JT Springenberg",
        "A Dosovitskiy",
        "T Brox",
        "M Riedmiller"
      ],
      "title": "Striving for simplicity: The all convolutional net",
      "venue": "arXiv preprint arXiv:1412.6806",
      "year": 2014
    },
    {
      "authors": [
        "M Sundararajan",
        "A Taly",
        "Q Yan"
      ],
      "title": "Axiomatic attribution for deep networks. ICML",
      "year": 2017
    },
    {
      "authors": [
        "RR Selvaraju"
      ],
      "title": "Grad-cam: Visual explanations from deep networks via gradientbased localization",
      "venue": "See https://arxiv. org/abs/1610.02391",
      "year": 2016
    },
    {
      "authors": [
        "D Baehrens"
      ],
      "title": "How to explain individual classification decisions",
      "venue": "Journal of Machine Learning Research 11(Jun):1803\u20131831",
      "year": 2010
    },
    {
      "authors": [
        "D Smilkov",
        "N Thorat",
        "B Kim",
        "F Vi\u00e9gas",
        "M Wattenberg"
      ],
      "title": "Smoothgrad: removing noise by adding noise. arXiv preprint arXiv:1706.03825",
      "year": 2017
    },
    {
      "authors": [
        "A Shrikumar",
        "P Greenside",
        "A Shcherbina",
        "Kundaje"
      ],
      "title": "A (2016) Not just a black box: Learning important features through propagating activation differences",
      "venue": "arXiv preprint arXiv:1605.01713",
      "year": 2016
    },
    {
      "authors": [
        "WJ Murdoch",
        "A Szlam"
      ],
      "title": "Automatic rule extraction from long short term memory networks. arXiv preprint arXiv:1702.02540",
      "year": 2017
    },
    {
      "authors": [
        "P Dabkowski",
        "Y Gal"
      ],
      "title": "Real time image saliency for black box classifiers. arXiv preprint arXiv:1705.07857",
      "year": 2017
    },
    {
      "authors": [
        "MT Ribeiro",
        "S Singh",
        "C Guestrin"
      ],
      "title": "Why should i trust you?: Explaining the predictions of any classifier",
      "venue": "Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. (ACM),",
      "year": 2016
    },
    {
      "authors": [
        "LM Zintgraf",
        "TS Cohen",
        "T Adel",
        "M Welling"
      ],
      "title": "Visualizing deep neural network decisions: Prediction difference analysis",
      "venue": "arXiv preprint arXiv:1702.04595",
      "year": 2017
    },
    {
      "authors": [
        "SM Lundberg",
        "GG Erion",
        "SI Lee"
      ],
      "title": "Consistent individualized feature attribution for tree ensembles. arXiv preprint arXiv:1802.03888",
      "year": 2018
    },
    {
      "authors": [
        "WJ Murdoch",
        "PJ Liu",
        "B Yu"
      ],
      "title": "Beyond word importance: Contextual decomposition to extract interactions from lstms",
      "venue": "arXiv preprint arXiv:1801.05453",
      "year": 2018
    },
    {
      "authors": [
        "C Singh",
        "WJ Murdoch",
        "B Yu"
      ],
      "title": "Hierarchical interpretations for neural network predictions",
      "venue": "arXiv preprint arXiv:1806.05337",
      "year": 2018
    },
    {
      "authors": [
        "A Rohrbach",
        "M Rohrbach",
        "R Hu",
        "T Darrell",
        "B Schiele"
      ],
      "title": "Grounding of textual phrases in images by reconstruction",
      "venue": "European Conference on Computer Vision. (Springer),",
      "year": 2016
    },
    {
      "authors": [
        "R Caruana",
        "H Kangarloo",
        "J Dionisio",
        "U Sinha",
        "D Johnson"
      ],
      "title": "Case-based explanation of non-case-based learning methods",
      "venue": "Proceedings of the AMIA Symposium. (American Medical Informatics Association),",
      "year": 1999
    },
    {
      "authors": [
        "N Papernot",
        "P McDaniel"
      ],
      "title": "Deep k-nearest neighbors: Towards confident, interpretable and robust deep learning",
      "venue": "arXiv preprint arXiv:1803.04765",
      "year": 2018
    },
    {
      "authors": [
        "M Tsang",
        "Y Sun",
        "D Ren",
        "Y Liu"
      ],
      "title": "Can i trust you more? model-agnostic hierarchical explanations. arXiv preprint arXiv:1812.04801",
      "year": 2018
    },
    {
      "authors": [
        "T Lei",
        "R Barzilay",
        "T Jaakkola"
      ],
      "title": "Rationalizing neural predictions. arXiv preprint arXiv:1606.04155",
      "year": 2016
    },
    {
      "authors": [
        "C Rudin"
      ],
      "title": "Please stop explaining black box models for high stakes decisions. arXiv preprint arXiv:1811.10154",
      "year": 2018
    },
    {
      "authors": [
        "T Kluyver"
      ],
      "title": "Jupyter notebooks-a publishing format for reproducible computational workflows. in ELPUB",
      "year": 2016
    },
    {
      "authors": [
        "F P\u00e9rez",
        "BE Granger"
      ],
      "title": "Ipython: a system for interactive scientific computing",
      "venue": "Computing in Science & Engineering",
      "year": 2007
    },
    {
      "authors": [
        "R Barter",
        "B Yu"
      ],
      "title": "Superheat: Supervised heatmaps for visualizing complex data",
      "venue": "arXiv preprint arXiv:1512.01524",
      "year": 2015
    },
    {
      "authors": [
        "H Wickham"
      ],
      "title": "2016) ggplot2: elegant graphics for data analysis",
      "year": 2016
    },
    {
      "authors": [
        "M Waskom"
      ],
      "title": "Seaborn: statistical data visualization",
      "venue": "URL: https://seaborn. pydata. org/(visited on 2017-05-15)",
      "year": 2014
    },
    {
      "authors": [
        "W McKinney"
      ],
      "title": "Data structures for statistical computing in python",
      "venue": "Proceedings of the 9th Python in Science Conference. (Austin, TX),",
      "year": 2010
    },
    {
      "authors": [
        "H Wickham"
      ],
      "title": "tidyverse: Easily Install and Load the \u2019Tidyverse",
      "venue": "R package version",
      "year": 2017
    },
    {
      "authors": [
        "AS Ross",
        "MC Hughes",
        "F Doshi-Velez"
      ],
      "title": "Right for the right reasons: Training differentiable models by constraining their explanations",
      "venue": "arXiv preprint arXiv:1703.03717",
      "year": 2017
    },
    {
      "authors": [
        "O Zaidan",
        "J Eisner",
        "C Piatko"
      ],
      "title": "Using \u201cannotator rationales\u201d to improve machine learning for text categorization in Human Language Technologies 2007: The Conference of the North American Chapter of the Association for Computational Linguistics",
      "venue": "Proceedings of the Main Conference",
      "year": 2007
    }
  ],
  "sections": [
    {
      "text": "Interpretable machine learning: definitions, methods, and applications\nW. James Murdocha,1, Chandan Singhb,1, Karl Kumbiera,2, Reza Abbasi-Aslb,c,2, and Bin Yua,b\naUC Berkeley Statistics Dept.; bUC Berkeley EECS Dept.; cAllen Institute for Brain Science\nMachine-learning models have demonstrated great success in learning complex patterns that enable them to make predictions about unobserved data. In addition to using models for prediction, the ability to interpret what a model has learned is receiving an increasing amount of attention. However, this increased focus has led to considerable confusion about the notion of interpretability. In particular, it is unclear how the wide array of proposed interpretation methods are related, and what common concepts can be used to evaluate them.\nWe aim to address these concerns by defining interpretability in the context of machine learning and introducing the Predictive, Descriptive, Relevant (PDR) framework for discussing interpretations. The PDR framework provides three overarching desiderata for evaluation: predictive accuracy, descriptive accuracy and relevancy, with relevancy judged relative to a human audience. Moreover, to help manage the deluge of interpretation methods, we introduce a categorization of existing techniques into model-based and post-hoc categories, with sub-groups including sparsity, modularity and simulatability. To demonstrate how practitioners can use the PDR framework to evaluate and understand interpretations, we provide numerous real-world examples. These examples highlight the often under-appreciated role played by human audiences in discussions of interpretability. Finally, based on our framework, we discuss limitations of existing methods and directions for future work. We hope that this work will provide a common vocabulary that will make it easier for both practitioners and researchers to discuss and choose from the full range of interpretation methods."
    },
    {
      "heading": "1. Introduction",
      "text": "Machine learning (ML) has recently received considerableattention for its ability to accurately predict a wide variety of complex phenomena. However, there is a growing realization that, in addition to predictions, ML models are capable of producing knowledge about domain relationships contained in data, often referred to as interpretations. These interpretations have found uses both in their own right, e.g. medicine (1), policy-making (2), and science (3, 4), as well as in auditing the predictions themselves in response to issues such as regulatory pressure (5) and fairness (6).\nIn the absence of a well-formed definition of interpretability, a broad range of methods with a correspondingly broad range of outputs (e.g. visualizations, natural language, mathematical equations) have been labeled as interpretation. This has led to considerable confusion about the notion of interpretability. In particular, it is unclear what it means to interpret something, what common threads exist among disparate methods, and how to select an interpretation method for a particular problem/audience.\nIn this paper, we attempt to address these concerns. To do so, we first define interpretability in the context of machine learning and place it within a generic data science life cycle. This allows us to distinguish between two main classes of interpretation methods: model-based\u2217 and post hoc. We then introduce the Predictive, Descriptive, Relevant (PDR) framework, consisting of three desiderata for evaluating and constructing interpretations: predictive accuracy, descriptive\n\u2217For clarity, throughout the paper we use the term to refer to both machine-learning models and algorithms.\naccuracy, and relevancy, where relevancy is judged by a human audience. Using these terms, we categorize a broad range of existing methods, all grounded in real-world examples\u2020. In doing so, we provide a common vocabulary for researchers and practitioners to use in evaluating and selecting interpretation methods. We then show how our work enables a clearer discussion of open problems for future research.\nA. Defining interpretable machine learning. On its own, interpretability is a broad, poorly defined concept. Taken to its full generality, to interpret data means to extract information (of some form) from it. The set of methods falling under this umbrella spans everything from designing an initial experiment to visualizing final results. In this overly general form, interpretability is not substantially different from the established concepts of data science and applied statistics.\nInstead of general interpretability, we focus on the use of interpretations in the context of ML as part of the larger datascience life cycle. We define interpretable machine learning as the use of machine-learning models for the extraction of relevant knowledge about domain relationships contained in data. Here, we view knowledge as being relevant if it provides\n\u2020Examples were selected through a non-exhaustive search of related work.\nW.M., C.S., K.K., R.A., and B.Y. helped identify important concepts and provided feedback on the paper. W.M and C.S. wrote the paper with contributions from K.K., R.A., and B.Y.\nThe authors declare no conflict of interest exists.\n1W.M. and C.S. contributed equally to this work.\n2K.K. and R.A. contributed equally to this work.\n3To whom correspondence should be addressed: binyu@berkeley.edu\nPreprint | Murdoch et al. 2018 | 1\u201311\nar X\niv :1\n90 1.\n04 59\n2v 1\n[ st\nat .M\nL ]\n1 4\nJa n\n20 19\ninsight for a particular audience into a chosen domain problem. These insights are often used to guide communication, actions, and discovery. Interpretation methods use ML models to produce relevant knowledge about domain relationships contained in data. This knowledge can be produced in formats such as visualizations, natural language or mathematical equations, depending on the context and audience. For instance, a doctor who must diagnose a single patient will want qualitatively different information than an engineer determining if an image classifier is discriminating by race.\nB. Background. Interpretability is a quickly growing field in machine learning, and there have been multiple works examining various aspects of interpretations (sometimes under the heading explainable AI ). One line of work focuses on providing an overview of different interpretation methods with a strong emphasis on post hoc interpretations of deep learning models (7, 8), sometimes pointing out similarities between various methods (9, 10). Other work has focused on the narrower problem of how interpretations should be evaluated (11, 12) and what properties they should satisfy (13). These previous works touch on different subsets of interpretability, but do not address interpretable machine learning as a whole, and give limited guidance on how interpretability can actually be used in data-science life cycles. We aim to do so by providing a framework and vocabulary to fully capture interpretable machine learning, its benefits, and its applications to concrete data problems.\nInterpretability also plays a role in other research areas. For example, interpretability is a major topic when considering bias and fairness in ML models (14, 15), with examples given throughout the paper (16). In psychology, the general notions of interpretability and explanations have been studied at a more abstract level (17, 18), providing relevant conceptual perspectives. Additionally, we comment on two related areas that are distinct but closely related to interpretability: causal inference and stability.\nCausal inference Causal inference (19) is a subject from statistics which is related, but distinct, from interpretable machine learning. Causal inference methods focus solely on extracting causal relationships from data, i.e. statements that altering one variable will cause a change in another. In contrast, interpretable ML, and most other statistical techniques, are generally used to describe non-causal relationships, or relationships in observational studies.\nIn some instances, researchers use both interpretable machine learning and causal inference in a single analysis (20). One form of this is where the non-causal relationships extracted by interpretable ML are used to suggest potential causal relationships. These relationships can then be further analyzed using causal inference methods, and fully validated through experimental studies.\nStability Stability, as a generalization of robustness in statistics, is a concept that applies throughout the entire datascience life cycle, including interpretable ML). The stability principle requires that each step in the life cycle is stable with respect to appropriate perturbations, such as small changes in the model or data. Recently, stability has been shown to be important in applied statistical problems, for example when trying to make conclusions about a scientific problem (21) and in more general settings (22). Stability can be helpful\nin evaluating interpretation methods and is a prerequisite for trustworthy interpretations. That is, one should not interpret parts of a model which are not stable to appropriate perturbations to the model and data. This is demonstrated through examples in the text (20, 23, 24)."
    },
    {
      "heading": "2. Interpretation in the data science life cycle",
      "text": "Before discussing interpretation methods, we first place the process of interpretable ML within the broader data-science life cycle. Fig 1 presents a deliberately general description of this process, intended to capture most data-science problems. What is generally referred to as interpretation largely occurs in the modeling and post hoc analysis stages, with the problem, data and audience providing the context required to choose appropriate methods.\nProblem, data, and audience At the beginning of the cycle, a data-science practitioner defines a domain problem that they would like to understand using data. This problem can take many forms. In a scientific setting, the practitioner may be interested in relationships contained in the data, such as how brain cells in a particular area of the visual system relate to visual stimuli (25). In industrial settings, the problem often concerns the predictive performance or other qualities of a model, such as how to assign credit scores with high accuracy (26), or do so fairly with respect to gender and race (16). The nature of the problem plays a role in interpretability, as the relevant context and audience are essential in determining what methods to use.\nAfter choosing a domain problem, the practitioner collects data to study it. Aspects of the data-collection process can affect the interpretation pipeline. Notably, biases in the data (i.e. mismatches between the collected data and the population of interest) will manifest themselves in the model, restricting one\u2019s ability to make interpretations regarding the problem of interest.\nModel Based on the chosen problem and collected data, the practitioner then constructs a predictive model. At this stage, the practitioner processes, cleans, and visualizes data, extracts features, selects a model (or several models) and fits it. Interpretability considerations often come into play in this step related to the choice between simpler, easier to interpret models and more complex, black-box models, which may fit the data better. The model\u2019s ability to fit the data is measured through predictive accuracy.\nPost hoc analysis Having fit a model (or models), the practitioner then analyzes it for answers to the original question. The process of analyzing the model often involves using interpretability methods to extract various (stable) forms of\nPreprint | Murdoch et al. 2018 | 2\ninformation from the model. The extracted information can then be analyzed and displayed using standard data analysis methods, such as scatter plots and histograms. The ability of the interpretations to properly describe what the model has learned is denoted by descriptive accuracy.\nIterate If sufficient answers are uncovered after the post hoc analysis stage, the practitioner finishes. Otherwise, they update something in the chain (problem, data, and/or model) and iterate, potentially multiple times (27). Note that they can terminate the loop at any stage, depending on the context of the problem.\nA. Interpretation methods within the PDR framework. In the framework described above, most interpretation methods fall either in the modeling or post hoc analysis stages. We call interpretability in the modeling stage model-based interpretability (Sec 4). This part of interpretability is focused upon constraining the form of ML models so that they readily provide useful information about the uncovered relationships. As a result of these constraints, the space of potential models is smaller, which can result in lower predictive accuracy. Consequently, model-based interpretability is best used when the underlying relationship is relatively simple.\nWe call interpretability in the post hoc analysis stage post hoc interpretability (Sec 5). These interpretation methods take a trained model as input, and extract information about what relationships the model has learned. They are most helpful when the underlying relationship is especially complex, and practitioners need to train an intricate, black-box model in order to achieve a reasonable predictive accuracy.\nAfter discussing desiderata for interpretation methods, we investigate these two forms of interpretations in detail and discuss associated methods."
    },
    {
      "heading": "3. The PDR desiderata for interpretations",
      "text": "In general, it is unclear how to select and evaluate interpretation methods for a particular problem and audience. To help guide this process, we introduce the PDR framework, consisting of three desiderata that should be used to select interpretation methods for a particular problem: predictive accuracy, descriptive accuracy, and relevancy.\nA. Accuracy. The information produced by an interpretation method should be faithful to the underlying process the practitioner is trying to understand. In the context of ML, there are two areas where errors can arise: when approximating the underlying data relationships with a model (predictive accuracy) and when approximating what the model has learned using an interpretation method (descriptive accuracy). For an interpretation to be trustworthy, one should try to maximize both of the accuracies. In cases where the accuracy is not very high, the resulting interpretations may still be useful. However, it is especially important to check their trustworthiness through external validation, such as running an additional experiment.\nA.1. Predictive accuracy. The first source of error occurs during the model stage, when an ML model is constructed. If the model learns a poor approximation of the underlying relationships in the data, any information extracted from the model is unlikely to be accurate. Evaluating the quality of a model\u2019s fit has been well-studied in standard supervised ML frameworks,\nthrough measures such as test-set accuracy. In the context of interpretation, we describe this error as predictive accuracy.\nNote that in problems involving interpretability, one often requires a notion of predictive accuracy that goes beyond just average accuracy. The distribution of predictions matters. For instance, it could be problematic if the prediction error is much higher for a particular class. Moreover, the predictive accuracy should be stable with respect to reasonable data and model perturbations. For instance, one should not trust interpretations from a model which changes dramatically when trained on a slightly smaller subset of the data.\nA.2. Descriptive accuracy. The second source of error occurs during the post hoc analysis stage, when interpretation methods are used to analyze a fitted model. Oftentimes, interpretation methods provide an imperfect representation of the relationships learned by a model. This is especially challenging for complex black-box models such as deep neural networks, which store nonlinear relationships between variables in non-obvious forms. . Definition We define descriptive accuracy, in the context of interpretation, as the degree to which an interpretation method objectively captures the relationships learned by machine learning models.\nA.3. A common conflict: predictive vs descriptive accuracy. In selecting what model to use, practitioners are often faced with a trade-off between predictive and descriptive accuracy. On the one hand, the simplicity of model-based interpretation methods yields consistently high descriptive accuracy, but can sometimes result in lower predictive accuracy on complex datasets. On the other hand, in complex settings such as image analysis, complicated models generally provide high predictive accuracy, but are harder to analyze, resulting in a lower descriptive accuracy.\nB. Relevancy. When selecting an interpretation method, it is not enough for the method to have high accuracy - the extracted information must also be relevant. For example, in the context of genomics, a patient, doctor, biologist, and statistician may each want different (yet consistent) interpretations from the same model. The context provided by the problem and data stages in Fig 1 guides what kinds of relationships a practitioner is interested in learning about, and by extension the methods that should be used. . Definition We define an interpretation to be relevant if it provides insight for a particular audience into a chosen domain problem.\nRelevancy often plays a key role in determining the tradeoff between predictive and descriptive accuracy. Depending on the context of the problem at hand, a practitioner may choose to focus on one over the other. For instance, when interpretability is used to audit a model\u2019s predictions, such as to enforce fairness, descriptive accuracy can be more important. In contrast, interpretability can also be used solely as a tool to increase the predictive accuracy of a model, for instance, through improved feature engineering.\nHaving outlined the main desiderata for interpretation methods, we now discuss how they link to interpretation in the modeling and post hoc analysis stages in the data-science life cycle. Fig 2 draws parallels between our desiderata for interpretation techniques introduced in Sec 3 and our categorization of methods in Sec 4 and Sec 5. In particular, both\nPreprint | Murdoch et al. 2018 | 3\npost hoc and model-based methods aim to increase descriptive accuracy, but only model-based affects the predictive accuracy. Not shown is relevancy, which determines what type of output is helpful for a particular problem and audience."
    },
    {
      "heading": "4. Model-based interpretability",
      "text": "We now discuss how interpretability considerations come into play in the modeling stage of the data science life cycle (see Fig 1). At this stage, the practitioner constructs an ML model from the collected data. We define model-based interpretability as the construction of models that readily provide insight into the relationships they have learned. Different model-based interpretability methods provide different ways of increasing descriptive accuracy by constructing models which are easier to understand, sometimes resulting in lower predictive accuracy. The main challenge of model-based interpretability is to come up with models that are simple enough to be easily understood by the audience, yet sophisticated enough to properly fit the underlying data.\nIn selecting a model to solve a domain problem, the practitioner must consider the entirety of the PDR framework. The first desideratum to consider is predictive accuracy. If the constructed model does not accurately represent the underlying problem, any subsequent analysis will be suspect (28, 29). Second, the main purpose of model-based interpretation methods is to increase descriptive accuracy. Finally, the relevancy of a model\u2019s output must be considered, and is determined by the context of the problem, data, and audience. We now discuss some widely useful types of model-based interpretability methods.\nA. Sparsity. When the practitioner believes that the underlying relationship in question is based upon a sparse set of signals, they can impose sparsity on their model by limiting the number of non-zero parameters. In this section, we focus on linear models, but sparsity can be helpful more generally. When the number of non-zero parameters is sufficiently small, a practitioner can interpret the variables corresponding to\nthose parameters as being meaningfully related to the outcome in question, and can also interpret the magnitude and direction of the parameters. However, before one can interpret a sparse parameter set, one should check for stability of the parameters. For example, if the set of sparse parameters changes due to small perturbations in the data set, the coefficients should not be interpreted (30).\nWhen the practitioner is able to correctly incorporate sparsity into their model, it can improve all three interpretation desiderata. By reducing the number of parameters to analyze, sparse models can be easier to understand, yielding higher descriptive accuracy. Moreover, incorporating prior information in the form sparsity into a sparse problem can help a model achieve higher predictive accuracy and yield more relevant insights. Note that incorporating sparsity can often be quite difficult, as it requires understanding the data-specific structure of the sparsity and how it can be modelled.\nMethods for obtaining sparsity often utilize a penalty on a loss function, such as LASSO (31) and sparse coding (32), or on a model selection criteria such as AIC or BIC (33, 34). Many search-based methods have been developed to find sparse solutions. These methods search through the space of nonzero coefficients using classical subset-selection methods (e.g. orthogonal matching pursuit (35)). Model sparsity is often useful for high-dimensional problems, where the goal is to identify key features for further analysis. As a result, sparsity penalties have been incorporated into complex models such as random forests to identify a sparse subset of important features (36).\nIn the following example from genomics, sparsity is used to increase the relevancy of the produced interpretations by reducing the number of potential interactions to a manageable level. . Ex. Identifying interactions among regulatory factors or biomolecules is an important question in genomics. Typical genomic datasets include thousands or even millions of features, many of which are active in specific cellular or developmental contexts. The massive scale of such datasets make interpretation a considerable challenge. Sparsity penalties are frequently used to make the data manageable for statisticians and their collaborating biologists to discuss and identify promising candidates for further experiments.\nFor instance, one recent study (23) uses a biclustering approach based on sparse canonical correlation analysis (SCCA) to identify interactions among genomic expression features in Drosophila melanogaster (fruit flies) and Caenorhabditis elegans (roundworms). Sparsity penalties enable key interactions among features to be summarized in heatmaps which contain few enough variables for a human to analyze. Moreover, this study performs stability analysis on their model, finding it to be robust to different initializations and perturbations to hyperparameters.\nB. Simulatability. A model is said to be simulatable if a human (for whom the interpretation is intended) is able to internally simulate and reason about its entire decision-making process (i.e. how a trained model produces an output for an arbitrary input). This is a very strong constraint to place on a model, and can generally only be done when the number of features is low, and the underlying relationship is simple. Decision trees (37) are often cited as a simulatable model, due to their hierarchical decision-making process. Another example is lists of\nPreprint | Murdoch et al. 2018 | 4\nrules (38, 39), which can easily be simulated. Due to their simplicity, simulatable models have very high descriptive accuracy. When they can also provide reasonable predictive accuracy, they can be very effective. In the following example, a novel simulatable model is able to produce high predictive accuracy, while maintaining the high levels of descriptive accuracy and relevancy normally attained by rules-based models. . Ex. In medical practice, when a patient has been diagnosed with atrial fibrillation, caregivers often want to predict the risk that the particular patient will have a stroke in the next year. Moreover, given the potential ramifications of medical decisions, it is important that these predictions are not only accurate, but interpretable to both the caregivers and patients.\nTo make the prediction, (39) uses data from 12,586 patients detailing their age, gender, history of drugs and conditions preceding their diagnosis, and whether they had a stroke within a year of diagnosis. In order to construct a model that has high predictive and descriptive accuracy, (39) introduce a method for learning lists of if-then rules that are predictive of one year stroke risk. The resulting classifier, displayed in Fig 3, requires only seven if-then statements to achieve competitive accuracy, and is easy for even non-technical practitioners to quickly understand.\nC. Modularity. We define an ML model to be modular if a meaningful portion(s) of its prediction-making process can be interpreted independently. While modular models are not as easy to understand as sparse or simulatable models, they can still be useful in increasing descriptive accuracy to provide insights into the relationships the model has learned.\nA wide array of models satisfy modularity to different degrees. Generalized additive models (40) force the relationship between variables in the model to be additive. In deep learning, specific methods such as attention (41) and modular network architectures (42) provide limited insight into a network\u2019s inner workings. Probabilistic models can enforce modularity by specifying a conditional independence structure which makes it easier to reason about different parts of a model independently (43).\nThe following example uses modularity to produce relevant interpretations for use in diagnosing biases in training data. . Ex. When prioritizing patient care for pneumonia patients in a hospital, one possible method is to predict the likelihood of death within 60 days, and focus on the patients with a higher mortality risk. Given the potential life and death consequences, being able to explain the reasons for hospitalizing a patient or not is very important.\nA recent study (44) uses a dataset of 14,199 pneumonia\npatients, with 46 features including from demographics (e.g. age and gender), simple physical measurements (e.g. heart rate, blood pressure) and lab tests (e.g. white blood cell count, blood urea nitrogen). To predict mortality risk, they use a generalized additive model with pairwise interactions, displayed below. The univariate and pairwise terms (fj(xj) and fij(xi, xj)) can be individually interpreted in the form of curves and heatmaps respectively.\ng(E[y]) = \u03b20 + \u2211\nj fj(xj) + \u2211 i 6=j fij(xi, xj) [1]\nBy inspecting the individual modules, the researchers found a number of counterintuitive properties of their model. For instance, the fitted model learned that having asthma is associated with a lower risk of dying from pneumonia. In reality, the opposite is true - patients with asthma are known to have a higher risk of death from pneumonia. Because of this, in the collected data all patients with asthma received aggressive care, which was fortunately effective at reducing their risk of mortality relative to the general population.\nIn this instance, if the model were used without having been interpreted, pneumonia patients with asthma would have have been de-prioritized for hospitalization. Consequently, the use of ML would increase their likelihood of dying. Fortunately, the use of an interpretable model enabled the researchers to identify and correct errors like this one, better ensuring that the model could be trusted in the real world.\nD. Domain-based feature engineering. While the type of model is important in producing a useful interpretation, so are the features that are used as inputs to the model. Having more informative features makes the relationship that needs to be learned by the model simpler, allowing one to use other model-based interpretability methods. Moreover, when the features have more meaning to a particular audience, they become easier to interpret.\nIn many individual domains, expert knowledge can be useful in constructing feature sets that are useful for building predictive models. The particular algorithms used to extract features are generally domain-specific, relying both on the practitioner\u2019s existing domain expertise and insights drawn from the data through exploratory data analysis. For example, in natural language processing, documents are embedded into vectors using tf-idf (45) and in computer vision mathematical transformations have been developed to produce useful representations of images (46). In the example below, domain knowledge about cloud coverage is exploited to design three simple features that increase the predictive accuracy of a model while maintaining the high descriptive accuracy of a simple predictive model. . Ex. When modelling global climate patterns, an important quantity is the amount and location of arctic cloud coverage. Due to the complex, layered nature of climate models, it is beneficial to have simple, easily auditable, cloud coverage models for use by down-stream climate scientists.\nIn (47), the authors use an unlabeled dataset of arctic satellite imagery to build a model predicting whether each pixel in an image contains clouds or not. Given the qualitative similarity between ice and clouds, this is a challenging prediction problem. By conducting exploratory data analysis and utilizing domain knowledge through interactions with\nPreprint | Murdoch et al. 2018 | 5\nclimate scientists, the authors identify three simple features that are sufficient to cluster whether or not images contain clouds. Using these three features as input to quadratic discriminant analysis, they achieve both high predictive accuracy and transparency when compared with expert labels (which were not used in developing the features and the QDA clustering method).\nE. Model-based feature engineering. There are a variety of automatic approaches for constructing interpretable features. Two examples are unsupervised learning and dimensionality reduction. Unsupervised methods, such as clustering, matrix factorization, and dictionary learning, aim to process unlabelled data and output a description of their structure. These structures often shed insight into relationships contained within the data and can be useful in building predictive models. Dimensionality reduction focuses on finding a representation of the data which is lower-dimensional than the original data. Methods such as principal components analysis (48), independent components analysis (49), and canonical correlation analysis (50) can often identify a few interpretable dimensions, which can then be used as input to a model or to provide insights in their own right. Using fewer inputs can not only improve descriptive accuracy, but can increase predictive accuracy by reducing the number of parameters to fit. In the following example, unsupervised learning (non-negative matrix factorization) is used to represent images in a low-dimensional, genetically meaningful, space. . Ex. Heterogeneity is an important consideration in genomic problems and associated data. In many cases, regulatory factors or biomolecules can play a specific role in one context, such as a particular cell type or developmental stage, and have a very different role in other contexts. Thus, it is important to understand the \u201clocal\u201d behavior of regulatory factors or biomolecules.\nA recent study (51), uses unsupervised learning to learn spatial patterns of gene expression in Drosophila (fruit fly) embryos. In particular, they use stability driven nonnegative matrix factorization to decompose images of complex spatial gene expression patterns into a library of 21 \u201cprincipal patterns\u201d, which can be viewed as pre-organ regions This decomposition, which is interpretable to biologists, allows the study of gene-gene interactions in pre-organ regions of the developing embryo."
    },
    {
      "heading": "5. Post hoc interpretability",
      "text": "We now discuss how interpretability considerations come into play in the post hoc analysis stage of the data-science life cycle. At this stage, the practitioner analyzes a trained model in order to provide insights into the learned relationships. This is particularly challenging when the model\u2019s parameters do not clearly show what relationships the model has learned. To aid in this process, a variety of post hoc interpretability methods have been developed to provide insight into what a trained model has learned, without changing the underlying model. These methods are particularly important for settings where the collected data is high-dimensional and complex, such as with image data. Once the information has been extracted from the fitted model, it can be analyzed using standard, exploratory data analysis techniques, such as scatter plots and histograms.\nWhen conducting post hoc analysis, the model has already been trained, so its predictive accuracy is fixed. Thus, under the PDR framework, a researcher must only consider descriptive accuracy and relevancy (relative to a particular audience). Improving on each of these criteria are areas of active research.\nMost widely useful post hoc interpretation methods fall into two main categories: prediction-level and dataset-level interpretations, which are sometimes referred to as local and global interpretations, respectively. Prediction-level interpretation methods focus on explaining individual predictions made by models, such as what features and/or interactions led to the particular prediction. Dataset-level approaches focus on the global relationships the model has learned, such as what visual patterns are associated with a predicted response. These two categories have much in common (in fact, dataset-level approaches often yield information at the prediction-level), but we discuss them separately, as methods at different levels are meaningfully different.\nA. Dataset-level interpretation. When a practitioner is interested in more general relationships learned by a model, e.g. relationships that are relevant for a particular class of responses or subpopulation, they use dataset-level interpretations.\nA.1. Interaction and feature importances. Feature importance scores, at the dataset-level, try to capture how much individual features contribute, across a dataset, to a prediction. These scores can provide insights into what features the model has identified as important for which outcomes, and their relative importance. Methods have been developed to score individual features in many models including neural networks (52), random forests, (53, 54), and generic classifiers (55).\nIn addition to feature importances, methods have been developed to extract important interactions between features. Interactions are important as ML models are often highly nonlinear and learn complex interactions between features. Methods exist to extract interactions from a variety of ML models including random forests (20, 56) and neural networks (57, 58). In the following example, the descriptive accuracy of random forests is increased by extracting Boolean interactions (a problem-relevant form of interpretation) from a trained model. . Ex. High-order interactions among regulatory factors or genes play an important role in defining cell-type specific behavior in biological systems. As a result, extracting such interactions from genomic data is an important problem in biology.\nA previous line of work considers the problem of searching for biological interactions associated with important biological processes (20, 56). To identify candidate biological interactions, the authors train a series of iteratively re-weighted RFs and search for stable combinations of features that frequently co-occur along the predictive RF decision paths. This approach takes a step beyond evaluating the importance of individual features in an RF, providing a more complete description of how features influence predicted responses. By interpreting the interactions used in RFs, the researchers identified genegene interactions with 80% accuracy in the Drosophila embryo and identify candidate targets for higher-order interactions.\nA.2. Statistical feature importances. In some instances, in addition to the raw value, we can compute statistical measures\nPreprint | Murdoch et al. 2018 | 6\nof confidence as feature importance scores, a standard technique taught in introductory statistics classes. By making assumptions about the underlying data generating process, models like linear and logistic regression can compute confidence intervals and hypothesis tests for the values, and linear combinations, of their coefficients. These statistics can be helpful in determining the degree to which the observed coefficients are statistically significant. It is important to note that the assumptions of the underlying probabilistic model must be fully verified before using this form of interpretation. Below we present a cautionary example where different assumptions lead to opposing conclusions being drawn from the same dataset. . Ex. Here, we consider the lawsuit Students for Fair Admissions, Inc. v. Harvard regarding the use of race in undergraduate admissions to Harvard University. Initial reports by Harvard\u2019s Office of Institutional Research used logistic regression to model the probability of admission using different features of an applicant\u2019s profile, including their race (59). This analysis found that the coefficient associated with being Asian (and not low income) had a coefficient of -0.418 with a significant p-value (<0.001). This negative coefficient suggested that being Asian had a significant negative association with admission probability.\nSubsequent analysis from both sides in the lawsuit attempted to analyze the modeling and assumptions to decide on the significance of race in the model\u2019s decision. The plaintiff\u2019s expert report (60) suggested that race was being unfairly used by building on the original report from Harvard\u2019s Office of Institutional Research. It also incorporates analysis on more subjective factors such as \u201cpersonal ratings\u201d which seem to hurt Asian students\u2019 admission. In contrast, the expert report supporting Harvard University (61) finds that by accounting for certain other variables, the effect of race on Asian students acceptance is no longer significant. Significances derived from statistical tests in regression or logistic regression models at best establish association, but not causation. Hence the analyses from both sides are flawed. This example demonstrates the practical and misleading consequences of statistical feature importances when used inappropriately.\nA.3. Visualizations. When dealing with high-dimensional datasets, it can be challenging to quickly understand the complex relationships that a model has learned, making the presentation of the results particularly important. To help deal with this, researchers have developed a number of different visualizations which help to understand what a model has learned. For linear models with regularization, plots of regression coefficient paths show how varying a regularization parameter affects the fitted coefficients. When visualizing convolutional neural networks trained on image data, work has been done on visualizing filters (62, 63), maximally activating responses of individual neurons or classes (64), understanding intra-class variation (65), and grouping different neurons (66). For Long Short Term Memory Networks (LSTMs), researchers have focused on analyzing the state vector, identifying individual dimensions that correspond to meaningful features (e.g. position in line, within quotes) (67), and building tools to track the model\u2019s decision process over the course of a sequence (68).\nIn the following example, relevant interpretations are produced by using maximal activation images for identifying patterns that drive the response of brain cells.\n. Ex. A recent study visualizes learned information from deep neural networks to understand individual brain cells (24). In this study, macaque monkeys were shown images while the responses of brain cells in their visual system (area V4) were recorded. Neural networks were trained to predict the responses of brain cells to the images. These neural networks produce accurate fits, but provide little insight into what patterns in the images increase the brain cells response without further analysis. To remedy this, the authors introduce DeepTune, a method which provides a visualization, accessible to neuroscientists and others, of the patterns which activate a brain cell. The main intuition behind the method is to optimize the input of a network to maximize the response of a neural network model (which represent a brain cell).\nThe authors go on to analyze the major problem of instability. When post hoc visualizations attempt to answer scientific questions, the visualizations must be stable to reasonable perturbations (e.g. the choice of model); if there are changes in the visualization due to the choice of a model, it is likely not meaningful. The authors address this explicitly by fitting eighteen different models to the data and using a stable optimization over all the models to produce a final consensus DeepTune visualization.\nA.4. Analyzing trends and outliers in predictions. When interpreting the performance of an ML model, it can be helpful to look not just at the average accuracy, but also at the distribution of predictions and errors. For example, residual plots can identify heterogeneity in predictions, and suggest particular data points to analyze, such as outliers in the predictions, or examples which had the largest prediction errors. Moreover, these plots be used to analyze trends across the predictions. For instance, in the example below, influence functions are able to efficiently identify mislabelled data points. . Ex. This kind of analysis can also be used to identify mislabeled training data. A recently introduced method (69) uses the classical statistical concept of influence functions to identify points in the training data which contribute to predictions made by ML models. By searching for training data points which contribute the most amount to individual predictions, they were able to find mislabelled data points without having to look at too much data. Correcting these mislabeled training points subsequently improved the test accuracy.\nB. Prediction-level interpretation. Prediction-level approaches are useful when a practitioner is interested in understanding how individual predictions are made by a model. Note that prediction-level approaches can sometimes be aggregated to yield dataset-level insights.\nB.1. Feature importance scores. The most popular approach to prediction-level interpretation has involved assigning importance scores to individual features. Intuitively, a variable with a large positive (negative) score made a highly positive (negative) contribution to a particular prediction. In the deep learning literature, a number of different approaches have been proposed to address this problem (70\u201379), with some methods for other models as well (80). These are often displayed in the form of a heat map highlighting important features. Note that feature importance scores at the prediction-level can offer much more information than feature importance scores at the\nPreprint | Murdoch et al. 2018 | 7\ndataset-level. This is a result of heterogeneity in a nonlinear model: the importance of a feature can vary for different examples as a result of interactions with other features. In the following example, feature importance scores are used to increase the descriptive accuracy of black-box models in order to validate their fairness. . Ex. When using ML models to predict sensitive outcomes, such as whether a person should receive a loan or a criminal sentence, it is important to verify that the algorithm is not discriminating against people based on protected attributes, such as race or gender. This problem is often described as ensuring ML models are \u201cfair\u201d. In (16), the authors introduce a variable importance measure designed to isolate the contributions of individual variables, such as gender, among a set of correlated variables.\nBased on these variable importance scores, the authors construct transparency reports, such as the one displayed in Fig 4. This figure displays the importance of features used to predict that \"Mr. Z\" is likely to be arrested in the future (an outcome which is often used in predictive policing), with each bar corresponding to a feature provided to the classifier, and the y axis displaying the importance score for that feature. In this instance, the race feature is the largest value, indicating that the classifier is indeed discriminating based on race. Thus, in this instance, prediction-level feature importance scores are able to identify that a model is unfairly discriminating based on race.\nB.2. Alternatives to feature importances. While feature importance scores can provide useful insights, they also have a number of limitations. For instance, they are unable to capture when algorithms learn interactions between variables. There is currently an evolving body of work centered around uncovering and addressing these limitations. These methods focus on explicitly capturing and displaying the interactions learned by a neural network (81, 82), alternative forms of interpretations such as textual explanations (83), identifying influential data points (69), and analyzing nearest neighbors (84, 85)."
    },
    {
      "heading": "6. Future work",
      "text": "Having introduced the PDR framework for defining and discussing interpretable machine learning, we now leverage it to frame what we feel are the field\u2019s most important challenges moving forward. Below, we present open problems tied to each\nof the paper\u2019s three main sections: interpretation desiderata (Sec 3), model-based interpretability (Sec 4), and post hoc interpretability (Sec 5).\nA. Measuring interpretation desiderata. Currently, there is no clear consensus in the community around how to evaluate interpretation methods, although some recent work has begun to address it (11\u201313). As a result, the standard of evaluation varies considerably across different work, making it challenging both for researchers in the field to measure progress, and for prospective users to select suitable methods. Within the PDR framework, to constitute an improvement, a new interpretation method must improve at least one desideratum (predictive accuracy, descriptive accuracy, or relevancy) without unduly harming the others. While improvements in predictive accuracy are easy to measure, measuring improvements in descriptive accuracy and relevancy remains a challenge. Less important areas for improvement include computational cost and ease of implementation.\nA.1. Measuring descriptive accuracy. One way to measure an improvement to an interpretation method is to demonstrate that its output better captures what the ML model has learned, i.e. its descriptive accuracy. However, unlike predictive accuracy, descriptive accuracy is generally very challenging to measure or quantify. As a fall-back, researchers often show individual, cherry-picked, interpretations which seem \u201creasonable\u201d. These kinds of evaluations are limited and unfalsifiable. In particular, these results are limited to the few examples shown, and not generally applicable to the entire dataset.\nWhile the community has not settled on a standard evaluation protocol, there are some promising directions. In particular, the use of simulation studies presents a partial solution. In this setting, a researcher defines a simple generative process, generates a large amount of data from that process, and trains their ML model on that data. Assuming a proper simulation setup, a sufficiently powerful model to recover the generative process, and sufficiently large training data, the trained model should achieve near-perfect generalization accuracy. To compute an evaluation metric, they can then check whether their interpretations recover aspects of the original generative process. For example, (57, 86) train neural networks on a suite of generative models with certain built-in interactions, and test whether their method successfully recovers them. Here, due to the ML model\u2019s near-perfect generalization accuracy, we know that the model is likely to have recovered some aspects of the generative process, thus providing a ground truth against which to evaluate interpretations. In a related approach, when an underlying scientific problem has been previously studied, prior experimental findings can serve as a partial ground truth to retrospectively validate interpretations (20).\nA.2. Demonstrating relevancy to real-world problems. Another angle for developing improved interpretation methods is to improve the relevancy of interpretations for some audience or problem. This is normally done by introducing a novel form of output, such as feature heatmaps (71), rationales (87), feature hierarchies (82) or identifying important elements in the training set (69). A common pitfall in the current literature is to focus exclusively on the novel output, ignoring what realworld problems it can actually solve. Given the abundance of possible interpretations, it is particularly easy for researchers\nPreprint | Murdoch et al. 2018 | 8\nto propose novel methods which do not actually solve any real-world problems.\nThere have been two dominant approaches for demonstrating improved relevancy. The first, and strongest, is to directly use the introduced method in solving a domain problem. For instance, in one example discussed above (20), the authors evaluated a new interpretation method (iterative random forests) by demonstrating that it could be used to identify meaningful biological Boolean interactions for use in experiments. In instances like this, where the interpretations are used directly to solve a domain problem, their relevancy is indisputable. A second, less direct, approach is the use of human studies, often through services like Amazon\u2019s Mechanical Turk. Here, humans are asked to perform certain tasks, such as evaluating how much they trust a model\u2019s predictions (82). While challenging to properly construct and perform, these studies are vital to demonstrate that new interpretation methods are, in fact, relevant to any potential practitioners. However, one shortcoming of this approach is that it is only possible to use a general audience of AMT crowdsourced workers, rather than a more relevant, domain-specific audience.\nB. Model-based. Now that we have discussed the general problem of evaluating interpretations, we highlight important challenges for the two main sub-fields of interpretable machine learning: model-based and post hoc interpretability. Whenever model-based interpretability can achieve reasonable predictive accuracy and relevancy, by virtue of its high descriptive accuracy it is preferable to fitting a more complex model, and relying upon post hoc interpretability. Thus, the main focus for model-based interpretability is increasing its range of possible use cases by increasing its predictive accuracy through more accurate models and transparent feature engineering. It is worth noting that sometimes a combination of model-based and post hoc interpretations is ideal.\nB.1. Building accurate and interpretable models. In many instances, model-based interpretability methods fail to achieve a reasonable predictive accuracy. In these cases, practitioners are forced to abandon model-based interpretations in search of more accurate models. Thus, an effective way of increasing the potential uses for model-based interpretability is to devise new modeling methods which produce higher predictive accuracy while maintaining their high descriptive accuracy and relevance. Promising examples of this work include the previously discussed examples on estimating pneumonia risk from patient data (44) and Bayesian models for generating rule lists to estimate a patient\u2019s risk of stroke (39). Detailed directions for this work are suggested in (88).\nB.2. Tools for feature engineering. When we have more informative and meaningful features, we can use simpler modeling methods to achieve a comparable predictive accuracy. Thus, methods that can produce more useful features broaden the potential uses of model-based interpretations. The first main category of work lies in improved tools for exploratory data analysis. By better enabling researchers to interact with and understand their data, these tools (combined with domain knowledge) provide increased opportunities for them to identify helpful features. Examples include interactive environments (89\u201391), tools for visualization (92\u201394), and data exploration tools (95, 96). The second category falls under unsupervised\nlearning, which is often used as a tool for automatically finding relevant structure in data. Improvements in unsupervised techniques such as clustering and matrix factorization could lead to more useful features.\nC. Post hoc. In contrast to model-based interpretability, much of post hoc interpretability is relatively new, with many foundational concepts still unclear. In particular, we feel that two of the most important questions to be answered are what an interpretation of an ML model should look like, and how post hoc interpretations can be used. One of the most promising potential uses of post hoc interpretations is to increase the predictive accuracy of a model. In related work, it has been pointed out that in high stakes decisions practitioners should be very careful when applying post hoc methods with unknown descriptive accuracy (88).\nC.1. What should an interpretation of a black-box look like. Given a black-box predictor and real-world problem, it is generally unclear what format, or combination of formats, is best to fully capture a model\u2019s behavior. Researchers have proposed a variety of interpretation forms, including feature heatmaps (71), feature hierarchies (82) and identifying important elements in the training set (69). However, in all instances there is a gap between the relatively simple information provided by these interpretations and what the complex model has actually learned. Moreover, it is unclear if any of the current interpretation forms can fully capture a model\u2019s behaviour, or if a new format altogether is needed. How to close that gap, while producing outputs relevant to a particular audience/problem, is an open problem.\nC.2. Using interpretations to improve predictive accuracy. In some instances, post hoc interpretations uncover that a model has learned relationships a practitioner knows to be incorrect. For instance, prior interpretation work has shown that a binary husky vs. wolf classifier simply learns to identify whether there is snow in the image, ignoring the animals themselves (78). A natural question to ask is whether it is possible for the practitioner to correct these relationships learned by the model, and consequently increase its predictive accuracy. Given the challenges surrounding simply generating post hoc interpretations, research on their uses has been limited (97, 98). However, as the field of post hoc interpretations continues to mature, this could be an exciting avenue for researchers to increase the predictive accuracy of their models by exploiting prior knowledge, independently of any other benefits of interpretations.\nACKNOWLEDGMENTS. This research was supported in part by grants ARO W911NF1710005, ONR N00014-16-1-2664, NSF DMS-1613002, and NSF IIS 1741340, an NSERC PGS D fellowship, and an Adobe research award. We thank the Center for Science of Information (CSoI), a US NSF Science and Technology Center, under grant agreement CCF-0939370. Reza Abbasi-Asl would like to thank the Allen Institute founder, Paul G. Allen, for his vision, encouragement and support.\n1. Litjens G, et al. (2017) A survey on deep learning in medical image analysis. Medical image analysis 42:60\u201388. 2. Brennan T, Oliver WL (2013) The emergence of machine learning techniques in criminology. Criminology & Public Policy 12(3):551\u2013562. 3. Angermueller C, P\u00e4rnamaa T, Parts L, Stegle O (2016) Deep learning for computational biology. Molecular systems biology 12(7):878. 4. Vu MAT, et al. (2018) A shared vision for machine learning in neuroscience. Journal of Neuroscience pp. 0508\u201317. 5. Goodman B, Flaxman S (2016) European union regulations on algorithmic decision-making and a\" right to explanation\". arXiv preprint arXiv:1606.08813.\nPreprint | Murdoch et al. 2018 | 9\n6. Dwork C, Hardt M, Pitassi T, Reingold O, Zemel R (2012) Fairness through awareness in Proceedings of the 3rd innovations in theoretical computer science conference. (ACM), pp. 214\u2013226. 7. Chakraborty S, et al. (2017) Interpretability of deep learning models: a survey of results in Interpretability of deep learning models: a survey of results. 8. Guidotti R, Monreale A, Turini F, Pedreschi D, Giannotti F (2018) A survey of methods for explaining black box models. arXiv preprint arXiv:1802.01933. 9. Lundberg SM, Lee SI (2017) A unified approach to interpreting model predictions in Advances in Neural Information Processing Systems. pp. 4768\u20134777. 10. Ancona M, Ceolini E, Oztireli C, Gross M (2018) Towards better understanding of gradientbased attribution methods for deep neural networks in 6th International Conference on Learning Representations (ICLR 2018). 11. Doshi-Velez F, Kim B (2017) A roadmap for a rigorous science of interpretability. arXiv preprint arXiv:1702.08608. 12. Gilpin LH, et al. (2018) Explaining explanations: An approach to evaluating interpretability of machine learning. arXiv preprint arXiv:1806.00069. 13. Lipton ZC (2016) The mythos of model interpretability. arXiv preprint arXiv:1606.03490. 14. Hardt M, Price E, Srebro N, , et al. (2016) Equality of opportunity in supervised learning in\nAdvances in neural information processing systems. pp. 3315\u20133323. 15. Boyd D, Crawford K (2012) Critical questions for big data: Provocations for a cultural, techno-\nlogical, and scholarly phenomenon. Information, communication & society 15(5):662\u2013679. 16. Datta A, Sen S, Zick Y (2016) Algorithmic transparency via quantitative input influence: The-\nory and experiments with learning systems in Security and Privacy (SP), 2016 IEEE Symposium on. (IEEE), pp. 598\u2013617. 17. Keil FC (2006) Explanation and understanding. Annu. Rev. Psychol. 57:227\u2013254. 18. Lombrozo T (2006) The structure and function of explanations. Trends in cognitive sciences\n10(10):464\u2013470. 19. Imbens GW, Rubin DB (2015) Causal inference in statistics, social, and biomedical sciences.\n(Cambridge University Press). 20. Basu S, Kumbier K, Brown JB, Yu B (2018) iterative random forests to discover predictive\nand stable high-order interactions. Proceedings of the National Academy of Sciences p. 201711236. 21. Yu B (2013) Stability. Bernoulli 19(4):1484\u20131500. 22. Hampel FR, Ronchetti EM, Rousseeuw PJ, Stahel WA (2011) Robust statistics: the approach\nbased on influence functions. (John Wiley & Sons) Vol. 196. 23. Pimentel H, Hu Z, Huang H (2018) Biclustering by sparse canonical correlation analysis.\nQuantitative Biology 6(1):56\u201367. 24. Abbasi-Asl R, et al. (2018) The deeptune framework for modeling and characterizing neurons\nin visual cortex area v4. bioRxiv p. 465534. 25. Roe AW, et al. (2012) Toward a unified theory of visual area v4. Neuron 74(1):12\u201329. 26. Huang CL, Chen MC, Wang CJ (2007) Credit scoring with a data mining approach based on\nsupport vector machines. Expert systems with applications 33(4):847\u2013856. 27. Box GE (1976) Science and statistics. Journal of the American Statistical Association\n71(356):791\u2013799. 28. Breiman L, , et al. (2001) Statistical modeling: The two cultures (with comments and a rejoin-\nder by the author). Statistical science 16(3):199\u2013231. 29. Freedman DA (1991) Statistical models and shoe leather. Sociological methodology pp. 291\u2013\n313. 30. Lim C, Yu B (2016) Estimation stability with cross-validation (escv). Journal of Computational\nand Graphical Statistics 25(2):464\u2013492. 31. Tibshirani R (1996) Regression shrinkage and selection via the lasso. Journal of the Royal\nStatistical Society. Series B (Methodological) pp. 267\u2013288. 32. Olshausen BA, Field DJ (1997) Sparse coding with an overcomplete basis set: A strategy\nemployed by v1? Vision research 37(23):3311\u20133325. 33. Akaike H (1987) Factor analysis and aic in Selected Papers of Hirotugu Akaike. (Springer),\npp. 371\u2013386. 34. Burnham KP, Anderson DR (2004) Multimodel inference: understanding aic and bic in model\nselection. Sociological methods & research 33(2):261\u2013304. 35. Pati YC, Rezaiifar R, Krishnaprasad PS (1993) Orthogonal matching pursuit: Recursive\nfunction approximation with applications to wavelet decomposition in Signals, Systems and Computers, 1993. 1993 Conference Record of The Twenty-Seventh Asilomar Conference on. (IEEE), pp. 40\u201344. 36. Amaratunga D, Cabrera J, Lee YS (2008) Enriched random forests. Bioinformatics 24(18):2010\u20132014. 37. Breiman L, Friedman J, Olshen R, Stone CJ (1984) Classification and regression trees. 38. Friedman JH, Popescu BE, , et al. (2008) Predictive learning via rule ensembles. The Annals\nof Applied Statistics 2(3):916\u2013954. 39. Letham B, Rudin C, McCormick TH, Madigan D, , et al. (2015) Interpretable classifiers using\nrules and bayesian analysis: Building a better stroke prediction model. The Annals of Applied Statistics 9(3):1350\u20131371. 40. Hastie T, Tibshirani R (1986) Generalized additive models. Statistical Science 1(3):297\u2013318. 41. Kim J, Canny JF (2017) Interpretable learning for self-driving cars by visualizing causal atten-\ntion. in ICCV. pp. 2961\u20132969. 42. Andreas J, Rohrbach M, Darrell T, Klein D (2016) Neural module networks in Proceedings of\nthe IEEE Conference on Computer Vision and Pattern Recognition. pp. 39\u201348. 43. Koller D, Friedman N, Bach F (2009) Probabilistic graphical models: principles and tech-\nniques. (MIT press). 44. Caruana R, et al. (2015) Intelligible models for healthcare: Predicting pneumonia risk and\nhospital 30-day readmission in Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. (ACM), pp. 1721\u20131730. 45. Ramos J, , et al. (2003) Using tf-idf to determine word relevance in document queries in Proceedings of the first instructional conference on machine learning. Vol. 242, pp. 133\u2013142. 46. Dalal N, Triggs B (2005) Histograms of oriented gradients for human detection in Computer Vision and Pattern Recognition, 2005. CVPR 2005. IEEE Computer Society Conference on.\n(IEEE), Vol. 1, pp. 886\u2013893. 47. Shi T, Yu B, Clothiaux EE, Braverman AJ (2008) Daytime arctic cloud detection based on\nmulti-angle satellite data with case studies. Journal of the American Statistical Association 103(482):584\u2013593. 48. Jolliffe I (1986) Principal component analysis. 49. Bell AJ, Sejnowski TJ (1995) An information-maximization approach to blind separation and\nblind deconvolution. Neural computation 7(6):1129\u20131159. 50. Hotelling H (1936) Relations between two sets of variates. Biometrika 28(3/4):321\u2013377. 51. Wu S, et al. (2016) Stability-driven nonnegative matrix factorization to interpret spatial gene\nexpression and build local gene networks. Proceedings of the National Academy of Sciences 113(16):4290\u20134295. 52. Olden JD, Joy MK, Death RG (2004) An accurate comparison of methods for quantifying variable importance in artificial neural networks using simulated data. Ecological Modelling 178(3-4):389\u2013397. 53. Breiman L (2001) Random forests. Machine learning 45(1):5\u201332. 54. Strobl C, Boulesteix AL, Kneib T, Augustin T, Zeileis A (2008) Conditional variable importance\nfor random forests. BMC bioinformatics 9(1):307. 55. Altmann A, Tolos\u0327i L, Sander O, Lengauer T (2010) Permutation importance: a corrected\nfeature importance measure. Bioinformatics 26(10):1340\u20131347. 56. Kumbier K, Basu S, Brown JB, Celniker S, Yu B (2018) Refining interaction search through\nsigned iterative random forests. arXiv preprint arXiv:1810.07287. 57. Tsang M, Cheng D, Liu Y (2017) Detecting statistical interactions from neural network weights.\narXiv preprint arXiv:1705.04977. 58. Abbasi-Asl R, Yu B (2017) Structural compression of convolutional neural networks based on\ngreedy filter pruning. arXiv preprint arXiv:1705.07356. 59. Office of Institutional Research HU (2018) Exhibit 157: Demographics of har-\nvard college applicants. http://samv91khoyt2i553a2t1s05i-wpengine.netdna-ssl.com/wpcontent/uploads/2018/06/Doc-421-157-May-30-2013-Report.pdf pp. 8\u20139. 60. arcidiacono PS (2018) Exhibit a: Expert report of peter s. arcidiacono. http://samv91khoyt2i553a2t1s05i-wpengine.netdna-ssl.com/wpcontent/uploads/2018/06/Doc-415-1-Arcidiacono-Expert-Report.pdf. 61. Card D (2018) Exhibit 33: Report of david card. https://projects.iq.harvard.edu/files/diverseeducation/files/legal_-_card_report_revised_filing.pdf. 62. Zeiler MD, Fergus R (2014) Visualizing and understanding convolutional networks in European conference on computer vision. (Springer), pp. 818\u2013833. 63. Olah C, Mordvintsev A, Schubert L (2017) Feature visualization. Distill 2(11):e7. 64. Mordvintsev A, Olah C, Tyka M (2015) Deepdream-a code example for visualizing neural\nnetworks. Google Research 2:5. 65. Wei D, Zhou B, Torrabla A, Freeman W (2015) Understanding intra-class knowledge inside\ncnn. arXiv preprint arXiv:1507.02379. 66. Zhang Q, Cao R, Shi F, Wu YN, Zhu SC (2017) Interpreting cnn knowledge via an explanatory\ngraph. arXiv preprint arXiv:1708.01785. 67. Karpathy A, Johnson J, Fei-Fei L (2015) Visualizing and understanding recurrent networks.\narXiv preprint arXiv:1506.02078. 68. Strobelt H, et al. (2016) Visual analysis of hidden state dynamics in recurrent neural networks.\nCoRR, abs/1606.07461. 69. Koh PW, Liang P (2017) Understanding black-box predictions via influence functions. arXiv\npreprint arXiv:1703.04730. 70. Springenberg JT, Dosovitskiy A, Brox T, Riedmiller M (2014) Striving for simplicity: The all\nconvolutional net. arXiv preprint arXiv:1412.6806. 71. Sundararajan M, Taly A, Yan Q (2017) Axiomatic attribution for deep networks. ICML. 72. Selvaraju RR, et al. (2016) Grad-cam: Visual explanations from deep networks via gradient-\nbased localization. See https://arxiv. org/abs/1610.02391 v3 7(8). 73. Baehrens D, et al. (2010) How to explain individual classification decisions. Journal of Ma-\nchine Learning Research 11(Jun):1803\u20131831. 74. Smilkov D, Thorat N, Kim B, Vi\u00e9gas F, Wattenberg M (2017) Smoothgrad: removing noise by\nadding noise. arXiv preprint arXiv:1706.03825. 75. Shrikumar A, Greenside P, Shcherbina A, Kundaje A (2016) Not just a black box: Learning im-\nportant features through propagating activation differences. arXiv preprint arXiv:1605.01713. 76. Murdoch WJ, Szlam A (2017) Automatic rule extraction from long short term memory net-\nworks. arXiv preprint arXiv:1702.02540. 77. Dabkowski P, Gal Y (2017) Real time image saliency for black box classifiers. arXiv preprint\narXiv:1705.07857. 78. Ribeiro MT, Singh S, Guestrin C (2016) Why should i trust you?: Explaining the predictions of\nany classifier in Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. (ACM), pp. 1135\u20131144. 79. Zintgraf LM, Cohen TS, Adel T, Welling M (2017) Visualizing deep neural network decisions: Prediction difference analysis. arXiv preprint arXiv:1702.04595. 80. Lundberg SM, Erion GG, Lee SI (2018) Consistent individualized feature attribution for tree ensembles. arXiv preprint arXiv:1802.03888. 81. Murdoch WJ, Liu PJ, Yu B (2018) Beyond word importance: Contextual decomposition to extract interactions from lstms. arXiv preprint arXiv:1801.05453. 82. Singh C, Murdoch WJ, Yu B (2018) Hierarchical interpretations for neural network predictions. arXiv preprint arXiv:1806.05337. 83. Rohrbach A, Rohrbach M, Hu R, Darrell T, Schiele B (2016) Grounding of textual phrases in images by reconstruction in European Conference on Computer Vision. (Springer), pp. 817\u2013834. 84. Caruana R, Kangarloo H, Dionisio J, Sinha U, Johnson D (1999) Case-based explanation of non-case-based learning methods. in Proceedings of the AMIA Symposium. (American Medical Informatics Association), p. 212. 85. Papernot N, McDaniel P (2018) Deep k-nearest neighbors: Towards confident, interpretable and robust deep learning. arXiv preprint arXiv:1803.04765. 86. Tsang M, Sun Y, Ren D, Liu Y (2018) Can i trust you more? model-agnostic hierarchical explanations. arXiv preprint arXiv:1812.04801.\nPreprint | Murdoch et al. 2018 | 10\n87. Lei T, Barzilay R, Jaakkola T (2016) Rationalizing neural predictions. arXiv preprint arXiv:1606.04155. 88. Rudin C (2018) Please stop explaining black box models for high stakes decisions. arXiv preprint arXiv:1811.10154. 89. Kluyver T, et al. (2016) Jupyter notebooks-a publishing format for reproducible computational workflows. in ELPUB. pp. 87\u201390. 90. P\u00e9rez F, Granger BE (2007) Ipython: a system for interactive scientific computing. Computing in Science & Engineering 9(3). 91. RStudio Team (2016) RStudio: Integrated Development Environment for R (RStudio, Inc., Boston, MA). 92. Barter R, Yu B (2015) Superheat: Supervised heatmaps for visualizing complex data. arXiv preprint arXiv:1512.01524. 93. Wickham H (2016) ggplot2: elegant graphics for data analysis. (Springer). 94. Waskom M, et al. (2014) Seaborn: statistical data visualization. URL: https://seaborn. pydata.\norg/(visited on 2017-05-15). 95. McKinney W, , et al. (2010) Data structures for statistical computing in python in Proceedings\nof the 9th Python in Science Conference. (Austin, TX), Vol. 445, pp. 51\u201356. 96. Wickham H (2017) tidyverse: Easily Install and Load the \u2019Tidyverse\u2019. R package version\n1.2.1. 97. Ross AS, Hughes MC, Doshi-Velez F (2017) Right for the right reasons: Training differentiable\nmodels by constraining their explanations. arXiv preprint arXiv:1703.03717. 98. Zaidan O, Eisner J, Piatko C (2007) Using \u201cannotator rationales\u201d to improve machine learning\nfor text categorization in Human Language Technologies 2007: The Conference of the North American Chapter of the Association for Computational Linguistics; Proceedings of the Main Conference. pp. 260\u2013267.\nPreprint | Murdoch et al. 2018 | 11"
    }
  ],
  "title": "Interpretable machine learning: definitions, methods, and applications",
  "year": 2019
}
