{"abstractText": "We investigate the fair channel assignment and access design problem for cognitive radio ad hoc network in this paper. In particular, we consider a scenario where ad ho c network nodes have hardware constraints which allow them to access at most one channel at any time. We investigate a fair channel allocation problem where each node is allocate d a subset of channels which are sensed and accessed periodical ly by their owners by using a MAC protocol. Toward this end, we analyze the complexity of the optimal brute-force search algorithm which finds the optimal solution for this NP-hard problem. We then develop low-complexity algorithms that can work efficiently with a MAC protocol algorithm, which resolv es the access contention from neighboring secondary nodes. Al so, we develop a throughput analytical model, which is used in the proposed channel allocation algorithm and for performance evaluation of its performance. Finally, we present extensi ve numerical results to demonstrate the efficacy of the propose d algorithms in achieving fair spectrum sharing among trafficflows in the network.", "authors": [{"affiliations": [], "name": "Le Thanh Tan"}], "id": "SP:f5e8aa94f19a2f62a782d535d035f1f8fb40d6f3", "references": [{"authors": ["T. Yucek", "H. Arslan"], "title": "A survey of spectrum sensing algo rithms for cognitive radio applications", "venue": "IEEE Commun. Surveys Tutorials, vol. 11, no. 1, pp. 116\u2013130, 2009.", "year": 2009}, {"authors": ["H. Su", "X. Zhang"], "title": "Cross-layer based opportunistic MA C protocols for QoS provisionings over cognitive radio wireless networ ks", "venue": "IEEE J. Sel. Areas Commun. , vol. 26, no. 1, pp. 118\u2013129, Jan. 2008.", "year": 2008}, {"authors": ["H. Nan", "T.-I. Hyon", "S.-J. Yoo"], "title": "Distributed coordina ted spectrum sharing MAC protocol for cognitive radio", "venue": "inIEEE DySPAN\u2019 2007.", "year": 2007}, {"authors": ["C. Cordeiro", "K. Challapali"], "title": "C-MAC: A cognitive MAC p rotocol for multi-channel wireless networks", "venue": "IEEE DySPAN\u2019 2007.", "year": 2007}, {"authors": ["Y.R. Kondareddy", "P. Agrawal"], "title": "Synchronized MAC prot ocol for multi-hop cognitive radio networks", "venue": "inProc. IEEE ICC\u20192008.", "year": 2008}, {"authors": ["H. Su", "X. Zhang"], "title": "Channel-hopping based single transc eiver MAC for cognitive radio networks", "venue": "inProc. CISS\u20192008.", "year": 2008}, {"authors": ["M. Timmers", "S. Pollin", "A. Dejonghe", "L. Van der Perre", "F . Catthoor"], "title": "A distributed multichannel MAC protocol for multihop cogn itive radio networks", "venue": "IEEE Trans. Veh. Tech. , vol. 59, no. 1, pp. 446\u2013459, Jan. 2010", "year": 2010}, {"authors": ["S.C. Jha", "U. Phuyal", "M.M. Rashid", "V.K. Bhargava"], "title": "Des ign of OMC-MAC: An opportunistic multi-channel MAC with QoS pro visioning for distributed cognitive radio networks", "venue": "IEEE Trans. Wireless Commun.,vol. 10, no. 10, pp. 3414\u20133425 , Oct. 2011.", "year": 2011}, {"authors": ["L.T. Tan", "L.B. Le"], "title": "Channel assignment for throughput maximization in cognitive radio networks,", "venue": "inProc. IEEE WCNC\u20192012", "year": 2012}, {"authors": ["G. Bianchi"], "title": "Performance analysis of the IEEE 802.11 di stributed coordination function", "venue": "inIEEE J. Sel. Areas Commun. , vol. 18, no. 3, pp. 535-547, Mar. 2000.", "year": 2000}, {"authors": ["J. Mo", "H. So", "J. Walrand"], "title": "Comparison of multichanne l MAC protocols", "venue": "IEEE Trans. Mobile Computing , vol. 7, no. 1, pp. 50\u201365, Jan. 2008.", "year": 2008}, {"authors": ["J. Lee", "S. Leyffer eds."], "title": "Mixed integer nonlinear pro gramming", "venue": "The IMA Volumes in Mathematics and its Applications , vol. 154, Springer, 2012.", "year": 2012}, {"authors": ["L. Tassiulas", "S. Sarkar"], "title": "Maxmin fair scheduling in w ireless ad hoc networks", "venue": "IEEE J. Sel. Areas Commun. , vol. 23, no. 1, pp. 163\u2013173 , Jan. 2005.", "year": 2005}], "sections": [{"text": "ar X\niv :1\n40 4.\n19 08\nv1 [\ncs .N\nI] 7\nA pr\n2 01\n4 1\nIndex Terms\u2014Channel assignment, MAC protocol, cognitive ad hoc network, fair resource allocation.\nI. I NTRODUCTION\nCognitive radio has recently emerged as an important research field, which promises to fundamentally enhance wireless network capacity in future wireless system. To exploit spectrum opportunities on a given set of channels of interest, each cognitive radio node must typically rely on spectrum sensing and access mechanisms. In particular, an efficient spectrum sensing scheme aims at discovering spectrum holes in a timely and accurate manner while a spectrum access strategy coordinates the spectrum access of different cognitive nodes so that high spectrum utilization can be achieved. These research themes have been extensively investigated by many researchers in recent years [1]-[9]. In [1], a survey of recent advances in spectrum sensing for cognitive radios has been reported.\nThere is also a rich literature on MAC protocol design and analysis under different network and QoS provisioning objectives. In [2], a joint spectrum sensing and scheduling scheme is proposed where each cognitive user is assumed to possess two radios. A beacon-based cognitive MAC protocol is proposed in [4] to mitigate the hidden terminal problem while effectively exploiting spectrum holes. Synchronized and channel-hopping based MAC protocols are proposed in [5] and [6], respectively. Other multi-channel MAC protocols [7],[8] are developed for cognitive multihop networks. However, these existing papers do not consider the setting where cognitive radios have access constraints that we investigate in this paper.\nThe authors are with INRS-EMT, University of Quebec, Montr\u00b4eal, Que\u0301bec, Canada. Emails:{lethanh,long.le}@emt.inrs.ca.\nIn [9], we have investigated the channel allocation problem considering this access constraint for a collocated cognitive network where each cognitive node can hear transmissions from other cognitive nodes (i.e., there is a single contention domain). In this paper, we make several fundamental contributions beyond [9]. First, we consider the large-scale cognitive ad hoc network setting in this paper where there can be many contention domains. In addition, the conflict constrain s become much more complicated since each secondary node may conflict with several neighboring primary nodes and vice versa. These complex constraints indeed make the channel assignment and the throughput analysis very difficult. Second, we consider a fair channel allocation problem under the maxmin fairness criterion [13] while throughput maximizationis investigated in [9]. Third, we propose optimal brute-force search and low-complexity channel assignment algorithms and analyze their complexity. Finally, we develop a throughput analytical model, which is used in the proposed channel allocation algorithms and for performance analysis.\nII. SYSTEM MODEL AND PROBLEM FORMULATION"}, {"heading": "A. System Model", "text": "We consider a cognitive ad-hoc network where there are Ms flows exploiting spectrum opportunities inN channels for their transmissions. Each secondary flow corresponds to one cognitive transmitter and receiver and we refer to secondary flows as secondary users (SU) in the following. We assume there areMp primary users (PU) each of which can transmit their own data on theseN channels. We assume that each SU can use at most one channel for his/her data transmission. In addition, time is divided fixed-size cycle where SUs perform sensing on assigned channels at the beginning of each cycle to explore available channels for communications. For simplicity, we assume that there is no sensing error although the analysis presented in this paper can be extended to consider sensing errors. It is assumed that SUs transmit at a constant rate which is normalized to 1 for throughput calculation purposes.\nTo model the interference among SUs in the secondary network, we form a contention graphG = {N ,L}, where N = {1, 2, . . . ,Ms} is the set of nodes (SUs) representing SUs and the set of linksL = {1, 2, . . . , L} representing contention relationship among SUs. In particular, there isa link between two SUs inL if these SUs cannot transmit packet data on the same channel at the same time, which is illustrated in Fig. 1. To model the activity of PUs on each channel, let us defineppij as the probability that PUi does not transmit on channelj. We stack these probabilities and definePi = (p p i1, . . . , p p iN ), i \u2208 [1,Mp], which captures the activity of PU i on all channels. In addition, let us define\n2\nP p =\n( P1, . . . ,PMp )\nwhere Pi is the vector representing activities of PUi.\nWe now model the contention relationship among SUs and between PUs and SUs. Specifically, we assume thatUni be the set of neighboring SUs that conflict with SUi (i.e., there is a link connecting each SU inUni to SU i in the contention graph). Also, assume that SUk has a set of neighboring PUs denoted asUpk , which is the subset of1, . . . ,Mp so that if any PU in the setUpk transmit on a particular channel then SU k is not allowed to transmit on this channel to protect the primary transmission. Assuming that the activities of different PUs on any channel are independent then the probability that channelj is available for SUk indicates can be written as pkj = \u220f\ni\u2208Up k ppij since channelj is available for SUk if all\nconflicting PUs inUpk do not use channelj."}, {"heading": "B. Problem Formulation", "text": "We are interested in performing channel assignment that maximizes the minimum throughput among all SUs (i.e., maxmin fairness [13]). LetTi denote the throughput achieved by SU i. Let xij describe the channel assignment decision where xij = 1 if channel j is assigned to SUi and xij = 0, otherwise. Then, the max-min channel assignment problem can be written as\nmax x min i Ti (1)\nwherex is the channel assignment vector whose elements are xij . For the case where each SU is allocated a distinct set of channels, i.e., we have Ms \u2211\ni=1\nxij = 1, for all j. Under this non-\noverlapping channel assignments, letSi be the set of channels assigned to SUi. Recall thatpij is the probability that channel j is available at SUi. Then,Ti can be calculated asTi =\n1 \u2212 \u220f\nj\u2208Si pij = 1 \u2212\nN \u220f\nj=1\n(p\u0304ij) xij wherepij = 1 \u2212 pij is the\nprobability that channelj is not available for SUi [9]. In fact, 1\u2212 \u220f\nj\u2208Si pij is the probability that there is at least one\nchannel available for SUi. Because each SU can use at most one available channel, its maximum throughput is 1.\nIn general, it would be beneficial if each channel is allocated to several SUs in a common neighborhood to exploit the multiuser diversity. Under both non-overlapping and overlapping channel assignments, it can be observed that the channel assignment problem with the objective defined in (1) is a nonlinear integer program, which is an NP-hard problem (interest readers can refer to [12] for detailed treatment of this hardness result)."}, {"heading": "C. Optimal Algorithm and Its Complexity", "text": "We describe a brute-force search (i.e., exhaustive search)to determine the optimal channel assignment solution. Specifically, we can enumerate all possible channel assignment solutions then determine the best one by comparing their achieved throughput. While throughput can be calculated quite easily for the non-overlapping channel assignments as being presented in Section II-B, developing a throughput analytical model foran overlapping channel assignment solution is indeed challenging task, which is performed in Section III-B2 of this paper.\nWe now quantify the complexity of the optimal brute-force search algorithm. Let us consider SUi (i.e., i \u2208 {1, . . . ,Ms}). Suppose we assign itk channels wherek \u2208 {1, . . . , N}). Then, there areCkN ways to do so. Sincek can take any values ink \u2208 {1, . . . , N}, the total number of ways to assign channels to SUi is N \u2211\nk=1\nCkN \u2248 2 N . Hence, the total number\nof ways to assign channels to all SUs is ( 2N )Ms\n= 2NMs . Recall that we need to calculate the throughputs achieved by Ms SUs for each potential assignment to determine the best one. Therefore, the complexity of the optimal bruteforce search algorithm isO(2NMs). Given the exponentially large complexity of this brute-force search, we will develop low-complexity channel assignment algorithms, namely nonoverlapping and overlapping assignment algorithms.\nIII. C HANNEL ALLOCATION AND ACCESSDESIGN"}, {"heading": "A. Non-overlapping Channel Assignment", "text": "We develop a low-complexity algorithm for non-overlapping channel assignment in this section. Recall thatSi is the set of channels assigned for secondary useri. In the non-overlapping channel assignment scheme, we haveSi \u2229 Sj = \u2205, i 6= j where SUsi and j are neighbors of each other (i.e., there is a link connecting them in the contention graphG). Note that one particular channel can be assigned to SUs who are not neighbors of each other. This aspect makes the channel assignment different from the collocated network setting considered in [9]. Specifically all channels assigned for different SUs should be different in [9] under non-overlapping channel assignment since there is only one contention domain for the collocated network investigated in [9].\nThe greedy channel assignment algorithm iteratively allocates channels to one of the minimum-throughput SUs so that we can achieve maximum increase in the throughput for the chosen SU. Detailed description of the proposed algorithm is presented in Algorithm 1. In each channel allocation iteration, each minimum-throughput SUi calculates its increase in throughput if the best available channel (i.e., channelj\u2217i = argmax\nj\u2208Sa\npij ) is allocated. This increase in throughput can be\ncalculated as\u2206Ti = T ai \u2212 T b i = pij\u2217i\n\u220f\nj\u2208Si\n(1\u2212 pij) [9].\nIn step 4, there may be several SUs achieving the minimum throughput. We denote this set of minimum-throughput SUs as Smin. Then, we assign the best channel that results in the maximum increase of throughput among all SUs in the set Smin. We update the set of available channels for each SU after each allocation. Note that only neighboring SUs compete for the same channel; hence, the update of available\n3 Algorithm 1 NON-OVERLAPPING CHANNEL ASSIGNMENT 1: Initialize SU i\u2019s set of available channels,Sai :=\n{1, 2, . . . , N} and Si := \u2205 for i = 1, 2, . . . ,Ms where Si denotes the set of channels assigned for SUi.\n2: continue:= 1 3: while continue= 1 do 4: Find the set of SUs who currently achieve the min-\nimum throughputSmin = argmin i T bi where S min = {i1, . . . , im} \u2282 {1, . . . ,Ms} is the set of minimumthroughput SUs.\n5: if OR il\u2208Smin\n( Sail 6= \u2205 ) then\n6: For each SUil \u2208 Smin and channeljil \u2208 S a il , find \u2206Til = T a il \u2212 T bil where T a il\nand T bil are the throughputs after and before assigning channeljil ; and we set\u2206Til = 0 if S a il = \u2205\n7: {\ni\u2217l , j \u2217 i\u2217 l\n}\n= argmax il\u2208Smin,jil\u2208S a il \u2206Til (jil)\n8: Assign channelj\u2217i\u2217 l to SU i\u2217l . 9: UpdateSi\u2217\nl = Si\u2217 l \u222a j\u2217i\u2217 l and Sak = S a k\\j \u2217 i\u2217 l for all k \u2208 Uni\u2217\nl .\n10: else 11: Set continue:= 0 12: end if 13: end while\nchannels for the chosen minimum-throughput SU is only performed for its neighbors. This means that we can exploit spatial reuse in a large cognitive ad hoc network. It can be verified that if the number of channels is sufficiently large (i. ., N>>maxi |Uni |), then the proposed non-overlapping channel assignment achieves throughput close to 1 for all SUs."}, {"heading": "B. Overlapping Channel Assignment", "text": "1) MAC Protocol: Overlapping channel assignment can improve the minimum throughput but we need to design a MAC protocol to resolve access contention among different SUs. Note that a channel assignment solution needs to be determined only once while the MAC protocol operates repeatedly using the chosen channel assignment solution in each cycle. LetSi be the set of channels solely assigned for SUi andScomi be the set of channels assigned for SUi and some other SUs. These two sets are referred to asseparate setand common setin the following. Let denoteStoti = Si \u222a S com i , which is the set of all channels assigned to SUi. Assume that there is one control channel, which is always available and used for access contention resolution. We consider the following MAC protocol run by any particular SU i, which belongs the class of synchronized MAC protocol [11].1 The MAC protocol operates a cyclic manner where synchronization and sensing phases are employed before the channel contention and transmission phase in each cycle. After sensing the assigned channels in the sensing phase, if a particular SUi finds at least one channel inSi available,\n1Since we focus on the channel assignment issue in this paper,we do not attempt different alternative MAC protocol designs. Interest readers can refer to [11] for detailed treatment of this issue.\nthen it chooses one of these available channels randomly for communication. If this is not the case, SUi will choose one available channel inScomi randomly (if any). Then, it chooses a random backoff value which is uniformly distributed in [0,W \u2212 1] (i.e., W is the contention window) and starts decreasing its backoff counter while listening on the contrl channel.\nIf it overhears transmissions of RTS/CTS from any other SUs, it will freeze from decreasing its backoff counter until the control channel is free again. As soon as a SU\u2019s backoff counter reaches zero, its transmitter and receiver exchange RTS/CTS messages containing the chosen available channel for communication. If the RTS/CTS message exchange fails due to collisions, the corresponding SU will quit the contention and wait until the next cycle. In addition, by overhearing RTS/CTS messages of neighboring SUs, which convey information about the channels chosen for communications, other SUs compared these channels with their chosen ones. Any SU who has his/her chosen channel coincides with the overheard channels quits the contention and waits until the next cycle. Note that in the considered cognitive ad hoc setting each SU i only competes with its neighbors in the setUni , which is different from the setting investigated in [9].\n2) Throughput Analysis: To analyze the throughput achieved by one particular SUi, we consider all possible sensing outcomes for the considered SUi on its assigned channels. We will consider the following cases.\n\u2022 Case 1: If there is at least one channel inSi available, then SUi will exploit this available channel and achieve the throughput of one. Here, we have\nTi {Case 1} = Pr {Case 1} = 1\u2212 \u220f\nj\u2208Si\np\u0304ij .\n\u2022 Case 2: We consider scenarios where all channels inSi are not available; there is at least one channel inS comi available, and SUi chooses the available channelj for transmission. Suppose that channelj is shared by SUi and MSj neighboring SUs (i.e.,MSj = |Uj | where Uj denotes the set of theseMSj neighboring SUs). Recall that allMSj SUs conflict with SUi (i.e., they are not allowed to transmit data on the same channel with SU i). There are four possible groups of SUsik, k = 1, . . . ,MSj sharing channelj, which are described in the following\n\u2013 Group I : channelj is not available for SUik. \u2013 Group II : channelj is available for SUik and SU\nik has at least 1 channel inSik available. \u2013 Group III : channelj is available for SUik, all\nchannels inSik are not available and there is another channelj\u2032 in Scomik available for SUik. In addition, SU ik chooses channelj\u2032 6= j for transmission in the contention stage. \u2013 Group IV : channelj is available for SUik, all channels in Sik are not available. Also, SUik chooses channelj for transmission in the contention stage. Hence, SUik competes with SUi for channelj.\n4 Let Upj,i be the set of PUs who are neighbors of SUs inUj . Then, the throughput achieved by SUi can be written as\nTi ( Case 3) = (1 \u2212 \u03b4)\u0398i\nMSj \u2211\nA1=0\nMSj\u2212A1 \u2211\nA2=0\nMSj\u2212A1\u2212A2 \u2211\nA3=0\n1\n1 + A4\nC A1 MSj \u2211\nc1=1\nC A2 MSj\u2212A1 \u2211\nc2=1\nC A3 MSj\u2212A1\u2212A2\n\u2211\nc3=1\n\u0398j\u03a61(A1)\u03a62(A2)\u03a63(A3)\nwhereA4 = MSj \u2212A1 \u2212A2 \u2212A3 and\u03b4 denotes the MAC protocol overhead, which will be derived in Section III-B4.In this derivation, we consider all possible cases where SUs in Uj are divided into four groups defined above with sizesA1, A2, A3, andA4, respectively. For one such particular case, let Up,1j,i be the set of PUs who are only neighbors of SUs in group I with sizeA1 andU p,2 j,i = U p j,i\\U p,1 j,i be the set of remaining PUs inUpj,i. In addition, letU p,3 j,i be the set of PUs who are neighbors of SUs in group III and IV with sizesA3 and A4, respectively. The terms\u0398i , \u0398j, \u03a61(A1), \u03a62(A2), and\u03a63(A3) in the above derivation are\n\u2022 \u0398i is the probability that all channels inSi are not available and SUi chooses an available channelj in Scomi for transmission. \u2022 \u0398j is the probability that all PUs inU p,2 j,i do not use\nchannelj. \u2022 \u03a61(A1) denotes the total probability of all cases for PUs\nin Up,1j,i such that channelj is not available for allA1 SUs in group I.\n\u2022 \u03a62(A2) represents the probability that there is at least one available channel in the separate set for each of the A2 SUs in Group II. \u2022 \u03a63(A3) describes the total probability of all cases for PUs inUp,3j,i such that each SU in group III chooses other available channelj \u2032\n6= j for transmission and each SU in group IV chooses channelj for transmission.\nIn this formula, we have considered all possible events and combinations that can happen for neighboring SUs of the underlying SUi. Note that onlyA4 SUs in Group IV compete with SU i for channelj by using the proposed MAC protocol. Therefore, SUi wins this contention with probability 1/(1+A4). In addition, the throughput is reduced by a factor 1 \u2212 \u03b4 where \u03b4 is the MAC protocol overhead. Due to the space constraint, detailed derivation of these rather complicated probabilities are presented in the online technical report. Summarizing all considered cases, the throughput achievedby SU i is given as\nTi = Ti {Case 1}+ Ti {Case 2} . (2)\nThis throughput derivation is used for channel assignment and performance evaluation of the proposed algorithms.\n3) Configuration of Contention Window:We show how to calculate contention windowW so that collision probabilities among contending SUs are sufficiently small. Note that the probability of the first collision among potential collisions is largest because the number of contending SUs decreases for successive potential collisions. Derivation of these collisi n probabilities for the cognitive ad-hoc networks is more complicated than that for collocated networks considered in [9] since the interference constraints are more complicated.\nWe calculate contention windowWk for each SUk considering the contention with its neighbors. Let us calculatePc,k as a function ofWk assuming that there arem secondary SUs in the contention phase. Without loss of generality, assume that the random backoff times ofm SUs are ordered as r1 \u2264 r2 \u2264 . . . \u2264 rm. The conditional probability of the first collision if there arem SUs in the contention stage can be written as\nP (m) c,k =\nm \u2211\nj=2\nPr (j users collide)\n=\nm \u2211\nj=2\nWk\u22122 \u2211\nl=0\nCjm\n(\n1\nWk\n)j ( Wk \u2212 l\u2212 1\nWk\n)m\u2212j\n(3)\nwhere each term in the double-sum represents the probability that j users collide when they choose the same backoff value equal tol. Hence, the probability of the first collision can be calculated as\nPc,k =\nMnk \u2211\nm=2\nP (m) c,k \u00d7 Pr {m users contend} , (4)\nwhere Mnk = |U n k | + 1 is the total number of SUs (including SU k and its neighbors),P(m)c,k is given in (3) and Pr {m users contend} is the probability thatm SUs contend with SU k in the contention phase. To computePc,k, we now derivePr {m users contend}.\nWe can divide the set of neighbors of SUk into two groups. In particular, there arem SUs contending with SUk while the remainingMnk \u2212m SUs do not join the contention phase. There areCmMn\nk such combinations for a particular value ofm\nwhere it happens with the following probability\nPr {m users contend} =\nCmMn k \u2211\nn=1\nP(n)con (5)\nwhereP(n)con is the probability of one particular case wherem SUs contend with SUk. We can divide the set of remaining Mnk \u2212 m SUs who do not join the contention into two subgroups, namely SUs who could not find any available channels in their allocated channelsStoti2 (first subgroup) and SUs who find some available channels in their separate sets Si1 (second subgroup).\nNow, let \u039bn be one particular set ofm SUs in the first group andA1 denote the number of SUs in the first subgroup of the remainingMnk \u2212m SUs. Then, we can calculateP (n) con as follows:\nP(n)con = \u220f\ni1\u2208\u039bn\n\n\n\u220f\nl1\u2208Si1\npi1l1\n\n (6)\nMnk \u2212m \u2211\nA1=0\nC A1 Mn\nk \u2212m\n\u2211\nc1=1\n\u220f\ni2\u2208\u2126 (1) c1\n\u220f\nl2\u2208Si2\npi2l2\n\u220f\ni3\u2208\u2126 (2) c1\n\n1\u2212 \u220f\nl3\u2208Si3\npi3l3\n\n (7)\n\u03b2(1) \u2211\nn(1)=1\nCn (1)\n\u03b2(1) \u2211\nq(1)=1\n. . .\n\u03b2(m) \u2211\nn(m)=1\nCn (m)\n\u03b2(m) \u2211\nq(m)=1\n\u220f\ni4\u2208U p c1\n\u220f\nl4\u2208\u039b (1) c1\nppi4l4\n\u220f\nl5\u2208\u039b (2) c1\nppi4l5 . (8)\n5 The term inside[.] in (6) represents the probability that all channels in the separate setsSi1 for all SUs i1 \u2208 \u039bn are not available so that these SUs contend to access available channels inScomi1 . The term in (7) denotes the probability that each ofA1 SUs in the first subgroup (i.e., in the set\u2126 (1) c1 ) find no available channels in their separate sets and each of theMnk \u2212m\u2212A1 SUs in the second subgroup (i.e., in the set \u2126 (2) c1 ) find at least one available channel in their separate sets (therefore, these SUs will not perform contention). Here,c1 is the index of one particular case where there areA1 SUs in the first subgroup and a particular set\u039bn. The last term in (8) denotes the probability of the event representing the status of all PUs who are neighbors of SUs in the setUnk (i.e., neighbors of SU k) so that there are exactlym contending SUs in the set\u039bn andA1 SUs in the first subgroup. In (8) we consider all possible scenarios where for each SUi \u2208 \u039bn, there are n(i) available channels among\u03b2(i) = |Scomi | channels in the setScomi whereq\n(i) represents the index of one such particular case. Corresponding to such(n(i), q(i)), Upc1 denotes the set of PUs who are neighbors of SUs inUnk so that indeedm underlying SUs perform contention.\nBy substitutingP(n)con calculated above into (5), we can calculate the collision probability inPc,k in (4). From this, we can determineWk as follows:\nWk = min {Wk such thatPc,k(Wk) \u2264 \u01ebPk} (9)\nwhere \u01ebPk controls the collision probability and overhead tradeoff and for clarity we denotePc,k(Wk), which is given in (4) as a function ofWk. Then, we will determine the contention window for all SUs asW = maxk Wk.\n4) Calculation of MAC Protocol Overhead:Let r be the average value of the backoff value chosen by any SU. Then, we haver = (W \u2212 1)/2 because the backoff counter value is uniformly chosen in the interval[0,W \u2212 1]. As a result, average overhead can be calculated as follows:\n\u03b4 (W ) = [W \u2212 1] \u03b8/2 + tRTS + tCTS + 3tSIFS + tSEN + tSYN\nTcycle\nwhere\u03b8 is the time corresponding to one backoff unit;tRTS, tCTS, tSIFS are the corresponding time of RTS, CTS and SIFS (i.e., short inter-frame space) messages;tSEN is the sensing time; tSYN is the transmission time of the synchronization message; andTcycle is the cycle time.\n5) Overlapping Channel Assignment Algorithm:In the overlapping channel assignment algorithm described in Algorithm 2, we run Algorithm 1 to obtain the non-overlapping channel assignment solution in the first phase and perform overlapping channel assignments by allocating channels that have been assigned to a particular SU to other SUs in the second phase. We calculate the increase-of-throughput metricfor all potential channel assignments that can improve the throughput of minimum-throughput SUs. To calculate the increaseof-throughput, we use the throughput analytical model in Subsection III-B2, where the MAC protocol overhead,\u03b4 < 1 is derived from III-B4. After running Algorithm 1 in the first phase, each SUi has the set of assigned non-overlapping channels,Si, and it initiates the set of overlapping channels asScomi = \u2205, i = 1, . . . ,Ms. Recall that the set of all assigned channels for SUi is S toti = Si \u222a S com i . Let S Uni i\u2217 is the set of\nAlgorithm 2 OVERLAPPING CHANNEL ASSIGNMENT 1: After running Algorithm 1, each SUi hasSi, Scomi = \u2205\nandSni , i = 1, . . . ,Ms. 2: continue := 1. 3: while continue= 1 do 4: Find Tmin and i\u2217 = argmin\ni\u2208{1,...,Ms}\nT bi .\n5: SUnii\u2217 = \u22c3\nl\u2208Un i\u2217\nS totl .\n6: SSepi\u2217 = SETXOR l\u2208Un\ni\u2217\n(S totl ).\n7: S Inti\u2217 = S Uni i\u2217 \\S Sep i\u2217 \\S com i\u2217 . 8: Find all minimum-throughput SUs and find the best channels from eitherSSepi\u2217 or S Int i\u2217 for these minimum-\nthroughput SUs to improve the overall minimum throughput.\n9: if \u22c3\ni\u2208{1,...,Ms}\nScom,tempi 6= \u2205 then\n10: AssignScomi = S com,temp i andSi = S temp i . 11: else 12: Set continue:= 0. 13: end if 14: end while\nall channels that have been assigned for SUi\u2217\u2019s neighboring SUs. Also, letSSepi\u2217 be the set of all channels assigned solely for each individual neighbor of SUi\u2217 (i.e., each channel in SSepi\u2217 is allocated for only one particular SU inU n i\u2217 ). Therefore, S Inti\u2217 defined in step 7 of Algorithm 2 is the set of \u201cintersecting channels\u201d, which are shared by at least two neighbors of SU i\u2217. Here, SETXOR(A,B) would return the set of all elements in A or B but not the common elements of bothA andB.\nIn each iteration, we determine the set of SUs which achieve the minimum throughput. Then, we need to search over two setsSSepi\u2217 or S Int i\u2217 to find the best channel for each of these minimum-throughput SUs. Note that allocation of channels in S Inti\u2217 to minimum-throughput SUs can indeed decrease the achievable throughput of their owners (i.e., SUs which own these channels before the allocation). Therefore, channel allocations in step 8 are only performed if the minimum throughput can be improved. In step 9,Scom,tempi is the potential set of channels for SUi. Algorithm 2 terminates when there is no assignment that can improve the minimum throughput. Due to the space constraint, detailed description of step 8 is omitted.\n6) Complexity Analysis:In each iteration of Algorithm 1, the number of minimum-throughput SUs is at mostMs and there are at mostN channel candidates which can be allocated for each of them. Therefore, the complexity involved in each iteration is upper bounded byMsN . We can also determine an upper bound for the number of iterations, which isMsN . This is simple because each SU can be allocated at mostN channels and there areMs SUs. Therefore, the complexity of Algorithm 1 is upper bounded byM2sN\n2. In Algorithm 2, we run Algorithm 1 in the first phase and perform overlapping channel assignments in the second phase. The complexity of this second phase can also be upper-bounded byM2sN\n2. Therefore, the complexity of both Algorithms 1 and 2 can be upper-bounded byO (\nM2sN 2 ) , which is much lower than that\n6\nof the brute-force search algorithm presented in Section II-C.\nIV. N UMERICAL RESULTS\nTo obtain numerical results, we choose the length of control packets as follows: RTS including PHY header 288 bits, CTS including PHY header 240 bits, which correspond totRTS = 48\u00b5s, tCTS = 40\u00b5s for transmission rate of 6 Mbps, which is the basic rate of 802.11a/g standards [14]. Other parameters are chosen as follows: cycle timeTcycle = 3ms; \u03b8 = 20\u00b5s, tSIFS = 28\u00b5s, target collision probability\u01ebP = 0.03; tSEN and tSYN are assumed to be negligible so they are ignored. Note that these values of\u03b8 and tSIFS are typical (e.g., see [10]).\nTo compare the performance of optimal brute-force search and our proposed algorithms, we consider a small network shown in Fig. 2 where we chooseMs = 3 SUs,Mp = 2 PUs and ppij = 0.6 and 0.8. Fig. 3(a) shows that the minimum throughputs achieved by Algs 2 are very close to that obtained the optimal search, which confirms the merit of this lowcomplexity algorithm. Also, the simulation results match the analytical results very well, which validates the proposed throughput analytical model. Figs. 3(b), 4(a), and 4(b) illustrate the minimum throughputs achieved by our proposed\nalgorithms for a larger network shown in Fig. 1. In particular,\nFig. 3(b) shows the minimum throughput versus the number of channels forppij equal to 0.6 and 0.8. This figure confirms that Alg. 2 achieves significantly larger throughput than that due to Alg. 1 thanks to overlapping channel assignments.\nFig. 4(a) illustrates the minimum throughput versusppij . It can be observed that asppij increases, the minimum achievable throughput indeed increases. This figure also shows that the minimum throughput forN = 9 is greater than that for N = 7. This means our proposed algorithms can efficiently exploit available spectrum holes. In Fig. 4(b), we illustrate the throughputs achieved by different SUs to demonstrate the fairness performance. It can be observed that the differencs between the maximum and minimum throughputs under Alg. 2 are much smaller than that due to Alg. 1. This result implies that Alg. 2 not only achieves better throughput but also results in improved fairness compared to Alg. 1.\nV. CONCLUSION\nWe have investigated the fair channel allocation problem in cognitive ad hoc networks. Specifically, we have presented both optimal brute-force search and low-complexity algorithms and analyzed their complexity and throughput performance through analytical and numerical studies.\nREFERENCES\n[1] T. Yucek and H. Arslan, \u201cA survey of spectrum sensing algorithms for cognitive radio applications,\u201dIEEE Commun. Surveys Tutorials,vol. 11, no. 1, pp. 116\u2013130, 2009. [2] H. Su, and X. Zhang, \u201cCross-layer based opportunistic MAC protocols for QoS provisionings over cognitive radio wireless networks,\u201d IEEE J. Sel. Areas Commun., vol. 26, no. 1, pp. 118\u2013129, Jan. 2008. [3] H. Nan, T.-I. Hyon, and S.-J. Yoo, \u201cDistributed coordinated spectrum sharing MAC protocol for cognitive radio,\u201d inIEEE DySPAN\u20192007. [4] C. Cordeiro, and K. Challapali, \u201c C-MAC: A cognitive MAC protocol for multi-channel wireless networks,\u201d inIEEE DySPAN\u20192007. [5] Y.R. Kondareddy, and P. Agrawal, \u201cSynchronized MAC protocol for multi-hop cognitive radio networks,\u201d inProc. IEEE ICC\u20192008. [6] H. Su and X. Zhang, \u201cChannel-hopping based single transceiver MAC for cognitive radio networks,\u201d inProc. CISS\u20192008. [7] M. Timmers, S. Pollin, A. Dejonghe, L. Van der Perre, and F. Catthoor, \u201cA distributed multichannel MAC protocol for multihop cognitive radio networks,\u201d IEEE Trans. Veh. Tech., vol. 59, no. 1, pp. 446\u2013459, Jan. 2010 [8] S. C. Jha, U. Phuyal, M. M. Rashid, and V. K. Bhargava, \u201cDesign of OMC-MAC: An opportunistic multi-channel MAC with QoS provisioning for distributed cognitive radio networks,\u201dIEEE Trans. Wireless Commun.,vol. 10, no. 10, pp. 3414\u20133425 , Oct. 2011. [9] L. T. Tan and L. B. Le, \u201dChannel assignment for throughputmaximization in cognitive radio networks,\u201d inProc. IEEE WCNC\u20192012.\n[10] G. Bianchi, \u201cPerformance analysis of the IEEE 802.11 distributed coordination function,\u201d inIEEE J. Sel. Areas Commun., vol. 18, no. 3, pp. 535-547, Mar. 2000. [11] J. Mo, H. So, and J. Walrand, \u201cComparison of multichannel MAC protocols,\u201d IEEE Trans. Mobile Computing, vol. 7, no. 1, pp. 50\u201365, Jan. 2008. [12] J. Lee and S. Leyffer eds., \u201cMixed integer nonlinear programming,\u201d The IMA Volumes in Mathematics and its Applications, vol. 154, Springer, 2012. [13] L. Tassiulas and S. Sarkar, \u201cMaxmin fair scheduling in wireless ad hoc networks,\u201d IEEE J. Sel. Areas Commun., vol. 23, no. 1, pp. 163\u2013173 , Jan. 2005. [14] 802.11 Standard. Online: http://www.ieee802.org/11"}], "title": "Fair Channel Allocation and Access Design for Cognitive Ad Hoc Networks", "year": 2020}