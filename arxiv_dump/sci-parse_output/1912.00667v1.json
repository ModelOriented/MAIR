{"abstractText": "Microblogging platforms such as Twitter are increasingly being used in event detection. Existing approaches mainly use machine learning models and rely on eventrelated keywords to collect the data for model training. These approaches make strong assumptions on the distribution of the relevant microposts containing the keyword \u2013 referred to as the expectation of the distribution \u2013 and use it as a posterior regularization parameter during model training. Such approaches are, however, limited as they fail to reliably estimate the informativeness of a keyword and its expectation for model training. This paper introduces a Human-AI loop approach to jointly discover informative keywords for model training while estimating their expectation. Our approach iteratively leverages the crowd to estimate both keywordspecific expectation and the disagreement between the crowd and the model in order to discover new keywords that are most beneficial for model training. These keywords and their expectation not only improve the resulting performance but also make the model training process more transparent. We empirically demonstrate the merits of our approach, both in terms of accuracy and interpretability, on multiple real-world datasets and show that our approach improves the state of the art by 24.3%.", "authors": [{"affiliations": [], "name": "Akansha Bhardwaj"}, {"affiliations": [], "name": "Jie Yang"}, {"affiliations": [], "name": "Philippe Cudr\u00e9-Mauroux"}], "id": "SP:c843d6ad8401a2a73464d9c1395aa6212242f8ba", "references": [{"authors": ["Akbari"], "title": "From tweets to wellness: Wellness event detection from twitter streams", "year": 2016}, {"authors": ["F. Atefeh"], "title": "and Khreich", "venue": "W.", "year": 2015}, {"authors": ["Haghighi Benson", "E. Barzilay 2011] Benson", "A. Haghighi", "R. Barzilay"], "title": "Event discovery in social media feeds", "year": 2011}, {"authors": ["Bhardwaj"], "title": "Event detection on microposts: a comparison of four approaches", "venue": "IEEE TKDE PP:1\u20131", "year": 2019}, {"authors": ["Fry Chambers", "N. McMasters 2018] Chambers", "B. Fry", "J. McMasters"], "title": "Detecting denialof-service attacks from social media text: Applying nlp to computer", "year": 2018}, {"authors": ["S. Chang", "F.M. Harper", "Terveen"], "title": "L", "venue": "G.", "year": 2016}, {"authors": ["Teng Chang", "C.-Y. Zhang 2016] Chang", "Z. Teng", "Y. Zhang"], "title": "Expectation-regulated neural model for event mention extraction", "year": 2016}, {"authors": ["Chierichetti, F.", "Kleinberg"], "title": "J", "venue": "M.; Kumar, R.; Mahdian, M.; and Pandey, S.", "year": 2014}, {"authors": ["A.P. Dawid", "Skene"], "title": "A", "venue": "M.", "year": 1979}, {"authors": ["Mitra Diaz", "F. Craswell 2016] Diaz", "B. Mitra", "N. Craswell"], "title": "Query expansion with locally-trained word embeddings", "venue": "arXiv preprint arXiv:1605.07891", "year": 2016}, {"authors": ["F. Doshi-Velez"], "title": "and Kim", "venue": "B.", "year": 2017}, {"authors": ["Mann Druck", "G. McCallum 2008] Druck", "G. Mann", "A. McCallum"], "title": "Learning from labeled features using generalized expectation criteria", "year": 2008}, {"authors": ["D.P. Kingma"], "title": "and Ba", "venue": "J.", "year": 2014}, {"authors": ["Konovalov"], "title": "Learning to extract events from knowledge base revisions", "year": 2017}, {"authors": ["S. Krishnan", "J. Wang", "E. Wu", "Franklin"], "title": "M", "venue": "J.; and Goldberg, K.", "year": 2016}, {"authors": ["Shtok Kuzi", "S. Kurland 2016] Kuzi", "A. Shtok", "O. Kurland"], "title": "Query expansion using word embeddings", "venue": "In CIKM", "year": 2016}, {"authors": ["K. Lee", "A. Qadir", "Hasan"], "title": "S", "venue": "A.; Datla, V.; Prakash, A.; Liu, J.; and Farri, O.", "year": 2017}, {"authors": ["Lipton"], "title": "Z", "venue": "C.", "year": 2016}, {"authors": ["G.S. Mann"], "title": "and McCallum", "venue": "A.", "year": 2007}, {"authors": ["McDonnell"], "title": "Why is that relevant? collecting annotator rationales for relevance judgments", "venue": "HCOMP", "year": 2016}, {"authors": ["A.J. McMinn", "Y. Moshfeghi", "Jose"], "title": "J", "venue": "M.", "year": 2013}, {"authors": ["Mottaghi"], "title": "Analyzing semantic segmentation using hybrid human-machine crfs", "year": 2013}, {"authors": ["S.A. Myers"], "title": "and Leskovec", "venue": "J.", "year": 2014}, {"authors": ["Nushi"], "title": "On human intellect and machine failures: Troubleshooting integrative machine learning systems", "year": 2017}, {"authors": ["D. Parikh"], "title": "and Zitnick", "venue": "C.", "year": 2011}, {"authors": ["Ribeiro"], "title": "M", "venue": "T.; Singh, S.; and Guestrin, C.", "year": 2016}, {"authors": ["Ritter"], "title": "Open domain event extraction from twitter", "year": 2012}, {"authors": ["Ritter"], "title": "Weakly supervised extraction of computer security events from twitter", "year": 2015}, {"authors": ["Mehrotra Sadri", "M. Yu 2016] Sadri", "S. Mehrotra", "Y. Yu"], "title": "Online adaptive topic focused tweet acquisition", "venue": "In CIKM", "year": 2016}, {"authors": ["Okazaki Sakaki", "T. Matsuo 2010] Sakaki", "M. Okazaki", "Y. Matsuo"], "title": "Earthquake shakes twitter users: real-time event detection", "year": 2010}, {"authors": ["Vaughan"], "title": "J", "venue": "W.", "year": 2018}, {"authors": ["Y. Yan", "R. Rosales", "G. Fung", "Dy"], "title": "J", "venue": "G.", "year": 2011}, {"authors": ["Yang"], "title": "Leveraging crowdsourcing data for deep active learning an application: Learning intents in alexa", "year": 2018}, {"authors": ["Yang"], "title": "Scalpel-cd: leveraging crowdsourcing and deep probabilistic modeling for debugging noisy training data", "year": 2019}, {"authors": ["Zheng"], "title": "Truth inference in crowdsourcing: is the problem solved? PVLDB", "year": 2017}], "sections": [{"heading": "1 Introduction", "text": "Event detection on microblogging platforms such as Twitter aims to detect events preemptively. A main task in event detection is detecting events of predetermined types (Atefeh and Khreich 2015), such as concerts or controversial events based on microposts matching specific event descriptions. This task has extensive applications ranging from cyber security (Ritter et al. 2015; Chambers, Fry, and McMasters 2018) to political elections (Konovalov et al. 2017) or public health (Akbari et al. 2016; Lee et al. 2017). Due to the high ambiguity and inconsistency of the terms used in microposts, event detection is generally performed though statistical machine learning models, which require a labeled dataset for model training. Data labeling is, however, a long, laborious, and usually costly process. For the case of micropost classification, though positive labels can be collected (e.g.,\n\u2217Work performed before joining Amazon.\nusing specific hashtags, or event-related date-time information), there is no straightforward way to generate negative labels useful for model training. To tackle this lack of negative labels and the significant manual efforts in data labeling, Ritter et al. (2015; 2017) introduced a weak supervision based learning approach, which uses only positively labeled data, accompanied by unlabeled examples by filtering microposts that contain a certain keyword indicative of the event type under consideration (e.g., \u2018hack\u2019 for cyber security).\nAnother key technique in this context is expectation regularization (Mann and McCallum 2007; Druck, Mann, and McCallum 2008; Ritter et al. 2015). Here, the estimated proportion of relevant microposts in an unlabeled dataset containing a keyword is given as a keyword-specific expectation. This expectation is used in the regularization term of the model\u2019s objective function to constrain the posterior distribution of the model predictions. By doing so, the model is trained with an expectation on its prediction for microposts that contain the keyword. Such a method, however, suffers from two key problems:\n1. Due to the unpredictability of event occurrences and the constantly changing dynamics of users\u2019 posting frequency (Myers and Leskovec 2014), estimating the expectation associated with a keyword is a challenging task, even for domain experts;\n2. The performance of the event detection model is constrained by the informativeness of the keyword used for model training. As of now, we lack a principled method for discovering new keywords and improve the model performance.\nTo address the above issues, we advocate a human-AI loop approach for discovering informative keywords and estimating their expectations reliably. Our approach iteratively leverages 1) crowd workers for estimating keywordspecific expectations, and 2) the disagreement between the model and the crowd for discovering new informative keywords. More specifically, at each iteration after we obtain a keyword-specific expectation from the crowd, we train the model using expectation regularization and select those keyword-related microposts for which the model\u2019s prediction disagrees the most with the crowd\u2019s expectation; such microposts are then presented to the crowd to identify new keywords that best explain the disagreement. By doing so,\nar X\niv :1\n91 2.\n00 66\n7v 1\n[ cs\n.I R\n] 2\nD ec\n2 01\n9\nour approach identifies new keywords which convey more relevant information with respect to existing ones, thus effectively boosting model performance. By exploiting the disagreement between the model and the crowd, our approach can make efficient use of the crowd, which is of critical importance in a human-in-the-loop context (Yan et al. 2011; Yang et al. 2018). An additional advantage of our approach is that by obtaining new keywords that improve model performance over time, we are able to gain insight into how the model learns for specific event detection tasks. Such an advantage is particularly useful for event detection using complex models, e.g., deep neural networks, which are intrinsically hard to understand (Ribeiro, Singh, and Guestrin 2016; Doshi-Velez and Kim 2017).\nAn additional challenge in involving crowd workers is that their contributions are not fully reliable (Vaughan 2018). In the crowdsourcing literature, this problem is usually tackled with probabilistic latent variable models (Dawid and Skene 1979; Whitehill et al. 2009; Zheng et al. 2017), which are used to perform truth inference by aggregating a redundant set of crowd contributions. Our human-AI loop approach improves the inference of keyword expectation by aggregating contributions not only from the crowd but also from the model. This, however, comes with its own challenge as the model\u2019s predictions are further dependent on the results of expectation inference, which is used for model training. To address this problem, we introduce a unified probabilistic model that seamlessly integrates expectation inference and model training, thereby allowing the former to benefit from the latter while resolving the inter-dependency between the two.\nTo the best of our knowledge, we are the first to propose a human-AI loop approach that iteratively improves machine learning models for event detection. In summary, our work makes the following key contributions:\n\u2022 A novel human-AI loop approach for micropost event detection that jointly discovers informative keywords and estimates their expectation;\n\u2022 A unified probabilistic model that infers keyword expectation and simultaneously performs model training;\n\u2022 An extensive empirical evaluation of our approach on multiple real-world datasets demonstrating that our approach significantly improves the state of the art by an average of 24.3% AUC.\nThe rest of this paper is organized as follows. First, we present our human-AI loop approach in Section 2. Subsequently, we introduce our proposed probabilistic model in Section 3. The experimental setup and results are presented in Section 4. Finally, we briefly cover related work in Section 5 before concluding our work in Section 6."}, {"heading": "2 The Human-AI Loop Approach", "text": "Given a set of labeled and unlabeled microposts, our goal is to extract informative keywords and estimate their expectations in order to train a machine learning model. To achieve this goal, our proposed human-AI loop approach\ncomprises two crowdsourcing tasks, i.e., micropost classification followed by keyword discovery, and a unified probabilistic model for expectation inference and model training. Figure 1 presents an overview of our approach. Next, we describe our approach from a process-centric perspective.\nFollowing previous studies (Ritter et al. 2015; Chang, Teng, and Zhang 2016; Chambers, Fry, and McMasters 2018), we collect a set of unlabeled microposts U from a microblogging platform and post-filter, using an initial (set of) keyword(s), those microposts that are potentially relevant to an event category. Then, we collect a set of event-related microposts (i.e., positively labeled microposts)L, post-filtering with a list of seed events. U andL are used together to train a discriminative model (e.g., a deep neural network) for classifying the relevance of microposts to an event. We denote the target model as p\u03b8(y|x), where \u03b8 is the model parameter to be learned and y is the label of an arbitrary micropost, represented by a bag-of-words vector x. Our approach iterates several times t = {1, 2, . . .} until the performance of the target model converges. Each iteration starts from the initial keyword(s) or the new keyword(s) discovered in the previous iteration. Given such a keyword, denoted by w(t), the iteration starts by sampling microposts containing the keyword from U , followed by dynamically creating micropost classification tasks and publishing them on a crowdsourcing platform. Micropost Classification. The micropost classification task requires crowd workers to label the selected microposts into two classes: event-related and non event-related. In particular, workers are given instructions and examples to differentiate event-instance related microposts and general eventcategory related microposts. Consider, for example, the following microposts in the context of Cyber attack events, both containing the keyword \u2018hack\u2019:\nCredit firm Equifax says 143m Americans\u2019 social security numbers exposed in hack\nThis micropost describes an instance of a cyber attack event that the target model should identify. This is, therefore, an event-instance related micropost and should be considered as a positive example. Contrast this with the following example:\nCompanies need to step their cyber security up\nThis micropost, though related to cyber security in general, does not mention an instance of a cyber attack event, and is of no interest to us for event detection. This is an example of a general event-category related micropost and should be considered as a negative example.\nIn this task, each selected micropost is labeled by multiple crowd workers. The annotations are passed to our probabilistic model for expectation inference and model training. Expectation Inference & Model Training. Our probabilistic model takes crowd-contributed labels and the model trained in the previous iteration as input. As output, it generates a keyword-specific expectation, denoted as e(t), and an improved version of the micropost classification model, denoted as p\u03b8(t)(y|x). The details of our probabilistic model are given in Section 3.\nKeyword Discovery. The keyword discovery task aims at discovering a new keyword (or a set of keywords) that is most informative for model training with respect to existing keywords. To this end, we first apply the current model p\u03b8(t)(y|x) on the unlabeled microposts U . For those that contain the keyword w(t), we calculate the disagreement between the model predictions and the keyword-specific expectation e(t):\nDisagreement(xi) = |p\u03b8(t)(yi|xi)\u2212 e(t)|, (1)\nand select the ones with the highest disagreement for keyword discovery. These selected microposts are supposed to contain information that can explain the disagreement between the model prediction and keyword-specific expectation, and can thus provide information that is most different from the existing set of keywords for model training.\nFor instance, our study shows that the expectation for the keyword \u2018hack\u2019 is 0.20, which means only 20% of the initial set of microposts retrieved with the keyword are eventrelated. A micropost selected with the highest disagreement (Eq. 1), whose likelihood of being event-related as predicted by the model is 99.9%, is shown as an example below:"}, {"heading": "RT @xxx: Hong Kong securities brokers hit by cyber attacks, may face more: regulator #cyber #security #hacking https://t.co/rC1s9CB", "text": "This micropost contains keywords that can better indicate the relevance to a cyber security event than the initial keyword \u2018hack\u2019, e.g., \u2018securities\u2019, \u2018hit\u2019, and \u2018attack\u2019.\nNote that when the keyword-specific expectation e(t) in Equation 1 is high, the selected microposts will be the ones that contain keywords indicating the irrelevance of the microposts to an event category. Such keywords are also useful for model training as they help improve the model\u2019s ability to identify irrelevant microposts.\nTo identify new keywords in the selected microposts, we again leverage crowdsourcing, as humans are typically bet-\nter than machines at providing specific explanations (McDonnell et al. 2016; Chang, Harper, and Terveen 2016). In the crowdsourcing task, workers are first asked to find those microposts where the model predictions are deemed correct. Then, from those microposts, workers are asked to find the keyword that best indicates the class of the microposts as predicted by the model. The keyword most frequently identified by the workers is then used as the initial keyword for the following iteration. In case multiple keywords are selected, e.g., the top-N frequent ones, workers will be asked to perform N micropost classification tasks for each keyword in the next iteration, and the model training will be performed on multiple keyword-specific expectations."}, {"heading": "3 Unified Probabilistic Model", "text": "This section introduces our probabilistic model that infers keyword expectation and trains the target model simultaneously. We start by formalizing the problem and introducing our model, before describing the model learning method.\nProblem Formalization. We consider the problem at iteration t where the corresponding keyword is w(t). In the current iteration, let U (t) \u2282 U denote the set of all microposts containing the keyword andM(t) = {xm}Mm=1 \u2282 U (t) be the randomly selected subset of M microposts labeled by N crowd workers C = {cn}Nn=1. The annotations form a matrix A \u2208 RM\u00d7N where Amn is the label for the micropost xm contributed by crowd worker cn. Our goal is to infer the keyword-specific expectation e(t) and train the target model by learning the model parameter \u03b8(t). An additional parameter of our probabilistic model is the reliability of crowd workers, which is essential when involving crowdsourcing. Following Dawid and Skene (Dawid and Skene 1979; Zheng et al. 2017), we represent the annotation reliability of worker cn by a latent confusion matrix \u03c0(n), where the rs-th element \u03c0(n)rs denotes the probability of cn labeling a micropost as class r given the true class s."}, {"heading": "Expectation as Model Posterior", "text": "First, we introduce an expectation regularization technique for the weakly supervised learning of the target model p\u03b8(t)(y|x). In this setting, the objective function of the target model is composed of two parts, corresponding to the labeled microposts L and the unlabeled ones U .\nThe former part aims at maximizing the likelihood of the labeled microposts:\nJ1 = L\u2211 i=1 log p\u03b8(yi|xi) + log p\u03c3(\u03b8), (2)\nwhere we assume that \u03b8 is generated from a prior distribution (e.g., Laplacian or Gaussian) parameterized by \u03c3.\nTo leverage unlabeled data for model training, we make use of the expectations of existing keywords, i.e., {(w(1), e(1)), . . . , (w(t\u22121), e(t\u22121)), (w(t), e(t))} (Note that e(t) is inferred), as a regularization term to constrain model training. To do so, we first give the model\u2019s expectation for each keyword w(k) (1 \u2264 k \u2264 t) as follows:\nEx\u223cU(k)(y) = 1 |U (k)| \u2211\nxi\u2208U(k) p\u03b8(yi|xi), (3)\nwhich denotes the empirical expectation of the models posterior predictions on the unlabeled microposts U (k) containing keyword w(k). Expectation regularization can then be formulated as the regularization of the distance between the Bernoulli distribution parameterized by the model\u2019s expectation and the expectation of the existing keyword:\nJ2 = \u2212\u03bb t\u2211\nk=1\nDKL[Ber(e (k))\u2016Ber(Ex\u223cU(k)(y))], (4)\nwhere DKL[\u00b7\u2016\u00b7] denotes the KL-divergence between the Bernoulli distributions Ber(e(k)) and Ber(Ex\u223cU(k)(y)), and \u03bb controls the strength of expectation regularization."}, {"heading": "Expectation as Class Prior", "text": "To learn the keyword-specific expectation e(t) and the crowd worker reliability \u03c0(n) (1 \u2264 n \u2264 N ), we model the likelihood of the crowd-contributed labels A as a function of these parameters. In this context, we view the expectation as the class prior, thus performing expectation inference as the learning of the class prior. By doing so, we connect expectation inference with model training.\nSpecifically, we model the likelihood of an arbitrary crowd-contributed label Amn as a mixture of multinomials where the prior is the keyword-specific expectation e(t):\np(Amn) = K\u2211 s e(t)s \u03c0 (n) rs , (5)\nwhere e(t)s is the probability of the ground truth label being s given the keyword-specific expectation as the class prior; K is the set of possible ground truth labels (binary\nin our context); and r = Amn is the crowd-contributed label. Then, for an individual micropost xm, the likelihood of crowd-contributed labels Am: is given by:\np(Am:) = K\u2211 s e(t)s N\u220f n=1 \u03c0(n)rs . (6)\nTherefore, the objective function for maximizing the likelihood of the entire annotation matrix A can be described as:\nJ3 = M\u2211 m=1 log p(Am:). (7)"}, {"heading": "Unified Probabilistic Model", "text": "Integrating model training with expectation inference, the overall objective function of our proposed model is given by: J = J1 + J2 + J3. (8) Figure 2 depicts a graphical representation of our model, which combines the target model for training (on the left) with the generative model for crowd-contributed labels (on the right) through a keyword-specific expectation. Model Learning. Due to the unknown ground truth labels of crowd-annotated microposts (ym in Figure 2), we resort to expectation maximization for model learning. The learning algorithm iteratively takes two steps: the E-step and the M-step. The E-step infers the ground truth labels given the current model parameters. The M-step updates the model parameters, including the crowd reliability parameters \u03c0(n) (1 \u2264 n \u2264 N ), the keyword-specific expectation e(t), and the parameter of the target model \u03b8(t). The E-step and the crowd parameter update in the M-step are similar to the DawidSkene model (Dawid and Skene 1979). The keyword expectation is inferred by taking into account both the crowdcontributed labels and the model prediction:\ne(t) \u221d 1 M M\u2211 m=1 ym \u00d7 1 |U (t)| \u2211 xi\u2208U(t) p\u03b8(yi|xi). (9)\nThe parameter of the target model is updated by gradient descent. For example, when the target model to be trained is a deep neural network, we use back-propagation with gradient descent to update the weight matrices."}, {"heading": "Dataset #Positive #Unlabeled #Test", "text": ""}, {"heading": "4 Experiments and Results", "text": "This section presents our experimental setup and results for evaluating our approach. We aim at answering the following questions:\n\u2022 Q1: How effectively does our proposed human-AI loop approach enhance the state-of-the-art machine learning models for event detection? \u2022 Q2: How well does our keyword discovery method work compare to existing keyword expansion methods? \u2022 Q3: How effective is our approach using crowdsourcing at obtaining new keywords compared with an approach labelling microposts for model training under the same cost? \u2022 Q4: How much benefit does our unified probabilistic model bring compared to methods that do not take crowd reliability into account?"}, {"heading": "Experimental Setup", "text": "Datasets. We perform our experiments with two predetermined event categories: cyber security (CyberAttack) and death of politicians (PoliticianDeath). These event categories are chosen as they are representative of important event types that are of interest to many governments and companies. The need to create our own dataset was motivated by the lack of public datasets for event detection on microposts. The few available datasets do not suit our requirements. For example, the publicly available Events2012 Twitter dataset (McMinn, Moshfeghi, and Jose 2013) contains generic event descriptions such as Politics, Sports, Culture etc. Our work targets more specific event categories (Bhardwaj et al. 2019). Following previous studies (Ritter et al. 2015), we collect event-related microposts from Twitter using 11 and 8 seed events (see Section 2) for CyberAttack and PoliticianDeath, respectively. Unlabeled microposts are collected by using the keyword \u2018hack\u2019 for CyberAttack, while for PoliticianDeath, we use a set of keywords related to \u2018politician\u2019 and \u2018death\u2019 (such as \u2018bureaucrat\u2019, \u2018dead\u2019 etc.) For each dataset, we randomly select 500 tweets from the unlabeled subset and manually label them for evaluation. Table 1 shows key statistics from our two datasets. Comparison Methods. To demonstrate the generality of our approach on different event detection models, we consider Logistic Regression (LR) (Ritter et al. 2015) and Multilayer Perceptron (MLP) (Chambers, Fry, and McMasters 2018) as the target models. As the goal of our experiments is to demonstrate the effectiveness of our approach as a new model training technique, we use these widely used models. Also, we note that in our case other neural network models with more complex network architectures for event detection, such as the bi-directional LSTM (Chang, Teng, and\nZhang 2016), turn out to be less effective than a simple feedforward network. For both LR and MLP, we evaluate our proposed human-AI loop approach for keyword discovery and expectation estimation by comparing against the weakly supervised learning method proposed by Ritter et al. (2015) and Chang, Teng, and Zhang (2016) where only one initial keyword is used with an expectation estimated by an individual expert. Parameter Settings. We empirically set optimal parameters based on a held-out validation set that contains 20% of the test data. These include the hyperparamters of the target model, those of our proposed probabilistic model, and the parameters used for training the target model. We explore MLP with 1, 2 and 3 hidden layers and apply a grid search in 32, 64, 128, 256, 512 for the dimension of the embeddings and that of the hidden layers. For the coefficient of expectation regularization, we follow Mann and McCallum (2007) and set it to \u03bb = 10\u00d7 #labeled examples. For model training, we use the Adam (Kingma and Ba 2014) optimization algorithm for both models. Evaluation. Following Ritter et al. (2015) and Konovalov et al. (2017), we use accuracy and area under the precisionrecall curve (AUC) metrics to measure the performance of our proposed approach. We note that due to the imbalance in our datasets (20% positive microposts in CyberAttack and 27% in PoliticianDeath), accuracy is dominated by negative examples; AUC, in comparison, better characterizes the discriminative power of the model. Crowdsourcing. We chose Level 3 workers on the FigureEight1 crowdsourcing platform for our experiments. The inter-annotator agreement in micropost classification is taken into account through the EM algorithm. For keyword discovery, we filter keywords based on the frequency of the keyword being selected by the crowd. In terms of costeffectiveness, our approach is motivated from the fact that crowdsourced data annotation can be expensive, and is thus designed with minimal crowd involvement. For each iteration, we selected 50 tweets for keyword discovery and 50 tweets for micropost classification per keyword. For a dataset with 80k tweets (e.g., CyberAttack), our approach only requires to manually inspect 800 tweets (for 8 keywords), which is only 1% of the entire dataset."}, {"heading": "Results of our Human-AI Loop (Q1)", "text": "Table 2 reports the evaluation of our approach on both the CyberAttack and PoliticianDeath event categories. Our approach is configured such that each iteration starts with 1 new keyword discovered in the previous iteration.\nOur approach improves LR by 5.17% (Accuracy) and 18.38% (AUC), and MLP by 10.71% (Accuracy) and 30.27% (AUC) on average. Such significant improvements clearly demonstrate that our approach is effective at improving model performance. We observe that the target models generally converge between the 7th and 9th iteration on both datasets when performance is measured by AUC. The performance can slightly degrade when the models are further\n1https://www.figure-eight.com/\nTable 2: Performance of the target models trained by our proposed human-AI loop approach on the experimental datasets at different iterations. Results are given in percentage.\nDataset Method Metric Iteration1 2 3 4 5 6 7 8 9\nCyber Attack LR AUC 66.69 72.67 69.02 69.18 70.41 70.22 70.66 70.66 70.53Accuracy 71.04 74.07 74.07 74.07 72.72 72.72 72.72 72.72 72.39\nMLP AUC 60.79 66.06 70.5 72.83 76.06 75.28 75.98 75.60 75.81Accuracy 70.37 73.06 73.06 73.40 75.42 75.08 75.42 74.41 75.75\nPolitician Death LR AUC 49.37 60.69 61.32 63.45 62.71 62.72 63.07 63.50 64.68Accuracy 76.53 82.65 83.67 83.67 82.99 83.33 82.99 82.99 82.99\nMLP AUC 56.81 74.20 72.60 73.80 72.59 73.00 76.11 76.52 77.17Accuracy 76.53 87.07 86.05 87.07 85.71 86.05 86.39 87.07 87.07\ntrained for more iterations on both datasets. This is likely due to the fact that over time, the newly discovered keywords entail lower novel information for model training. For instance, for the CyberAttack dataset the new keyword in the 9th iteration \u2018election\u2019 frequently co-occurs with the keyword \u2018russia\u2019 in the 5th iteration (in microposts that connect Russian hackers with US elections), thus bringing limited new information for improving the model performance. As a side remark, we note that the models converge faster when performance is measured by accuracy. Such a comparison result confirms the difference between the metrics and shows the necessity for more keywords to discriminate event-related microposts from non event-related ones."}, {"heading": "Comparative Results on Keyword Discovery (Q2)", "text": "Figure 3 shows the evaluation of our approach when discovering new informative keywords for model training (see Section 2: Keyword Discovery). We compare our human-AI collaborative way of discovering new keywords against a query expansion (QE) approach (Diaz, Mitra, and Craswell 2016; Kuzi, Shtok, and Kurland 2016) that leverages word embeddings to find similar words in the latent semantic space. Specifically, we use pre-trained word embeddings based on a large Google News dataset2 for query expansion. For instance, the top keywords resulting from QE for \u2018politician\u2019 are, \u2018deputy\u2019,\u2018ministry\u2019,\u2018secretary\u2019, and \u2018minister\u2019. For each of these keywords, we use the crowd to label a set of tweets and obtain a corresponding expectation.\nWe observe that our approach consistently outperforms QE by an average of 4.62% and 52.58% AUC on CyberAttack and PoliticianDeath, respectively. The large gap between the performance improvements for the two datasets is mainly due to the fact that microposts that are relevant for PoliticianDeath are semantically more complex than those for CyberAttack, as they encode noun-verb relationship (e.g., \u201cthe king of ... died ...\u201d) rather than a simple verb (e.g., \u201c... hacked.\u201d) for the CyberAttack microposts. QE only finds synonyms of existing keywords related to either \u2018politician\u2019 or \u2018death\u2019, however cannot find a meaningful keyword that fully characterizes the death of a politician. For instance, QE finds the keywords \u2018kill\u2019 and \u2018murder\u2019, which are se-\n2https://code.google.com/archive/p/word2vec/\n(a) CyberAttack\n(b) PoliticianDeath\nFigure 3: Comparison between our keyword discovery method and query expansion method for MLP (similar results for LR).\nmantically close to \u2018death\u2019 but are not specifically relevant to the death of a politician. Unlike QE, our approach identifies keywords that go beyond mere synonyms and that are more directly related to the end task, i.e., discriminating event-related microposts from non related ones. Examples are \u2018demise\u2019 and \u2018condolence\u2019. As a remark, we note that in Figure 3(b), the increase in QE performance on PoliticianDeath is due to the keywords \u2018deputy\u2019 and \u2018minister\u2019, which happen to be highly indicative of the death of a politician in our dataset; these keywords are also identified by our approach."}, {"heading": "Cost-Effectiveness Results (Q3)", "text": "To demonstrate the cost-effectiveness of using crowdsourcing for obtaining new keywords and consequently, their expectations, we compare the performance of our approach with an approach using crowdsourcing to only label microposts for model training at the same cost. Specifically, we\nconducted an additional crowdsourcing experiment where the same cost used for keyword discovery in our approach is used to label additional microposts for model training. These newly labeled microposts are used with the microposts labeled in the micropost classification task of our approach (see Section 2: Micropost Classification) and the expectation of the initial keyword to train the model for comparison. The model trained in this way increases AUC by 0.87% for CyberAttack, and by 1.06% for PoliticianDeath; in comparison, our proposed approach increases AUC by 33.42% for PoliticianDeath and by 15.23% for CyberAttack over the baseline presented by Ritter et al.). These results show that using crowdsourcing for keyword discovery is significantly more cost-effective than simply using crowdsourcing to get additional labels when training the model.\nExpectation Inference Results (Q4) To investigate the effectiveness of our expectation inference method, we compare it against a majority voting approach, a strong baseline in truth inference (Zheng et al. 2017). Figure 4 shows the result of this evaluation. We observe that our approach results in better models for both CyberAttack and PoliticianDeath. Our manual investigation reveals that workers\u2019 annotations are of high reliability, which explains the relatively good performance of majority voting. Despite limited margin for improvement, our method of expectation inference improves the performance of majority voting by 0.4% and 1.19% AUC on CyberAttack and PoliticianDeath, respectively."}, {"heading": "5 Related Work", "text": "Event Detection. The techniques for event extraction from microblogging platforms can be classified according to their domain specificity and their detection method (Atefeh and Khreich 2015). Early works mainly focus on open domain event detection (Benson, Haghighi, and Barzilay 2011; Ritter et al. 2012; Chierichetti et al. 2014). Our work falls into the category of domain-specific event detection (Bhardwaj et al. 2019), which has drawn increasing attention due to its relevance for various applications such as cyber security (Ritter et al. 2015; Chambers, Fry, and McMasters 2018) and public health (Akbari et al. 2016; Lee et al. 2017). In terms of technique, our proposed detection method is related to the recently proposed weakly supervised learning methods (Ritter et al. 2015; Chang, Teng, and Zhang 2016; Konovalov et al. 2017). This comes in contrast with fullysupervised learning methods, which are often limited by the size of the training data (e.g., a few hundred examples) (Sakaki, Okazaki, and Matsuo 2010; Sadri, Mehrotra, and Yu 2016). Human-in-the-Loop Approaches. Our work extends weakly supervised learning methods by involving humans in the loop (Vaughan 2018). Existing human-in-the-loop approaches mainly leverage crowds to label individual data instances (Yan et al. 2011; Yang et al. 2018) or to debug the training data (Krishnan et al. 2016; Yang et al. 2019) or components (Parikh and Zitnick 2011; Mottaghi et al. 2013; Nushi et al. 2017) of a machine learning system. Unlike\nthese works, we leverage crowd workers to label sampled microposts in order to obtain keyword-specific expectations, which can then be generalized to help classify microposts containing the same keyword, thus amplifying the utility of the crowd. Our work is further connected to the topic of interpretability and transparency of machine learning models (Ribeiro, Singh, and Guestrin 2016; Lipton 2016; Doshi-Velez and Kim 2017), for which humans are increasingly involved, for instance for post-hoc evaluations of the model\u2019s interpretability. In contrast, our approach directly solicits informative keywords from the crowd for model training, thereby providing human-understandable explanations for the improved model."}, {"heading": "6 Conclusion", "text": "In this paper, we presented a new human-AI loop approach for keyword discovery and expectation estimation to better train event detection models. Our approach takes advantage of the disagreement between the crowd and the model to discover informative keywords and leverages the joint power of the crowd and the model in expectation inference. We evaluated our approach on real-world datasets and showed that it significantly outperforms the state of the art and that it is particularly useful for detecting events where relevant microposts are semantically complex, e.g., the death of a politician. As future work, we plan to parallelize the crowdsourcing tasks and optimize our pipeline in order to use our event detection approach in real-time."}, {"heading": "7 Acknowledgements", "text": "This project has received funding from the Swiss National Science Foundation (grant #407540 167320 Tighten-it-All) and from the European Research Council (ERC) under the\nEuropean Union\u2019s Horizon 2020 research and innovation programme (grant agreement 683253/GraphInt)."}], "title": "A Human-AI Loop Approach for Joint Keyword Discovery and Expectation Estimation in Micropost Event Detection", "year": 2019}