{
  "abstractText": "As machine learning algorithms are increasingly applied to high impact yet high risk tasks, such as medical diagnosis or autonomous driving, it is critical that researchers can explain how such algorithms arrived at their predictions. In recent years, a number of image saliency methods have been developed to summarize where highly complex neural networks \u201clook\u201d in an image for evidence for their predictions. However, these techniques are limited by their heuristic nature and architectural constraints. In this paper, we make two main contributions: First, we propose a general framework for learning different kinds of explanations for any black box algorithm. Second, we specialise the framework to find the part of an image most responsible for a classifier decision. Unlike previous works, our method is model-agnostic and testable because it is grounded in explicit and interpretable image perturbations.",
  "authors": [
    {
      "affiliations": [],
      "name": "Ruth C. Fong"
    },
    {
      "affiliations": [],
      "name": "Andrea Vedaldi"
    }
  ],
  "id": "SP:9bd8ed5614779826bf8e0aee0fc41bb9c8ec1b4f",
  "references": [
    {
      "authors": [
        "S. Bach",
        "A. Binder",
        "G. Montavon",
        "F. Klauschen",
        "K.-R. M\u00fcller",
        "W. Samek"
      ],
      "title": "On pixel-wise explanations for nonlinear classifier decisions by layer-wise relevance propagation",
      "venue": "PloS one,",
      "year": 2015
    },
    {
      "authors": [
        "C. Cao",
        "X. Liu",
        "Y. Yang",
        "Y. Yu",
        "J. Wang",
        "Z. Wang",
        "Y. Huang",
        "L. Wang",
        "C. Huang",
        "W. Xu"
      ],
      "title": "Look and think twice: Capturing top-down visual attention with feedback convolutional neural networks",
      "venue": "In Proceedings of the IEEE International Conference on Computer Vision,",
      "year": 2015
    },
    {
      "authors": [
        "D. Kingma",
        "J. Ba"
      ],
      "title": "Adam: A method for stochastic optimization",
      "venue": "arXiv preprint arXiv:1412.6980,",
      "year": 2014
    },
    {
      "authors": [
        "A. Krizhevsky",
        "I. Sutskever",
        "G.E. Hinton"
      ],
      "title": "Imagenet classification with deep convolutional neural networks",
      "venue": "In Advances in neural information processing systems,",
      "year": 2012
    },
    {
      "authors": [
        "A. Kurakin",
        "I. Goodfellow",
        "S. Bengio"
      ],
      "title": "Adversarial examples in the physical world",
      "venue": "arXiv preprint arXiv:1607.02533,",
      "year": 2016
    },
    {
      "authors": [
        "T.-Y. Lin",
        "M. Maire",
        "S. Belongie",
        "J. Hays",
        "P. Perona",
        "D. Ramanan",
        "P. Doll\u00e1r",
        "C.L. Zitnick"
      ],
      "title": "Microsoft coco: Common objects in context",
      "venue": "In European conference on computer vision,",
      "year": 2014
    },
    {
      "authors": [
        "A. Mahendran",
        "A. Vedaldi"
      ],
      "title": "Understanding deep image representations by inverting them",
      "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "year": 2015
    },
    {
      "authors": [
        "A. Mahendran",
        "A. Vedaldi"
      ],
      "title": "Salient deconvolutional networks. In European Conference on Computer Vision, pages 120\u2013135",
      "venue": "Springer International Publishing,",
      "year": 2016
    },
    {
      "authors": [
        "A. Mahendran",
        "A. Vedaldi"
      ],
      "title": "Visualizing deep convolutional neural networks using natural pre-images",
      "venue": "International Journal of Computer Vision,",
      "year": 2016
    },
    {
      "authors": [
        "A. Nguyen",
        "J. Yosinski",
        "J. Clune"
      ],
      "title": "Deep neural networks are easily fooled: High confidence predictions for unrecognizable images",
      "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "year": 2015
    },
    {
      "authors": [
        "D. Novotny",
        "D. Larlus",
        "A. Vedaldi"
      ],
      "title": "I have seen enough: Transferring parts across categories",
      "venue": "In Proceedings of the British Machine Vision Conference (BMVC),",
      "year": 2016
    },
    {
      "authors": [
        "M.T. Ribeiro",
        "S. Singh",
        "C. Guestrin"
      ],
      "title": "Why should i trust you?: Explaining the predictions of any classifier",
      "venue": "In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,",
      "year": 2016
    },
    {
      "authors": [
        "O. Russakovsky",
        "J. Deng",
        "H. Su",
        "J. Krause",
        "S. Satheesh",
        "S. Ma",
        "Z. Huang",
        "A. Karpathy",
        "A. Khosla",
        "M. Bernstein"
      ],
      "title": "Imagenet large scale visual recognition challenge",
      "venue": "International Journal of Computer Vision,",
      "year": 2015
    },
    {
      "authors": [
        "R.R. Selvaraju",
        "A. Das",
        "R. Vedantam",
        "M. Cogswell",
        "D. Parikh",
        "D. Batra"
      ],
      "title": "Grad-cam: Why did you say that? visual explanations from deep networks via gradient-based localization",
      "venue": "arXiv preprint arXiv:1610.02391,",
      "year": 2016
    },
    {
      "authors": [
        "K. Simonyan",
        "A. Vedaldi",
        "A. Zisserman"
      ],
      "title": "Deep inside convolutional networks: Visualising image classification models and saliency maps",
      "venue": "In Proc. ICLR,",
      "year": 2014
    },
    {
      "authors": [
        "J.T. Springenberg",
        "A. Dosovitskiy",
        "T. Brox",
        "M. Riedmiller"
      ],
      "title": "Striving for simplicity: The all convolutional net",
      "venue": "arXiv preprint arXiv:1412.6806,",
      "year": 2014
    },
    {
      "authors": [
        "C. Szegedy",
        "W. Liu",
        "Y. Jia",
        "P. Sermanet",
        "S. Reed",
        "D. Anguelov",
        "D. Erhan",
        "V. Vanhoucke",
        "A. Rabinovich"
      ],
      "title": "Going deeper with convolutions",
      "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "year": 2015
    },
    {
      "authors": [
        "R. Turner"
      ],
      "title": "A model explanation system",
      "venue": "In Proc. NIPS Workshop on Black Box Learning and Inference,",
      "year": 2015
    },
    {
      "authors": [
        "M.D. Zeiler",
        "R. Fergus"
      ],
      "title": "Visualizing and understanding convolutional networks",
      "venue": "In European conference on computer vision,",
      "year": 2014
    },
    {
      "authors": [
        "J. Zhang",
        "Z. Lin",
        "J. Brandt",
        "X. Shen",
        "S. Sclaroff"
      ],
      "title": "Topdown neural attention by excitation backprop",
      "venue": "In European Conference on Computer Vision,",
      "year": 2016
    },
    {
      "authors": [
        "B. Zhou",
        "A. Khosla",
        "A. Lapedriza",
        "A. Oliva",
        "A. Torralba"
      ],
      "title": "Object detectors emerge in deep scene cnns",
      "venue": "arXiv preprint arXiv:1412.6856,",
      "year": 2014
    },
    {
      "authors": [
        "B. Zhou",
        "A. Khosla",
        "A. Lapedriza",
        "A. Oliva",
        "A. Torralba"
      ],
      "title": "Learning deep features for discriminative localization",
      "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "year": 2016
    }
  ],
  "sections": [
    {
      "text": "In this paper, we make two main contributions: First, we propose a general framework for learning different kinds of explanations for any black box algorithm. Second, we specialise the framework to find the part of an image most responsible for a classifier decision. Unlike previous works, our method is model-agnostic and testable because it is grounded in explicit and interpretable image perturbations."
    },
    {
      "heading": "1. Introduction",
      "text": "Given the powerful but often opaque nature of modern black box predictors such as deep neural networks [4, 5], there is a considerable interest in explaining and understanding predictors a-posteriori, after they have been learned. This remains largely an open problem. One reason is that we lack a formal understanding of what it means to explain a classifier. Most of the existing approaches [19, 16, 8, 7, 9, 19], etc., often produce intuitive visualizations; however, since such visualizations are primarily heuristic, their meaning remains unclear.\nIn this paper, we revisit the concept of \u201cexplanation\u201d at a formal level, with the goal of developing principles and methods to explain any black box function f , e.g. a neural network object classifier. Since such a function is learned automatically from data, we would like to understand what f has learned to do and how it does it. Answering the \u201cwhat\u201d question means determining the properties of the map. The \u201chow\u201d question investigates the internal mechanisms that allow the map to achieve these properties. We focus mainly on the \u201cwhat\u201d question and argue that it can\nbe answered by providing interpretable rules that describe the input-output relationship captured by f . For example, one rule could be that f is rotation invariant, in the sense that \u201cf(x) = f(x\u2032) whenever images x and x\u2032 are related by a rotation\u201d.\nIn this paper, we make several contributions. First, we propose the general framework of explanations as metapredictors (sec. 2), extending [18]\u2019s work. Second, we identify several pitfalls in designing automatic explanation systems. We show in particular that neural network artifacts are a major attractor for explanations. While artifacts are informative since they explain part of the network behavior, characterizing other properties of the network requires careful calibration of the generality and interpretability of explanations. Third, we reinterpret network saliency in our framework. We show that this provides a natural generalization of the gradient-based saliency technique of [15] by integrating information over several rounds of backpropagation in order to learn an explanation. We also compare this technique to other methods [15, 16, 20, 14, 19] in terms of their meaning and obtained results."
    },
    {
      "heading": "2. Related work",
      "text": "Our work builds on [15]\u2019s gradient-based method, which backpropagates the gradient for a class label to the image layer. Other backpropagation methods include DeConvNet [19] and Guided Backprop [16, 8], which builds off of DeConvNet [19] and [15]\u2019s gradient method to produce sharper visualizations.\nAnother set of techniques incorporate network activations into their visualizations: Class Activation Mapping\n1\nar X\niv :1\n70 4.\n03 29\n6v 3\n[ cs\n.C V\n] 1\n0 Ja\nn 20\n18\n(CAM) [22] and its relaxed generalization Grad-CAM [14] visualize the linear combination of a late layer\u2019s activations and class-specific weights (or gradients for [14]), while Layer-Wise Relevance Propagation (LRP) [1] and Excitation Backprop [20] backpropagate an class-specific error signal though a network while multiplying it with each convolutional layer\u2019s activations.\nWith the exception of [15]\u2019s gradient method, the above techniques introduce different backpropagation heuristics, which results in aesthetically pleasing but heuristic notions of image saliency. They also are not model-agnostic, with most being limited to neural networks (all except [15, 1]) and many requiring architectural modifications [19, 16, 8, 22] and/or access to intermediate layers [22, 14, 1, 20].\nA few techniques examine the relationship between inputs and outputs by editing an input image and observing its effect on the output. These include greedily graying out segments of an image until it is misclassified [21] and visualizing the classification score drop when an image is occluded at fixed regions [19]. However, these techniques are limited by their approximate nature; we introduce a differentiable method that allows for the effect of the joint inclusion/exclusion of different image regions to be considered.\nOur research also builds on the work of [18, 12, 2]. The idea of explanations as predictors is inspired by the work of [18], which we generalize to new types of explanations, from classification to invariance.\nThe Local Intepretable Model-Agnostic Explanation (LIME) framework [12] is relevant to our local explanation paradigm and saliency method (sections 3.2, 4) in that both use an function\u2019s output with respect to inputs from a neighborhood around an input x0 that are generated by perturbing the image. However, their method takes much longer to converge (N = 5000 vs. our 300 iterations) and produces a coarse heatmap defined by fixed super-pixels.\nSimilar to how our paradigm aims to learn an image perturbation mask that minimizes a class score, feedback networks [2] learn gating masks after every ReLU in a network to maximize a class score. However, our masks are plainly interpretable as they directly edit the image while [2]\u2019s ReLU gates are not and can not be directly used as a visual explanation; furthermore, their method requires architectural modification and may yield different results for different networks, while ours is model-agnostic."
    },
    {
      "heading": "3. Explaining black boxes with meta-learning",
      "text": "A black box is a map f : X \u2192 Y from an input space X to an output space Y , typically obtained from an opaque learning process. To make the discussion more concrete, consider as input color images x : \u039b \u2192 R3 where \u039b = {1, . . . ,H} \u00d7 {1, . . . ,W} is a discrete domain. The output y \u2208 Y can be a boolean {\u22121,+1} telling whether the image contains an object of a certain type (e.g. a robin),\nthe probability of such an event, or some other interpretation of the image content."
    },
    {
      "heading": "3.1. Explanations as meta-predictors",
      "text": "An explanation is a rule that predicts the response of a black box f to certain inputs. For example, we can explain a behavior of a robin classifier by the rule Q1(x; f) = {x \u2208 Xc \u21d4 f(x) = +1}, where Xc \u2282 X is the subset of all the robin images. Since f is imperfect, any such rule applies only approximately. We can measure the faithfulness of the explanation as its expected prediction error: L1 = E[1 \u2212 \u03b4Q1(x;f)], where \u03b4Q is the indicator function of event Q. Note that Q1 implicitly requires a distribution p(x) over possible images X . Note also that L1 is simply the expected prediction error of the classifier. Unless we did not know that f was trained as a robin classifier, Q1 is not very insightful, but it is interpretable since Xc is.\nExplanations can also make relative statements about black box outcomes. For example, a black box f , could be rotation invariant: Q2(x, x\u2032; f) = {x \u223crot x\u2032 \u21d2 f(x) = f(x\u2032)}, where x \u223crot x\u2032 means that x and x\u2032 are related by a rotation. Just like before, we can measure the faithfulness of this explanation as L2 = E[1\u2212\u03b4Q2(x,x\u2032;f)|x \u223c x\u2032].1 This rule is interpretable because the relation \u223crot is.\nLearning explanations. A significant advantage of formulating explanations as meta predictors is that their faithfulness can be measured as prediction accuracy. Furthermore, machine learning algorithms can be used to discover explanations automatically, by finding explanatory rules Q that apply to a certain classifier f out of a large pool of possible rules Q.\nIn particular, finding the most accurate explanation Q is similar to a traditional learning problem and can be formulated computationally as a regularized empirical risk minimization such as:\nmin Q\u2208Q \u03bbR(Q) + 1 n n\u2211 i=1 L(Q(xi; f), xi, f), xi \u223c p(x). (1)\nHere, the regularizer R(Q) has two goals: to allow the explanation Q to generalize beyond the n samples x1, . . . , xn considered in the optimization and to pick an explanationQ which is simple and thus, hopefully, more interpretable.\nMaximally informative explanations. Simplicity and interpretability are often not sufficient to find good explanations and must be paired with informativeness. Consider the following variant of rule Q2: Q3(x, x\u2032; f, \u03b8) = {x \u223c\u03b8 x\u2032 \u21d2 f(x) = f(x\u2032)}, where x \u223c\u03b8 x\u2032 means that x and x\u2032\n1For rotation invariance we condition on x \u223c x\u2032 because the probability of independently sampling rotated x and x\u2032 is zero, so that, without conditioning, Q2 would be true with probability 1.\nare related by a rotation of an angle \u2264 \u03b8. Explanations for larger angles imply the ones for smaller ones, with \u03b8 = 0 being trivially satisfied. The regularizer R(Q3(\u00b7; \u03b8)) = \u2212\u03b8 can then be used to select a maximal angle and thus find an explanation that is as informative as possible.2"
    },
    {
      "heading": "3.2. Local explanations",
      "text": "A local explanation is a ruleQ(x; f, x0) that predicts the response of f in a neighborhood of a certain point x0. If f is smooth at x0, it is natural to construct Q by using the first-order Taylor expansion of f :\nf(x) \u2248 Q(x; f, x0) = f(x0) + \u3008\u2207f(x0), x\u2212 x0\u3009. (2)\nThis formulation provides an interpretation of [15]\u2019s saliency maps, which visualize the gradient S1(x0) = \u2207f(x0) as an indication of salient image regions. They argue that large values of the gradient identify pixels that strongly affect the network output. However, an issue is that this interpretation breaks for a linear classifier: If f(x) = \u3008w, x\u3009+ b, S1(x0) = \u2207f(x0) = w is independent of the image x0 and hence cannot be interpreted as saliency.\nThe reason for this failure is that eq. (2) studies the variation of f for arbitrary displacements \u2206x = x\u2212x0 from x0 and, for a linear classifier, the change is the same regardless of the starting point x0. For a non-linear black box f such as a neural network, this problem is reduced but not eliminated, and can explain why the saliency map S1 is rather diffuse, with strong responses even where no obvious information can be found in the image (fig. 3).\nWe argue that the meaning of explanations depends in large part on the meaning of varying the input x to the black box. For example, explanations in sec. 3.1 are based on letting x vary in image category or in rotation. For saliency, one is interested in finding image regions that impact f \u2019s output. Thus, it is natural to consider perturbations x obtained by deleting subregions of x0. If we model deletion by multiplying x0 point-wise by a mask m,\n2Naively, strict invariance for any \u03b8 > 0 implies invariance to arbitrary rotations as small rotations compose into larger ones. However, the formulation can still be used to describe rotation insensitivity (when f varies slowly with rotation), or \u223c\u03b8\u2019s meaning can be changed to indicate rotation w.r.t. a canonical \u201cupright\u201d direction for a certain object classes, etc.\nthis amounts to studying the function f(x0 m)3. The Taylor expansion of f at m = (1, 1, . . . , 1) is S2(x0) = df(x0 m)/dm|m=(1,...,1) = \u2207f(x0) x0. For a linear classifier f , this results in the saliency S2(x0) = w x0, which is large for pixels for which x0 and w are large simultaneously. We refine this idea for non-linear classifiers in the next section."
    },
    {
      "heading": "4. Saliency revisited",
      "text": ""
    },
    {
      "heading": "4.1. Meaningful image perturbations",
      "text": "In order to define an explanatory rule for a black box f(x), one must start by specifying which variations of the input x will be used to study f . The aim of saliency is to identify which regions of an image x0 are used by the black box to produce the output value f(x0). We can do so by observing how the value of f(x) changes as x is obtained \u201cdeleting\u201d different regions R of x0. For example, if f(x0) = +1 denotes a robin image, we expect that f(x) = +1 as well unless the choice of R deletes the robin from the image. Given that x is a perturbation of x0, this is a local explanation (sec. 3.2) and we expect the explanation to characterize the relationship between f and x0.\nWhile conceptually simple, there are several problems with this idea. The first one is to specify what it means \u201cdelete\u201d information. As discussed in detail in sec. 4.3, we are generally interested in simulating naturalistic or plausible imaging effect, leading to more meaningful perturbations and hence explanations. Since we do not have access to the image generation process, we consider three obvious proxies: replacing the region R with a constant value, injecting noise, and blurring the image (fig. 4).\nFormally, let m : \u039b\u2192 [0, 1] be a mask, associating each pixel u \u2208 \u039b with a scalar valuem(u). Then the perturbation operator is defined as\n[\u03a6(x0;m)](u) =  m(u)x0(u) + (1\u2212m(u))\u00b50, constant, m(u)x0(u) + (1\u2212m(u))\u03b7(u), noise,\u222b g\u03c30m(u)(v \u2212 u)x0(v) dv, blur,\nwhere \u00b50 is an average color, \u03b7(u) are i.i.d. Gaussian noise samples for each pixel and \u03c30 is the maximum isotropic\n3 is the Hadamard or element-wise product of vectors.\nstandard deviation of the Gaussian blur kernel g\u03c3 (we use \u03c30 = 10, which yields a significantly blurred image)."
    },
    {
      "heading": "4.2. Deletion and preservation",
      "text": "Given an image x0, our goal is to summarize compactly the effect of deleting image regions in order to explain the behavior of the black box. One approach to this problem is to find deletion regions that are maximally informative.\nIn order to simplify the discussion, in the rest of the paper we consider black boxes f(x) \u2208 RC that generate a vector of scores for different hypotheses about the content of the image (e.g. as a softmax probability layer in a neural network). Then, we consider a \u201cdeletion game\u201d where the goal is to find the smallest deletion mask m that causes the score fc(\u03a6(x0;m)) fc(x0) to drop significantly, where c is the target class. Finding m can be formulated as the following learning problem:\nm\u2217 = argmin m\u2208[0,1]\u039b \u03bb\u20161\u2212m\u20161 + fc(\u03a6(x0;m)) (3)\nwhere \u03bb encourages most of the mask to be turned off (hence deleting a small subset of x0). In this manner, we can find a highly informative region for the network.\nOne can also play an symmetric \u201cpreservation game\u201d, where the goal is to find the smallest subset of the image that must be retained to preserve the score fc(\u03a6(x0;m)) \u2265 fc(x0): m\u2217 = argminm \u03bb\u2016m\u20161\u2212fc(\u03a6(x0;m)). The main difference is that the deletion game removes enough evidence to prevent the network from recognizing the object in the image, whereas the preservation game finds a minimal subset of sufficient evidence.\nIterated gradients. Both optimization problems are solved by using a local search by means of gradient descent methods. In this manner, our method extracts information from the black box f by computing its gradient, similar to the approach of [15]. However, it differs in that it extracts this information progressively, over several gradient evaluations, accumulating increasingly more information over time."
    },
    {
      "heading": "4.3. Dealing with artifacts",
      "text": "By committing to finding a single representative perturbation, our approach incurs the risk of triggering artifacts of the black box. Neural networks, in particular, are known to be affected by surprising artifacts [5, 10, 7]; these works demonstrate that it is possible to find particular inputs that can drive the neural network to generate nonsensical or unexpected outputs. This is not entirely surprising since neural networks are trained discriminatively on natural image statistics. While not all artifacts look \u201cunnatural\u201d, nevertheless they form a subset of images that is sampled with negligible probability when the network is operated normally.\nAlthough the existence and characterization of artifacts is an interesting problem per se, we wish to characterize the behavior of black boxes under normal operating conditions. Unfortunately, as illustrated in fig. 5, objectives such as eq. (3) are strongly attracted by such artifacts, and naively learn subtly-structured deletion masks that trigger them. This is particularly true for the noise and constant perturbations as they can more easily than blur create artifacts using sharp color contrasts (fig. 5, bottom row).\nWe suggests two approaches to avoid such artifacts in generating explanations. The first one is that powerful explanations should, just like any predictor, generalize as much as possible. For the deletion game, this means not relying on the details of a singly-learned mask m. Hence, we reformulate the problem to apply the maskm stochastically, up to small random jitter.\nSecond, we argue that masks co-adapted with network artifacts are not representative of natural perturbations. As noted before, the meaning of an explanation depends on the meaning of the changes applied to the input x; to obtain a mask more representative of natural perturbations we can encourage it to have a simple, regular structure which cannot be co-adapted to artifacts. We do so by regularizing m in total-variation (TV) norm and upsampling it from a low resolution version.\nWith these two modifications, eq. (3) becomes:\nmin m\u2208[0,1]\u039b \u03bb1\u20161\u2212m\u20161 + \u03bb2 \u2211 u\u2208\u039b \u2016\u2207m(u)\u2016\u03b2\u03b2\n+ E\u03c4 [fc(\u03a6(x0(\u00b7 \u2212 \u03c4),m))], (4)\nwhere M(v) =\n\u2211\nu g\u03c3m(v/s \u2212 u)m(u). is the upsampled mask and g\u03c3m is a 2D Gaussian kernel. Equation (4) can be optimized using stochastic gradient descent.\nImplementation details. Unless otherwise specified, the visualizations shown were generated using Adam [3] to minimize GoogLeNet\u2019s [17] softmax probability of the target class by using the blur perturbation with the following parameters: learning rate \u03b3 = 0.1, N = 300 iterations, \u03bb1 = 10 \u22124, \u03bb2 = 10 \u22122, \u03b2 = 3, upsampling a mask (28\u00d728 for GoogLeNet) by a factor of \u03b4 = 8, blurring the upsampled mask with g\u03c3m=5, and jittering the mask by drawing an integer from the discrete uniform distribution on [0, \u03c4) where \u03c4 = 4. We initialize the mask as the smallest centered circular mask that suppresses the score of the original image by 99% when compared to that of the fully perturbed image, i.e. a fully blurred image."
    },
    {
      "heading": "5. Experiments",
      "text": ""
    },
    {
      "heading": "5.1. Interpretability",
      "text": "An advantage of the proposed framework is that the generated visualizations are clearly interpretable. For example, the deletion game produces a minimal mask that prevents the network from recognizing the object.\nWhen compared to other techniques (fig. 2), this method can pinpoint the reason why a certain object is recognized without highlighting non-essential evidence. This can be noted in fig. 2 for the CD player (row 7) where other visualizations also emphasize the neighboring speakers, and similarly for the cliff (row 3), the street sign (row 4), and the sunglasses (row 8). Sometimes this shows that only a part of an object is essential: the face of the Pekenese dog (row 2), the upper half of the truck (row 6), and the spoon on the chocolate sauce plate (row 1) are all found to be minimally sufficient parts.\nWhile contrastive excitation backprop generated\nheatmaps that were most similar to our masks, our method introduces a quantitative criterion (i.e., maximally suppressing a target class score), and its verifiable nature (i.e., direct edits to an image), allows us to compare differing proposed saliency explanations and demonstrate that our learned masks are better on this metric. In fig. 6, row 2, we show that applying a bounded perturbation informed by our learned mask significantly suppresses the truck softmax score, whereas a boxed perturbation on the truck\u2019s back bumper, which is highlighted by contrastive excitation backprop in fig. 2, row 6, actually increases the score from 0.717 to 0.850.\nThe principled interpretability of our method also allows us to identify instances when an algorithm may have learned the wrong association. In the case of the chocolate sauce in fig. 6, row 1, it is surprising that the spoon is highlighted by our learned mask, as one might expect the sauce-filled jar to be more salient. However, manually perturbing the image reveals that indeed the spoon is more suppressive than the jar. One explanation is that the ImageNet \u201cchocolate sauce\u201d images contain more spoons than jars, which appears to be true upon examining some images. More generally, our method allows us to diagnose highly-predictive yet non-intuitive and possibly misleading correlations by identified machine learning algorithms in the data."
    },
    {
      "heading": "5.2. Deletion region representativeness",
      "text": "To test that our learned masks are generalizable and robust against artifacts, we simplify our masks by further blurring them and then slicing them into binary masks by thresholding the smoothed masks by \u03b1 \u2208 [0 : 0.05 : 0.95] (fig. 7, top; \u03b1 \u2208 [0.2, 0.6] tends to cover the salient part identified by the learned mask). We then use these simplified masks to edit a set of 5,000 ImageNet images with constant, noise, and blur perturbations. Using GoogLeNet [17], we compute normalized softmax probabilities4 (fig. 7, bottom). The fact that these simplified masks quickly suppress scores as \u03b1 increases for all three perturbations gives confidence that the learned masks are identifying the right regions to perturb and are generalizable to a set of extracted masks and other perturbations that they were not trained on."
    },
    {
      "heading": "5.3. Minimality of deletions",
      "text": "In this experiments we assess the ability of our method to correctly identify a minimal region that suppresses the object. Given the output saliency map, we normalize its intensities to lie in the range [0, 1], threshold it with h \u2208 [0 : 0.1 : 1], and fit the tightest bounding box around the resulting heatmap. We then blur the image in the box and compute the normalized4 target softmax probability from\n4p\u2032 = p\u2212 p0 p0 \u2212 pb , where p, p0, pb are the masked, original, and fully\nblurred images\u2019 scores\nGoogLeNet [17] of the partially blurred image. From these bounding boxes and normalized scores, for a given amount of score suppression, we find the smallest bounding box that achieves that amount of suppression. Figure 8 shows that, on average, our method yields the smallest minimal bounding boxes when considering suppressive effects of 80%, 90%, 95%, and 99%. These results show that our method finds a small salient area that strongly impacts the network."
    },
    {
      "heading": "5.4. Testing hypotheses: animal part saliency",
      "text": "From qualitatively examining learned masks for different animal images, we noticed that faces appeared to be more salient than appendages like feet. Because we produce dense heatmaps, we can test this hypothesis. From an annotated subset of the ImageNet dataset that identifies the keypoint locations of non-occluded eyes and feet of vertebrate animals [11], we select images from classes that have at least 10 images which each contain at least one eye and foot annotation, resulting in a set of 3558 images from 76 animal classes (fig. 9). For every keypoint, we calculate the average heatmap intensity of a 5 \u00d7 5 window around the\nkeypoint. For all 76 classes, the mean average intensity of eyes were lower and thus more salient than that of feet (see supplementary materials for class-specific results)."
    },
    {
      "heading": "5.5. Adversarial defense",
      "text": "Adversarial examples [5] are often generated using a complementary optimization procedure to our method that learns a imperceptible pattern of noise which causes an image to be misclassified when added to it. Using our reimplementation of the highly effective one-step iterative method ( = 8) [5] to generate adversarial examples, our method yielded visually distinct, abnormal masks compared to those produced on natural images (fig. 10, left). We train an Alexnet [4] classifier (learning rate \u03bblr = 10\u22122, weight decay \u03bbL1 = 10\u22124, and momentum \u03b3 = 0.9) to distinguish between clean and adversarial images by using a given heatmap visualization with respect to the top predicted class on the clean and adversarial images (fig. 10, right); our method greatly outperforms the other methods and achieves a discriminating accuracy of 93.6%.\nLastly, when our learned masks are applied back to their corresponding adversarial images, they not only minimize the adversarial label but often allow the original, predicted label from the clean image to rise back as the top predicted class. Our method recovers the original label predicted on the clean image 40.64% of time and the ground truth label 37.32% (N = 5000). Moreover, 100% of the time the original, predicted label was recovered as one of top-5 predicted labels in the \u201cmask+adversarial\u201d setting. To our knowledge, this is the first work that is able to recover originally predicted labels without any modification to the training set-up and/or network architecture."
    },
    {
      "heading": "5.6. Localization and pointing",
      "text": "Saliency methods are often assessed in terms of weaklysupervised localization and a pointing game [20], which tests how discriminative a heatmap method is by calculating the precision with which a heatmap\u2019s maximum point lies on an instance of a given object class, for more harder datasets like COCO [6]. Because the deletion game is meant to discover minimal salient part and/or spurious correlation, we do not expect it to be particularly competitive on localization and pointing but tested them for completeness.\nFor localization, similar to [20, 2], we predict a bounding box for the most dominant object in each of \u223c50k\nImageNet [13] validation images and employ three simple thresholding methods for fitting bounding boxes. First, for value thresholding, we normalize heatmaps to be in the range of [0, 1] and then threshold them by their value with \u03b1 \u2208 [0 : 0.05 : 0.95]. Second, for energy thresholding [2], we threshold heatmaps by the percentage of energy their most salient subset covered with \u03b1 \u2208 [0 : 0.05 : 0.95]. Finally, with mean thresholding [20], we threshold a heatmap by \u03c4 = \u03b1\u00b5I , where \u00b5I is the mean intensity of the heatmap and \u03b1 \u2208 [0 : 0.5 : 10]. For each thresholding method, we search for the optimal \u03b1 value on a heldout set. Localization error was calculated as the IOU with a threshold of 0.5.\nTable 1 confirms that our method performs reasonably and shows that the three thresholding techniques affect each method differently. Non-contrastive, excitation backprop [20] performs best when using energy and mean thresholding; however, our method performs best with value thresholding and is competitive when using the other methods: It beats gradient [15] and guided backprop [16] when using energy thresholding; beats LRP [1], CAM [22], and contrastive excitation backprop [20] when using mean thresholding (recall from fig. 2 that the contrastive method is visually most similar to mask); and out-performs GradCAM [14] and occlusion [19] for all thresholding methods.\nFor pointing, table 2 shows that our method outperforms the center baseline, gradient, and guided backprop methods and beats Grad-CAM on the set of difficult images (images for which 1) the total area of the target category is less than 25% of the image and 2) there are at least two different object classes). We noticed qualitatively that our method did not produce salient heatmaps when objects were very small. This is due to L1 and TV regularization, which yield wellformed masks for easily visible objects. We test two variants of occlusion [19], blur and variable occlusion, to interrogate if 1) the blur perturbation with smoothed masks\nis most effective, and 2) using the smallest, highly suppressive mask is sufficient (Occ\u00a7 and V-Occ in table 2 respectively). Blur occlusion outperforms all methods except contrast excitation backprop while variable while variable occlusion outperforms all except contrast excitation backprop and the other occlusion methods, suggesting that our perturbation choice of blur and principle of identifying the smallest, highly suppressive mask is sound even if our implementation struggles on this task (see supplementary materials for examples and implementation details)."
    },
    {
      "heading": "6. Conclusions",
      "text": "We propose a comprehensive, formal framework for learning explanations as meta-predictors. We also present a novel image saliency paradigm that learns where an algorithm looks by discovering which parts of an image most affect its output score when perturbed. Unlike many saliency techniques, our method explicitly edits to the image, making it interpretable and testable. We demonstrate numerous applications of our method, and contribute new insights into the fragility of neural networks and their susceptibility to artifacts."
    }
  ],
  "title": "Interpretable Explanations of Black Boxes by Meaningful Perturbation",
  "year": 2018
}
